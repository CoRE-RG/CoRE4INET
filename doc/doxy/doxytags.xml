<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>APIPayload_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_a_p_i_payload__m_8h</filename>
    <class kind="class">TTEthernetModel::APIPayload</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_a_p_i_payload__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a6281240ab3b6b517511d0d14bccfd745</anchor>
      <arglist>(cCommBuffer *b, APIPayload &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>afb69a66fe1825ae4a81ce48bcf2c2930</anchor>
      <arglist>(cCommBuffer *b, APIPayload &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BGBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_b_g_buffer_8cc</filename>
    <includes id="_b_g_buffer_8cc" name="BGBuffer.cc" local="yes" imported="no">BGBuffer.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1a30572760654f2bc826ac57dcd5ba75</anchor>
      <arglist>(BGBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BGBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_b_g_buffer_8h</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <class kind="class">TTEthernetModel::BGBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>BGQueueBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_b_g_queue_buffer_8cc</filename>
    <includes id="_b_g_queue_buffer_8cc" name="BGQueueBuffer.cc" local="yes" imported="no">BGQueueBuffer.h</includes>
    <includes id="_b_g_buffer_8h" name="BGBuffer.h" local="no" imported="no">BGBuffer.h</includes>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="no" imported="no">QueueBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_b_g_queue_buffer_8cc.html</anchorfile>
      <anchor>ac8b4453f9ee99e61d74b2a5daa43b890</anchor>
      <arglist>(BGQueueBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BGQueueBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_b_g_queue_buffer_8h</filename>
    <includes id="_b_g_buffer_8h" name="BGBuffer.h" local="no" imported="no">BGBuffer.h</includes>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="no" imported="no">QueueBuffer.h</includes>
    <class kind="class">TTEthernetModel::BGQueueBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>BGTrafficHandle.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_b_g_traffic_handle_8cc</filename>
    <includes id="_b_g_traffic_handle_8cc" name="BGTrafficHandle.cc" local="yes" imported="no">BGTrafficHandle.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ETHERAPP_BUFFER_SAP</name>
      <anchorfile>_b_g_traffic_handle_8cc.html</anchorfile>
      <anchor>adfda9e1906c8a96fad2fdbc2341c1f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a681d6f2c0140f3349c5d85c1484f0497</anchor>
      <arglist>(BGTrafficHandle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BGTrafficHandle.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_b_g_traffic_handle_8h</filename>
    <class kind="class">TTEthernetModel::BGTrafficHandle</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Buffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_buffer_8cc</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_buffer_8cc.html</anchorfile>
      <anchor>a28f601bb9650a3195e4330d5cb702404</anchor>
      <arglist>(Buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Buffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_buffer_8h</filename>
    <class kind="class">TTEthernetModel::Buffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>BufferManager.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_buffer_manager_8cc</filename>
    <includes id="_buffer_manager_8cc" name="BufferManager.cc" local="yes" imported="no">BufferManager.h</includes>
    <includes id="_buffer_8h" name="Buffer.h" local="no" imported="no">buffer/Buffer.h</includes>
    <includes id="_t_t_e_input_8h" name="TTEInput.h" local="no" imported="no">TTEInput.h</includes>
    <includes id="_t_t_e_output_8h" name="TTEOutput.h" local="no" imported="no">TTEOutput.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <includes id="_configuration_utils_8h" name="ConfigurationUtils.h" local="no" imported="no">configuration/ConfigurationUtils.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>X_POS_GUIBUFFER</name>
      <anchorfile>_buffer_manager_8cc.html</anchorfile>
      <anchor>a5d58c4c05342eacbc58f8a1a395b7e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Y_POS_GUIBUFFER</name>
      <anchorfile>_buffer_manager_8cc.html</anchorfile>
      <anchor>a3b9102aec9efd2ac4df8fcf0656089d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ae002bcf11610f9579cd285dc66a3fb9c</anchor>
      <arglist>(BufferManager)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BufferManager.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_buffer_manager_8h</filename>
    <class kind="class">TTEthernetModel::BufferManager</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Callback.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_callback_8cc</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="yes" imported="no">TTBuffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_callback_8cc" name="Callback.cc" local="yes" imported="no">Callback.h</includes>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <includes id="_t_t_e_a_p_i_application_base_8h" name="TTEAPIApplicationBase.h" local="yes" imported="no">TTEAPIApplicationBase.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Callback.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_callback_8h</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="yes" imported="no">TTBuffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <class kind="class">TTEthernetModel::Callback</class>
    <class kind="class">TTEthernetModel::APICallback</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="typedef">
      <type>void(*</type>
      <name>cbFunc</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a569061ba77b42c07ef513a4288990de2</anchor>
      <arglist>)(void *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConfigurationUtils.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/configuration/</path>
    <filename>_configuration_utils_8cc</filename>
    <includes id="_configuration_utils_8cc" name="ConfigurationUtils.cc" local="yes" imported="no">ConfigurationUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>ConfigurationUtils.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/configuration/</path>
    <filename>_configuration_utils_8h</filename>
    <class kind="class">ConfigurationUtils</class>
  </compound>
  <compound kind="file">
    <name>CTFrame_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/ethernet/</path>
    <filename>_c_t_frame__m_8h</filename>
    <class kind="class">TTEthernetModel::CTFrame</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_c_t_frame__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a080dc3cdd596c24613483a3d2267271d</anchor>
      <arglist>(cCommBuffer *b, CTFrame &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a5d4a9847358a15b1f0a881220cbe3b2e</anchor>
      <arglist>(cCommBuffer *b, CTFrame &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DoubleBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_double_buffer_8cc</filename>
    <includes id="_double_buffer_8cc" name="DoubleBuffer.cc" local="yes" imported="no">DoubleBuffer.h</includes>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
  </compound>
  <compound kind="file">
    <name>DoubleBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_double_buffer_8h</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <class kind="class">TTEthernetModel::DoubleBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Incoming.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_incoming_8cc</filename>
    <includes id="_incoming_8cc" name="Incoming.cc" local="yes" imported="no">Incoming.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aeea9743591e321db140489ba522d583b</anchor>
      <arglist>(Incoming)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Incoming.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_incoming_8h</filename>
    <class kind="class">TTEthernetModel::Incoming</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>index.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/</path>
    <filename>index_8h</filename>
  </compound>
  <compound kind="file">
    <name>QueueBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_queue_buffer_8cc</filename>
    <includes id="_queue_buffer_8cc" name="QueueBuffer.cc" local="yes" imported="no">QueueBuffer.h</includes>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>QueueBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_queue_buffer_8h</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <class kind="class">TTEthernetModel::QueueBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RCBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_buffer_8cc</filename>
    <includes id="_r_c_buffer_8cc" name="RCBuffer.cc" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_c_t_frame__m_8h" name="CTFrame_m.h" local="no" imported="no">CTFrame_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa7001417b7427ebf8ec8cf7ae864a137</anchor>
      <arglist>(RCBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_buffer_8h</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <class kind="class">TTEthernetModel::RCBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RCDoubleBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_double_buffer_8cc</filename>
    <includes id="_r_c_double_buffer_8cc" name="RCDoubleBuffer.cc" local="yes" imported="no">RCDoubleBuffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="no" imported="no">RCBuffer.h</includes>
    <includes id="_double_buffer_8h" name="DoubleBuffer.h" local="no" imported="no">DoubleBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_r_c_double_buffer_8cc.html</anchorfile>
      <anchor>a7f1139b3370629e7084720e8dafa917b</anchor>
      <arglist>(RCDoubleBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCDoubleBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_double_buffer_8h</filename>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="no" imported="no">RCBuffer.h</includes>
    <includes id="_double_buffer_8h" name="DoubleBuffer.h" local="no" imported="no">DoubleBuffer.h</includes>
    <class kind="class">TTEthernetModel::RCDoubleBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RCIncoming.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_r_c_incoming_8cc</filename>
    <includes id="_r_c_incoming_8cc" name="RCIncoming.cc" local="yes" imported="no">RCIncoming.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a2264014da3e972e42d74c2304fd3b844</anchor>
      <arglist>(RCIncoming)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCIncoming.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_r_c_incoming_8h</filename>
    <class kind="class">TTEthernetModel::RCIncoming</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RCQueueBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_queue_buffer_8cc</filename>
    <includes id="_r_c_queue_buffer_8cc" name="RCQueueBuffer.cc" local="yes" imported="no">RCQueueBuffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="no" imported="no">RCBuffer.h</includes>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="no" imported="no">QueueBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_r_c_queue_buffer_8cc.html</anchorfile>
      <anchor>a3cf467195c9cb8db8d6f86b51569f216</anchor>
      <arglist>(RCQueueBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCQueueBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_queue_buffer_8h</filename>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="no" imported="no">RCBuffer.h</includes>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="no" imported="no">QueueBuffer.h</includes>
    <class kind="class">TTEthernetModel::RCQueueBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SchedulerEvent.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_scheduler_event_8cc</filename>
    <includes id="_scheduler_event_8cc" name="SchedulerEvent.cc" local="yes" imported="no">SchedulerEvent.h</includes>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Register_Class</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9ba425cc49eab27772e7d30e07e647f2</anchor>
      <arglist>(SchedulerEvent)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SchedulerEvent.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_scheduler_event_8h</filename>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <class kind="class">TTEthernetModel::SchedulerEvent</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SchedulerMessage_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_scheduler_message__m_8h</filename>
    <class kind="class">TTEthernetModel::SchedulerMessage</class>
    <class kind="class">TTEthernetModel::SchedulerEvent_Base</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_scheduler_message__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SchedulerMessageKind</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW_CYCLE</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499a2859c30aff3d9e94ebba06a6bac34622</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_TIME_EVENT</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499aba53aed0985e6c791aa7b01e73192cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMER_EVENT</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499a6cb1ab49053a3b9d013a1fcf4896ac5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a0ab391d670cfaa42a1bc4b2c5988e0fa</anchor>
      <arglist>(cCommBuffer *b, SchedulerMessage &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>acfcb7477b12f2295333c5b326a5f494a</anchor>
      <arglist>(cCommBuffer *b, SchedulerMessage &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SchedulerMessageEvents_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_scheduler_message_events__m_8h</filename>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="yes" imported="no">SchedulerEvent.h</includes>
    <class kind="class">TTEthernetModel::SchedulerActionTimeEvent</class>
    <class kind="class">TTEthernetModel::SchedulerTimerEvent</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_scheduler_message_events__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ad471f384ae651bd2e5f25cce336630fa</anchor>
      <arglist>(cCommBuffer *b, SchedulerActionTimeEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a23b567b98696d77bb7d8610d16e6f843</anchor>
      <arglist>(cCommBuffer *b, SchedulerActionTimeEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a12474326f7b9cd480e7211bd8086edc6</anchor>
      <arglist>(cCommBuffer *b, SchedulerTimerEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ac82461286dbca3f7b3ad7751b31620c0</anchor>
      <arglist>(cCommBuffer *b, SchedulerTimerEvent &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sync.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/</path>
    <filename>_sync_8cc</filename>
    <includes id="_sync_8cc" name="Sync.cc" local="yes" imported="no">Sync.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_sync_8cc.html</anchorfile>
      <anchor>a6c5adee1bfb6d396ed0e86b7030b4213</anchor>
      <arglist>(Sync)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sync.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/</path>
    <filename>_sync_8h</filename>
    <class kind="class">TTEthernetModel::Sync</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Task.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_task_8cc</filename>
    <includes id="_task_8cc" name="Task.cc" local="yes" imported="no">Task.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Task.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_task_8h</filename>
    <class kind="class">TTEthernetModel::Task</class>
    <class kind="class">TTEthernetModel::APITask</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_buffer_8cc</filename>
    <includes id="_t_t_buffer_8cc" name="TTBuffer.cc" local="yes" imported="no">TTBuffer.h</includes>
    <includes id="_buffer_8h" name="Buffer.h" local="no" imported="no">Buffer.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_t_t_buffer_empty__m_8h" name="TTBufferEmpty_m.h" local="no" imported="no">TTBufferEmpty_m.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_buffer_8cc.html</anchorfile>
      <anchor>adee5cdb85bdf1161c3941cf02d82c121</anchor>
      <arglist>(TTBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_buffer_8h</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="no" imported="no">Buffer.h</includes>
    <class kind="class">TTEthernetModel::TTBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTBufferEmpty_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_buffer_empty__m_8h</filename>
    <class kind="class">TTEthernetModel::TTBufferEmpty</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_t_t_buffer_empty__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a6678db5193e5777d266c3fa18f1cbd62</anchor>
      <arglist>(cCommBuffer *b, TTBufferEmpty &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a8080299cdc6b0d91f71aeab68333bcfc</anchor>
      <arglist>(cCommBuffer *b, TTBufferEmpty &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTDoubleBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_double_buffer_8cc</filename>
    <includes id="_t_t_double_buffer_8cc" name="TTDoubleBuffer.cc" local="yes" imported="no">TTDoubleBuffer.h</includes>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <includes id="_double_buffer_8h" name="DoubleBuffer.h" local="no" imported="no">DoubleBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_double_buffer_8cc.html</anchorfile>
      <anchor>a48c5c2b57fbf60fe2045a3f22bee6665</anchor>
      <arglist>(TTDoubleBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTDoubleBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_double_buffer_8h</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <includes id="_double_buffer_8h" name="DoubleBuffer.h" local="no" imported="no">DoubleBuffer.h</includes>
    <class kind="class">TTEthernetModel::TTDoubleBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTE4INETDefs.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/base/</path>
    <filename>_t_t_e4_i_n_e_t_defs_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>TTE4INET_VERSION</name>
      <anchorfile>_t_t_e4_i_n_e_t_defs_8h.html</anchorfile>
      <anchor>a6987250b99b95db595b8b00a85d384e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEAPIApplicationBase.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>_t_t_e_a_p_i_application_base_8cc</filename>
    <includes id="_t_t_e_a_p_i_application_base_8cc" name="TTEAPIApplicationBase.cc" local="yes" imported="no">TTEAPIApplicationBase.h</includes>
    <includes id="_incoming_8h" name="Incoming.h" local="yes" imported="no">Incoming.h</includes>
    <includes id="_callback_8h" name="Callback.h" local="yes" imported="no">Callback.h</includes>
    <includes id="_c_t_frame__m_8h" name="CTFrame_m.h" local="yes" imported="no">CTFrame_m.h</includes>
    <includes id="_t_t_incoming_8h" name="TTIncoming.h" local="yes" imported="no">TTIncoming.h</includes>
    <includes id="_r_c_incoming_8h" name="RCIncoming.h" local="yes" imported="no">RCIncoming.h</includes>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="yes" imported="no">TTBuffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_b_g_buffer_8h" name="BGBuffer.h" local="yes" imported="no">BGBuffer.h</includes>
    <includes id="_a_p_i_payload__m_8h" name="APIPayload_m.h" local="yes" imported="no">APIPayload_m.h</includes>
    <includes id="_task_8h" name="Task.h" local="yes" imported="no">Task.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa58d8e9b8f6e9fc06de623b534f81b80</anchor>
      <arglist>(TTEAPIApplicationBase)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_init</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a24756513da7465c672dc4183e20c75bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_start</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a456aa12d87e1467e61dd56836586165a</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_stop</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9b9ef527dc031a2cb3149a38a97e1c94</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_exit</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a23e2a9bf44e612773a2a7f1815513de3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_configure</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab646854c6e32b50cc54cd9861c04c4dc</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_conf_t *const conf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_set_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa1cf8c7a57d7e48d0b27a440a4139ff3</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_var_id_t var_id, const uint32_t var_size, const void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ac913d0815a05a381414ce63a38578107</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_ct_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a0c08e9f806ff1011806fddfb9014cce8</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_ct_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>acb8ba34f04ede8b84801a4f2be3f69b4</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_bg_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a21ea57b6e8c8056230b1b84a05196733</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_bg_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9fe764695b541e37295324189cca0379</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_write_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a2ea21eedcc3b6b8fcfe3b43d2983aeb4</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_read_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a33815fa22f3f06c00f7bfea33266a7ad</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame, tte_buf_status_t *const status)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_open_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab516575ac500afd254b63406a74670de</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame, tte_buf_status_t *const status)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_close_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa7797c51c5a1612d348cdbface7d0581</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_open_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>afa376f71c699c168c7c46bd19a58088f</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_close_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a20495ed75c9f5a8da1ee165cac3d62c9</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_buf_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>af799cbf8581cc211d531ad0c9d01cd6e</anchor>
      <arglist>(const tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_set_buf_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9ebc765b80522eb49e17a710cdcb946c</anchor>
      <arglist>(tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, const void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_flush_buffers</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a461d49f0d3593a3ca2cb6f15fda4b11d</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_flush_tt_buffers</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a07aa669e5af8f14bd4dd681312c6cfeb</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_flush_bg_buffers</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a27f4409fe960bd3c631a78a3abc0c7d0</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEAPIApplicationBase.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>_t_t_e_a_p_i_application_base_8h</filename>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <includes id="_c_t_frame__m_8h" name="CTFrame_m.h" local="yes" imported="no">CTFrame_m.h</includes>
    <class kind="class">TTEthernetModel::TTEAPIPriv</class>
    <class kind="class">TTEthernetModel::TTEAPIApplicationBase</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TTE_API_VER</name>
      <anchorfile>_t_t_e_a_p_i_application_base_8h.html</anchorfile>
      <anchor>a50b70d6be057f13cd53aebdb07f7e374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TTEAPIApplicationMessageKind</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a668234575b96b5b06f3ee757f2c8f95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_APPLICATION</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a668234575b96b5b06f3ee757f2c8f95fa64ea6e73041a2aff8b4d811e3bc39828</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEAPITestApplication.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>_t_t_e_a_p_i_test_application_8cc</filename>
    <includes id="_t_t_e_a_p_i_test_application_8cc" name="TTEAPITestApplication.cc" local="yes" imported="no">TTEAPITestApplication.h</includes>
    <includes id="_t_t_e_a_p_i_application_base_8h" name="TTEAPIApplicationBase.h" local="yes" imported="no">TTEAPIApplicationBase.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a5c5956c0d2d9d513061ce077ec72eb1a</anchor>
      <arglist>(TTEAPITestApplication)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testCallback</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a96e25ddc242fc9843315ae7758949f39</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>main</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>abc712099a1b61a09a06b1ace93447f1c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEAPITestApplication.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>_t_t_e_a_p_i_test_application_8h</filename>
    <includes id="_t_t_e_a_p_i_application_base_8h" name="TTEAPIApplicationBase.h" local="yes" imported="no">TTEAPIApplicationBase.h</includes>
    <class kind="class">TTEthernetModel::TTEAPITestApplication</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTEApplicationBase.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>_t_t_e_application_base_8cc</filename>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a03d5f3df852840d56243f2e9a5c57859</anchor>
      <arglist>(TTEApplicationBase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEApplicationBase.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>_t_t_e_application_base_8h</filename>
    <includes id="_incoming_8h" name="Incoming.h" local="yes" imported="no">Incoming.h</includes>
    <includes id="_callback_8h" name="Callback.h" local="yes" imported="no">Callback.h</includes>
    <class kind="class">TTEthernetModel::TTEApplicationBase</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTEInput.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_t_t_e_input_8cc</filename>
    <includes id="_t_t_e_input_8cc" name="TTEInput.cc" local="yes" imported="no">TTEInput.h</includes>
    <includes id="_incoming_8h" name="Incoming.h" local="no" imported="no">ctc/Incoming.h</includes>
    <includes id="_configuration_utils_8h" name="ConfigurationUtils.h" local="no" imported="no">configuration/ConfigurationUtils.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_e_input_8cc.html</anchorfile>
      <anchor>a9f503c92d53e8a2d0cea4f7edf7e3b90</anchor>
      <arglist>(TTEInput)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEInput.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_t_t_e_input_8h</filename>
    <includes id="_incoming_8h" name="Incoming.h" local="no" imported="no">ctc/Incoming.h</includes>
    <class kind="class">TTEthernetModel::TTEInput</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTEOutput.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_t_t_e_output_8cc</filename>
    <includes id="_t_t_e_output_8cc" name="TTEOutput.cc" local="yes" imported="no">TTEOutput.h</includes>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <includes id="_buffer_8h" name="Buffer.h" local="no" imported="no">Buffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="no" imported="no">RCBuffer.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <includes id="_t_t_buffer_empty__m_8h" name="TTBufferEmpty_m.h" local="no" imported="no">TTBufferEmpty_m.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_e_output_8cc.html</anchorfile>
      <anchor>a955dd25587c96a55aafb8f5201050ca5</anchor>
      <arglist>(TTEOutput)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEOutput.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_t_t_e_output_8h</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <class kind="class">TTEthernetModel::TTEOutput</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NUM_RC_PRIORITIES</name>
      <anchorfile>_t_t_e_output_8h.html</anchorfile>
      <anchor>a5cb5b8c633a00972c5fe0da72112b2de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEScheduler.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_t_t_e_scheduler_8cc</filename>
    <includes id="_t_t_e_scheduler_8cc" name="TTEScheduler.cc" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="no" imported="no">SchedulerEvent.h</includes>
    <includes id="_configuration_utils_8h" name="ConfigurationUtils.h" local="no" imported="no">configuration/ConfigurationUtils.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>acd0c2d26fd64ce9e389bf26933c682b8</anchor>
      <arglist>(TTEScheduler)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEScheduler.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_t_t_e_scheduler_8h</filename>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="no" imported="no">SchedulerEvent.h</includes>
    <class kind="class">TTEthernetModel::TTEScheduler</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTETestApp.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>_t_t_e_test_app_8cc</filename>
    <includes id="_t_t_e_test_app_8cc" name="TTETestApp.cc" local="yes" imported="no">TTETestApp.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <includes id="_c_t_frame__m_8h" name="CTFrame_m.h" local="no" imported="no">CTFrame_m.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ac08cb52af056142b87e90106292a4818</anchor>
      <arglist>(TTETestApp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTETestApp.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>_t_t_e_test_app_8h</filename>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <class kind="class">TTEthernetModel::TTETestApp</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTIncoming.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_t_t_incoming_8cc</filename>
    <includes id="_t_t_incoming_8cc" name="TTIncoming.cc" local="yes" imported="no">TTIncoming.h</includes>
    <includes id="_incoming_8h" name="Incoming.h" local="no" imported="no">Incoming.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab535594f76930f3a95f966fec03daac2</anchor>
      <arglist>(TTIncoming)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTIncoming.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_t_t_incoming_8h</filename>
    <includes id="_incoming_8h" name="Incoming.h" local="no" imported="no">Incoming.h</includes>
    <class kind="class">TTEthernetModel::TTIncoming</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTQueueBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_queue_buffer_8cc</filename>
    <includes id="_t_t_queue_buffer_8cc" name="TTQueueBuffer.cc" local="yes" imported="no">TTQueueBuffer.h</includes>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="no" imported="no">QueueBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_queue_buffer_8cc.html</anchorfile>
      <anchor>a1e46f0b515b45bca21453c39c7f0d13f</anchor>
      <arglist>(TTQueueBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTQueueBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_queue_buffer_8h</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="no" imported="no">QueueBuffer.h</includes>
    <class kind="class">TTEthernetModel::TTQueueBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="page">
    <name>whatsnew</name>
    <title>What&apos;s New</title>
    <filename>whatsnew</filename>
  </compound>
  <compound kind="page">
    <name>readme</name>
    <title>Readme</title>
    <filename>readme</filename>
  </compound>
  <compound kind="page">
    <name>install</name>
    <title>Install help</title>
    <filename>install</filename>
  </compound>
  <compound kind="group">
    <name>Applications</name>
    <title>Applications</title>
    <filename>group___applications.html</filename>
    <class kind="class">TTEthernetModel::TTEAPIApplicationBase</class>
    <class kind="class">TTEthernetModel::TTEAPITestApplication</class>
    <class kind="class">TTEthernetModel::TTEApplicationBase</class>
    <class kind="class">TTEthernetModel::TTETestApp</class>
  </compound>
  <compound kind="group">
    <name>Buffer</name>
    <title>Buffers</title>
    <filename>group___buffer.html</filename>
    <class kind="class">TTEthernetModel::BGBuffer</class>
    <class kind="class">TTEthernetModel::BGQueueBuffer</class>
    <class kind="class">TTEthernetModel::Buffer</class>
    <class kind="class">TTEthernetModel::DoubleBuffer</class>
    <class kind="class">TTEthernetModel::QueueBuffer</class>
    <class kind="class">TTEthernetModel::RCBuffer</class>
    <class kind="class">TTEthernetModel::RCDoubleBuffer</class>
    <class kind="class">TTEthernetModel::RCQueueBuffer</class>
    <class kind="class">TTEthernetModel::TTBuffer</class>
    <class kind="class">TTEthernetModel::TTDoubleBuffer</class>
    <class kind="class">TTEthernetModel::TTQueueBuffer</class>
  </compound>
  <compound kind="group">
    <name>Configuration</name>
    <title>Configuration</title>
    <filename>group___configuration.html</filename>
    <class kind="class">TTEthernetModel::BufferManager</class>
    <class kind="class">ConfigurationUtils</class>
  </compound>
  <compound kind="class">
    <name>ConfigurationUtils</name>
    <filename>class_configuration_utils.html</filename>
    <member kind="function" static="yes">
      <type>static ecorecpp::MetaModelRepository_ptr</type>
      <name>getPreloadedMMR</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>a8fa52683fd3c3332718ada090f646cbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resolveCommonAliases</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>a322b24ea573499ae087fa3b872c46c22</anchor>
      <arglist>(ecorecpp::ModelRepository_ptr mr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>mac2long</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>ac986518ab4f75521a8be6c0dd3ed9ede</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>time2ticks</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>a7926414e6e93c7288ec252ff6c45c7d3</anchor>
      <arglist>(std::string string, double tick)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>freq2s</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>a55312972db83f146ec5aa9bc44941af9</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Device_Specification::DeviceSpecification_ptr</type>
      <name>getDeviceSpecification</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>a2683d78cb18f8b928a13d62f3f33a80e</anchor>
      <arglist>(std::string device_name, Network_Configuration::NetworkConfig_ptr nc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getPortSerialNumber</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>aedd0123abd559962caf48bba0b81ca56</anchor>
      <arglist>(System_Specification::Port_ptr port, Device_Target_Mapping::Mappings_ptr map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static string</type>
      <name>getPortName</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>a67c2807de34a3487ec1469befeeb5023</anchor>
      <arglist>(System_Specification::Port_ptr port, Device_Target_Mapping::Mappings_ptr map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getVLid</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>a434355f9df412daf4e2fcbac65c54303</anchor>
      <arglist>(System_Specification::VirtualLink_ptr vl, Device_Target_Mapping::Mappings_ptr map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static System_Specification::VirtualLink_ptr</type>
      <name>getVLfromVLid</name>
      <anchorfile>class_configuration_utils.html</anchorfile>
      <anchor>a59dbadf8e616a4437d5f3418cd16c253</anchor>
      <arglist>(int vlid, Device_Target_Mapping::Mappings_ptr map)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>TTEthernetModel</name>
    <filename>namespace_t_t_ethernet_model.html</filename>
    <class kind="class">TTEthernetModel::APIPayload</class>
    <class kind="class">TTEthernetModel::Callback</class>
    <class kind="class">TTEthernetModel::APICallback</class>
    <class kind="class">TTEthernetModel::Task</class>
    <class kind="class">TTEthernetModel::APITask</class>
    <class kind="class">TTEthernetModel::TTEAPIPriv</class>
    <class kind="class">TTEthernetModel::TTEAPIApplicationBase</class>
    <class kind="class">TTEthernetModel::TTEAPITestApplication</class>
    <class kind="class">TTEthernetModel::TTEApplicationBase</class>
    <class kind="class">TTEthernetModel::TTETestApp</class>
    <class kind="class">TTEthernetModel::BGBuffer</class>
    <class kind="class">TTEthernetModel::BGQueueBuffer</class>
    <class kind="class">TTEthernetModel::Buffer</class>
    <class kind="class">TTEthernetModel::BufferManager</class>
    <class kind="class">TTEthernetModel::DoubleBuffer</class>
    <class kind="class">TTEthernetModel::QueueBuffer</class>
    <class kind="class">TTEthernetModel::RCBuffer</class>
    <class kind="class">TTEthernetModel::RCDoubleBuffer</class>
    <class kind="class">TTEthernetModel::RCQueueBuffer</class>
    <class kind="class">TTEthernetModel::TTBuffer</class>
    <class kind="class">TTEthernetModel::TTBufferEmpty</class>
    <class kind="class">TTEthernetModel::TTDoubleBuffer</class>
    <class kind="class">TTEthernetModel::TTQueueBuffer</class>
    <class kind="class">TTEthernetModel::Incoming</class>
    <class kind="class">TTEthernetModel::RCIncoming</class>
    <class kind="class">TTEthernetModel::TTIncoming</class>
    <class kind="class">TTEthernetModel::BGTrafficHandle</class>
    <class kind="class">TTEthernetModel::CTFrame</class>
    <class kind="class">TTEthernetModel::TTEInput</class>
    <class kind="class">TTEthernetModel::TTEOutput</class>
    <class kind="class">TTEthernetModel::SchedulerEvent</class>
    <class kind="class">TTEthernetModel::SchedulerMessage</class>
    <class kind="class">TTEthernetModel::SchedulerEvent_Base</class>
    <class kind="class">TTEthernetModel::SchedulerActionTimeEvent</class>
    <class kind="class">TTEthernetModel::SchedulerTimerEvent</class>
    <class kind="class">TTEthernetModel::TTEScheduler</class>
    <class kind="class">TTEthernetModel::Sync</class>
    <member kind="typedef">
      <type>void(*</type>
      <name>cbFunc</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a569061ba77b42c07ef513a4288990de2</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="enumeration">
      <name>TTEAPIApplicationMessageKind</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a668234575b96b5b06f3ee757f2c8f95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_APPLICATION</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a668234575b96b5b06f3ee757f2c8f95fa64ea6e73041a2aff8b4d811e3bc39828</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SchedulerMessageKind</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW_CYCLE</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499a2859c30aff3d9e94ebba06a6bac34622</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_TIME_EVENT</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499aba53aed0985e6c791aa7b01e73192cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMER_EVENT</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499a6cb1ab49053a3b9d013a1fcf4896ac5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a6281240ab3b6b517511d0d14bccfd745</anchor>
      <arglist>(cCommBuffer *b, APIPayload &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>afb69a66fe1825ae4a81ce48bcf2c2930</anchor>
      <arglist>(cCommBuffer *b, APIPayload &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa58d8e9b8f6e9fc06de623b534f81b80</anchor>
      <arglist>(TTEAPIApplicationBase)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_init</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a24756513da7465c672dc4183e20c75bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_start</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a456aa12d87e1467e61dd56836586165a</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_stop</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9b9ef527dc031a2cb3149a38a97e1c94</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_exit</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a23e2a9bf44e612773a2a7f1815513de3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_configure</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab646854c6e32b50cc54cd9861c04c4dc</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_conf_t *const conf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_set_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa1cf8c7a57d7e48d0b27a440a4139ff3</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_var_id_t var_id, const uint32_t var_size, const void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ac913d0815a05a381414ce63a38578107</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_ct_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a0c08e9f806ff1011806fddfb9014cce8</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_ct_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>acb8ba34f04ede8b84801a4f2be3f69b4</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_bg_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a21ea57b6e8c8056230b1b84a05196733</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_bg_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9fe764695b541e37295324189cca0379</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_write_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a2ea21eedcc3b6b8fcfe3b43d2983aeb4</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_read_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a33815fa22f3f06c00f7bfea33266a7ad</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame, tte_buf_status_t *const status)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_open_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab516575ac500afd254b63406a74670de</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame, tte_buf_status_t *const status)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_close_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa7797c51c5a1612d348cdbface7d0581</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_open_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>afa376f71c699c168c7c46bd19a58088f</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_close_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a20495ed75c9f5a8da1ee165cac3d62c9</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_buf_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>af799cbf8581cc211d531ad0c9d01cd6e</anchor>
      <arglist>(const tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_set_buf_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9ebc765b80522eb49e17a710cdcb946c</anchor>
      <arglist>(tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, const void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_flush_buffers</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a461d49f0d3593a3ca2cb6f15fda4b11d</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_flush_tt_buffers</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a07aa669e5af8f14bd4dd681312c6cfeb</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_flush_bg_buffers</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a27f4409fe960bd3c631a78a3abc0c7d0</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a5c5956c0d2d9d513061ce077ec72eb1a</anchor>
      <arglist>(TTEAPITestApplication)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testCallback</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a96e25ddc242fc9843315ae7758949f39</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>main</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>abc712099a1b61a09a06b1ace93447f1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a03d5f3df852840d56243f2e9a5c57859</anchor>
      <arglist>(TTEApplicationBase)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ac08cb52af056142b87e90106292a4818</anchor>
      <arglist>(TTETestApp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1a30572760654f2bc826ac57dcd5ba75</anchor>
      <arglist>(BGBuffer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ae002bcf11610f9579cd285dc66a3fb9c</anchor>
      <arglist>(BufferManager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa7001417b7427ebf8ec8cf7ae864a137</anchor>
      <arglist>(RCBuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a6678db5193e5777d266c3fa18f1cbd62</anchor>
      <arglist>(cCommBuffer *b, TTBufferEmpty &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a8080299cdc6b0d91f71aeab68333bcfc</anchor>
      <arglist>(cCommBuffer *b, TTBufferEmpty &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aeea9743591e321db140489ba522d583b</anchor>
      <arglist>(Incoming)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a2264014da3e972e42d74c2304fd3b844</anchor>
      <arglist>(RCIncoming)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab535594f76930f3a95f966fec03daac2</anchor>
      <arglist>(TTIncoming)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a681d6f2c0140f3349c5d85c1484f0497</anchor>
      <arglist>(BGTrafficHandle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a080dc3cdd596c24613483a3d2267271d</anchor>
      <arglist>(cCommBuffer *b, CTFrame &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a5d4a9847358a15b1f0a881220cbe3b2e</anchor>
      <arglist>(cCommBuffer *b, CTFrame &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Register_Class</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9ba425cc49eab27772e7d30e07e647f2</anchor>
      <arglist>(SchedulerEvent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a0ab391d670cfaa42a1bc4b2c5988e0fa</anchor>
      <arglist>(cCommBuffer *b, SchedulerMessage &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>acfcb7477b12f2295333c5b326a5f494a</anchor>
      <arglist>(cCommBuffer *b, SchedulerMessage &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ad471f384ae651bd2e5f25cce336630fa</anchor>
      <arglist>(cCommBuffer *b, SchedulerActionTimeEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a23b567b98696d77bb7d8610d16e6f843</anchor>
      <arglist>(cCommBuffer *b, SchedulerActionTimeEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a12474326f7b9cd480e7211bd8086edc6</anchor>
      <arglist>(cCommBuffer *b, SchedulerTimerEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ac82461286dbca3f7b3ad7751b31620c0</anchor>
      <arglist>(cCommBuffer *b, SchedulerTimerEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>acd0c2d26fd64ce9e389bf26933c682b8</anchor>
      <arglist>(TTEScheduler)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::APIPayload</name>
    <filename>class_t_t_ethernet_model_1_1_a_p_i_payload.html</filename>
    <member kind="function">
      <type></type>
      <name>APIPayload</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a9e72eb7d300c4c3946b34dc0f12cc4bc</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>APIPayload</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>add89b4361cf76fb2e1b02a767006320e</anchor>
      <arglist>(const APIPayload &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~APIPayload</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>adcce61382005e81869ed48a788b8bba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>APIPayload &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a6a7636841c9a0253c516d7bfb47da881</anchor>
      <arglist>(const APIPayload &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual APIPayload *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a9c1d1941f7e7f921212f864c74369d47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>aa977d14a191dccb1e230dff6b1d223df</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a1617bf0e4f4d36b7aaec5c41c0365a00</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDataArraySize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>aa78d332aba9881ef36103a38cc7db855</anchor>
      <arglist>(unsigned int size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getDataArraySize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a9206099c4333990a469573bf727a1d4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned char</type>
      <name>getData</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>ac17d0fcd624feff47496113533db708f</anchor>
      <arglist>(unsigned int k) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setData</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a6023b81cdd1519fd5a26e624e08f7d28</anchor>
      <arglist>(unsigned int k, unsigned char data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a2ee8093790e0015494048487e60cde0e</anchor>
      <arglist>(const APIPayload &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned char *</type>
      <name>data_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a863c858da1354795d08f183bd7151a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>data_arraysize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a50ff80a49acb7d27f6000f2a85374fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>afb61f2a267f812d598ec0afccc79b78e</anchor>
      <arglist>(const APIPayload &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Callback</name>
    <filename>class_t_t_ethernet_model_1_1_callback.html</filename>
    <member kind="function">
      <type></type>
      <name>Callback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>ac429c903d83a86d58c0fa1d25839112d</anchor>
      <arglist>(Buffer *buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFunctionPointer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a1f9693145db468086fe515a3c8f013e7</anchor>
      <arglist>(void(*functionPointer)(void *))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cbFunc</type>
      <name>getFunctionPointer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a896dfa84e9a30772145d299dfb1d6f3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFunctionArg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>adc42d514caa3a02b999bc35fd5a079a1</anchor>
      <arglist>(void *setFunctionArg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>getFunctionArg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a6d97ea9315e9c4acc5590e502ebcff3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>aa3e7f47a402a69d3c20d65bf2100d669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void(*</type>
      <name>fn</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a7293b3eef51447f1b64cdfbef2c6d6d1</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>aa380f67856c5eb956b81635083e6f598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>argSet</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a7ef8744aee5a2529d55d48d81067ee9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Buffer *</type>
      <name>buffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a4d030c5d94df6b63625cfd06e09cd757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::APICallback</name>
    <filename>class_t_t_ethernet_model_1_1_a_p_i_callback.html</filename>
    <base>TTEthernetModel::Callback</base>
    <member kind="function">
      <type></type>
      <name>APICallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_callback.html</anchorfile>
      <anchor>acf06f2db54bd5d7509fdf371121754e9</anchor>
      <arglist>(Buffer *buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_callback.html</anchorfile>
      <anchor>af24a22d40df515c22abe0965457b2e2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Task</name>
    <filename>class_t_t_ethernet_model_1_1_task.html</filename>
    <member kind="function">
      <type></type>
      <name>Task</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a18c0b610645e9b19b85d49fdf629f07a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFunctionPointer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a72955c53dc491d5ad13f9e8412714c24</anchor>
      <arglist>(void(*functionPointer)(void *))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cbFunc</type>
      <name>getFunctionPointer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a66fd75e65247e9c74761e46a0adbed80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFunctionArg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>aee238f2c43ef560dac2937dc9578dda5</anchor>
      <arglist>(void *setFunctionArg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>getFunctionArg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>adffe247a4b5c389ac8263dae059f84b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeTask</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a6528388c6375cb74a0e9463702573689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void(*</type>
      <name>fn</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a629616515cb7c427add1c32d478f6103</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>adc0838237866a338b26c2280bb1896e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>argSet</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a79bd20df62f2c8b83420b7b6f4d6f0e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::APITask</name>
    <filename>class_t_t_ethernet_model_1_1_a_p_i_task.html</filename>
    <base>TTEthernetModel::Task</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEAPIPriv</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_priv.html</filename>
    <member kind="variable">
      <type>Buffer *</type>
      <name>buffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_priv.html</anchorfile>
      <anchor>a6a893471fa70005204729eacc9c836be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EtherFrame *</type>
      <name>frame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_priv.html</anchorfile>
      <anchor>a68b9ff1f0c2431ab0e05b7f20ff35cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>data</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_priv.html</anchorfile>
      <anchor>ae37461f566a7771f6798e5e692e197ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEAPIApplicationBase</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</filename>
    <base>TTEthernetModel::TTEApplicationBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerTask</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a9472479b1788c65b84199fdd89eebbc9</anchor>
      <arglist>(unsigned int actionTime, void(*functionPointer)(void *), void *setFunctionArg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_ct_output_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a004aa5acb4b8bf25cdcb8dfa29b35569</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_bg_output_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a9493a178576b42719e346740a94758f7</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_bg_input_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>af8024cfd62c23545d3226c1fae26d504</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_ct_input_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a7441ae1141a1993ca486014cb2406ab7</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>aed85f82bfe571df81436339852f1a7a8</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_open_output_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a70ba853e240dc96c91460457c3921657</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_open_input_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>ae857de443d19fe185f14cf4d24f61b4b</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame, tte_buf_status_t *const status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_close_output_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>ac1a61c340af54c6b06b9e68373b8ef09</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_close_input_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>aa38b602984406d089b81f4676d3114d9</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_set_buf_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>ae1cd0a759a9626632cb3f72f219653c6</anchor>
      <arglist>(tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, const void *const value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_buf_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a31069033961d39a5fad323f6e33995f2</anchor>
      <arglist>(const tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>startApplication</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a7f9324b6d5675dc375a0def922b202df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a508e4c6e531a7df3c9b273ca1ca0cb15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a6a91f5372abc6bd1edd29c797c5c087c</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEAPITestApplication</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_test_application.html</filename>
    <base>TTEthernetModel::TTEAPIApplicationBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>startApplication</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_test_application.html</anchorfile>
      <anchor>ad9351f7c43a7b6053d953a122e328c3a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEApplicationBase</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_application_base.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_application_base.html</anchorfile>
      <anchor>af1c61841a520d233a320651046f8c63e</anchor>
      <arglist>(Callback *cb)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_application_base.html</anchorfile>
      <anchor>a427a8772d81dd1e3e10968c31807dd53</anchor>
      <arglist>(uint16 ctID, Buffer *buffer)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint16, std::list&lt; Buffer * &gt; &gt;</type>
      <name>buffers</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_application_base.html</anchorfile>
      <anchor>a317b0d72006c707ed070458610d899fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTETestApp</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_test_app.html</filename>
    <base>TTEthernetModel::TTEApplicationBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_test_app.html</anchorfile>
      <anchor>a276a04fb43cf3de3563c45ebc0550acc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_test_app.html</anchorfile>
      <anchor>a07fea9940a97ebef177e7dda880b39f3</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::BGBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_b_g_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::Buffer</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_b_g_buffer.html</anchorfile>
      <anchor>a211a308b66c69421bc399cec124fc9b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_b_g_buffer.html</anchorfile>
      <anchor>a91fc44bd17d4f3bf9c4f6c8f6e92b369</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::BGQueueBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_b_g_queue_buffer.html</filename>
    <base>TTEthernetModel::BGBuffer</base>
    <base>TTEthernetModel::QueueBuffer</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Buffer</name>
    <filename>class_t_t_ethernet_model_1_1_buffer.html</filename>
    <member kind="function">
      <type>EtherFrame *</type>
      <name>getFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>aa1d4eb4debc0b0769c57f897d5726a55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDestinationGate</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a89b421859697d7a8a5c10309c4b3a523</anchor>
      <arglist>(cGate *destinationGate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeDestinationGate</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a15e34ce075694416b75da6825d7e83ee</anchor>
      <arglist>(cGate *destinationGate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addReceiveCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a7a1d776c979b17d4108a39c0d8f4513e</anchor>
      <arglist>(Callback *cb, TTEApplicationBase *application)</arglist>
    </member>
    <member kind="function">
      <type>Callback *</type>
      <name>getReceiveCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ae10e7a38f55951ee20af4b28b91c5fe7</anchor>
      <arglist>(TTEApplicationBase *application)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTransmitCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>aade74911a8a34f0940e109274992a015</anchor>
      <arglist>(Callback *cb, TTEApplicationBase *application)</arglist>
    </member>
    <member kind="function">
      <type>Callback *</type>
      <name>getTransmitCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ab8f416aca0c0f61d460896f85b39e252</anchor>
      <arglist>(TTEApplicationBase *application)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a976b864b117683fbc02a043090e54db2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a8800ad2ee324013175cd231eb69cb0f8</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enqueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a7eb775139a8c4b60f4dc02542764be57</anchor>
      <arglist>(EtherFrame *newFrame)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EtherFrame *</type>
      <name>dequeue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>abd0a3ec42e4b1167cd526e42fb014f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recordPacketSent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ad89f79667e18913a0761302a7ebd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setIsEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a2411de966054f13194db1b714d5b0f1d</anchor>
      <arglist>(bool empty)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; cGate * &gt;</type>
      <name>destinationGates</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ac648d2729e20841d94b3abee8c999462</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; TTEApplicationBase *, Callback * &gt;</type>
      <name>receiveCallbacks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a37942f0c1ee909da2bdc29371e45f616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; TTEApplicationBase *, Callback * &gt;</type>
      <name>transmitCallbacks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a43c2174122aab6a6e8727ec2b0ab8c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>txPkSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>aa1ab8b8b2326252ded43a84e816e6bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>latencySignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a8dab8020603b4991ff88a6c9e019098d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initializeStatistics</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ad913ce4432ef7f7f4075be533580acbd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::BufferManager</name>
    <filename>class_t_t_ethernet_model_1_1_buffer_manager.html</filename>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer_manager.html</anchorfile>
      <anchor>a68ef4b31aa82c0ffa836a25bac0ffbd2</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer_manager.html</anchorfile>
      <anchor>a7b77186f45bf8e61809e9ab13117f0ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer_manager.html</anchorfile>
      <anchor>ab1d68a62d996c3c4be77e7385756d8d0</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::DoubleBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_double_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::Buffer</base>
    <member kind="function">
      <type></type>
      <name>DoubleBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a09a256c9f3f99f60915ce459f77461d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DoubleBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a8f71f567eac302e3eff6a8496ba06db7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enqueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a76046f00752b4f2b539b5c2b13427dcd</anchor>
      <arglist>(EtherFrame *newFrame)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EtherFrame *</type>
      <name>dequeue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a213af00b300ba26b7318c9fdee013cb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EtherFrame *</type>
      <name>frame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a0f3686cef203e3bd5aaa2fe5bf7a6d40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::QueueBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_queue_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::Buffer</base>
    <member kind="function">
      <type></type>
      <name>QueueBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>aff1e2fd154dee22cbf7b1b3b8faf6e98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enqueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>a2c05233a275aa10a7cd43c7dbacb8918</anchor>
      <arglist>(EtherFrame *newFrame)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EtherFrame *</type>
      <name>dequeue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>a3bde0c17cc704204563ddd4420f67a1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>queueLengthSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>af5b562c7fed1ef92a89ae720117379fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeStatistics</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>ab4bde61ddadc0f2aa89ab1e0511aa75a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>frames</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>a4ff8a59871277e2dd95c30e47fcae75c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::Buffer</base>
    <member kind="function">
      <type></type>
      <name>RCBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a28a7080ddfdf7e174c60e603e591a163</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RCBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a212e2052db6d39afc9eaa2ababfe0b80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetBag</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>aa1c315bc29d6e0142ca2083963dfa8ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a5d3328cee349d4ceb3127acee1f41d44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a26004d9ecf78c5ef969734abbaeaf6af</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bagExpired</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a3100b00349614e1133c9dbef3de05ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>numReset</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a209f46ba8e8256c356e633926412d29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SchedulerTimerEvent *</type>
      <name>timerMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>ae4ea236625d88fa133564931fc34ea01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCDoubleBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_double_buffer.html</filename>
    <base>TTEthernetModel::RCBuffer</base>
    <base protection="private">TTEthernetModel::DoubleBuffer</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCQueueBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_queue_buffer.html</filename>
    <base>TTEthernetModel::RCBuffer</base>
    <base>TTEthernetModel::QueueBuffer</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::Buffer</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer.html</anchorfile>
      <anchor>aef03862ddc2b35ae7d4fe02a1671dbb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer.html</anchorfile>
      <anchor>a78eff1b2851f7f86a09377237ea14847</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTBufferEmpty</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</filename>
    <member kind="function">
      <type></type>
      <name>TTBufferEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a6c481edaac22f65e33f33b901f07b7ae</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TTBufferEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>aea8b05d0af0e753bd36d89ccbb444b8e</anchor>
      <arglist>(const TTBufferEmpty &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TTBufferEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>ab6dd684f1f930388fc67865bd311b050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TTBufferEmpty &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>ab1334c1ce52ac3fb90f40e671b05823e</anchor>
      <arglist>(const TTBufferEmpty &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TTBufferEmpty *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a81168ffeefb0c21aa54dfd3293702fe5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>ac8e4b78753c335b2b409e39218f1ae83</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a48bc3cc75438d769c8d139442ac079c5</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a34dff78e66c19a20f5063156c5de6280</anchor>
      <arglist>(const TTBufferEmpty &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a3e3c9132ee0c2d33b0c9b47846f4ebde</anchor>
      <arglist>(const TTBufferEmpty &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTDoubleBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_double_buffer.html</filename>
    <base>TTEthernetModel::TTBuffer</base>
    <base>TTEthernetModel::DoubleBuffer</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTQueueBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_queue_buffer.html</filename>
    <base>TTEthernetModel::TTBuffer</base>
    <base>TTEthernetModel::QueueBuffer</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Incoming</name>
    <filename>class_t_t_ethernet_model_1_1_incoming.html</filename>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_incoming.html</anchorfile>
      <anchor>a5ac75f71601c607f38b7a96525b5b8e7</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCIncoming</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_incoming.html</filename>
    <member kind="function">
      <type></type>
      <name>RCIncoming</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_incoming.html</anchorfile>
      <anchor>a2e91469273a2dadc6ddc128765fd37f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_incoming.html</anchorfile>
      <anchor>a723830f6e453a9c1bb05cd6b81ac77f9</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>lastArrived</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_incoming.html</anchorfile>
      <anchor>ac44dce091ecefc6f3a635f2811835c69</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTIncoming</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_incoming.html</filename>
    <base>TTEthernetModel::Incoming</base>
    <member kind="function">
      <type></type>
      <name>TTIncoming</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_incoming.html</anchorfile>
      <anchor>a6d4d52ad84020314206ca1f280a07d72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TTIncoming</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_incoming.html</anchorfile>
      <anchor>a5d1ffb0940fff4fc9ef8284ca58dca6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_incoming.html</anchorfile>
      <anchor>a957fe196b6e0e5fd38c6bf3af879e14b</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EtherFrame *</type>
      <name>frame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_incoming.html</anchorfile>
      <anchor>aa29dca1540c001cbf321b4826d21b092</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::BGTrafficHandle</name>
    <filename>class_t_t_ethernet_model_1_1_b_g_traffic_handle.html</filename>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_b_g_traffic_handle.html</anchorfile>
      <anchor>a95560712bbfdfeb3b8cc0ee5ec9d1e54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_b_g_traffic_handle.html</anchorfile>
      <anchor>a63ec50dfd77c3ee9cf1e4f8420836adc</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::CTFrame</name>
    <filename>class_t_t_ethernet_model_1_1_c_t_frame.html</filename>
    <member kind="function">
      <type></type>
      <name>CTFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>ab74c6406cbcf6192f3382bb5ada7682e</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a2bf2035a4f5ef70b344111f6c62cdc9d</anchor>
      <arglist>(const CTFrame &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CTFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>aa34775dcd28bca248e4a6236ca48c56f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CTFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a5e883632cad236af244d02466f1a3702</anchor>
      <arglist>(const CTFrame &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CTFrame *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a00029d359f0f54ffb9ab68d9b524eedc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a17e1de7a6e1d0249857cf3c38d811557</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a4e0fd26075a9fa4fb6344ae09e7b70ce</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned short</type>
      <name>getCtID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a34931cb4167d9c5a8b9b5cf43b0b0bd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCtID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>af71d47380ceff7510b4462a3f45576b4</anchor>
      <arglist>(unsigned short ctID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>aa3fe11b5a1402a56ee586d16dcdf15bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a948ef6a193dc0c736d49d51bf019689f</anchor>
      <arglist>(const char *displayString)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>af15925b06dfc50729ce383e3920786c5</anchor>
      <arglist>(const CTFrame &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned short</type>
      <name>ctID_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a6bc34cd0c65afc96c4b0bc632a35aee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>opp_string</type>
      <name>displayString_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a8c9d777c8d9c9cdc60e556cbf3ebb370</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a3d3d6b1210c0c4c1bdd742397da69bb2</anchor>
      <arglist>(const CTFrame &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEInput</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_input.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addIncoming</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a3b0d7c60edcd44edd1e21fa9a86aac5f</anchor>
      <arglist>(uint16 ctID, Incoming *incoming)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a662ebf14464f337aa3a5a21ee2c8451c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a787189dd1096648e01c28fb2ae51d42f</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>ctDroppedSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>ac3e45a6edb1c107af246b74feb7ecb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCT</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a3b0e81aeb6f2cafae491db474a097eed</anchor>
      <arglist>(EtherFrame *frame)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual uint16</type>
      <name>getCTID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>acc66a60a5931d503ce0b775c5f7f695b</anchor>
      <arglist>(EtherFrame *frame)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; uint16, std::list&lt; Incoming * &gt; &gt;</type>
      <name>incomings</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a32077cb5a5db1a6df7ff18ca5a91a6f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>ct_marker</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a8914bb449830a3e16efb722ac317497b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>ct_mask</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a68dfe4bfa0f54522c2eee9edfd651f57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEOutput</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_output.html</filename>
    <member kind="function">
      <type></type>
      <name>TTEOutput</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>ab968c58c879864bd9985b5998388a2ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TTEOutput</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a4157c9b499b19acccb411a309aa7c686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerTTBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>aa915182c2ca1fa08c42d5bd7778e8049</anchor>
      <arglist>(TTBuffer *buffer)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>requestPacket</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a94831b378a881dd1677657884c75d359</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumPendingRequests</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>ac55e4e6ffd709810a2c2ca85c7fb112e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a6d424bc0883c8e7550dc0e796bf0c8cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a674f0c4a336bdaf7b5b4d01e01ef11b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a986591ead93237643e88d4020f764df0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a70262cb8679514a6b781aa655ac5090f</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>finish</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a2d5907a8b4c8f4299b83dee3dabf0add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>ttQueueLengthSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a1a9507a65aff479ff4b61888c68270ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>beQueueLengthSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>afa7b69c7f2d89563e55286cf355d41b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTransmissionAllowed</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>ad1c852f0d04c6d14b680f6d7bc76683d</anchor>
      <arglist>(EtherFrame *message)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cChannel *</type>
      <name>outChannel</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>aee61f7bffa323acc06c45781b3596284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>framesRequested</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a2568065490efdf1664edfdb1cee893f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>ttQueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a42f484692a92cd55ef9c1962f69b1aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>rcQueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a526c96163c69076a4692e84af2e0dadc</anchor>
      <arglist>[NUM_RC_PRIORITIES]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>beQueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a2746167140e2ecf8fdccc72edbc06419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; TTBuffer * &gt;</type>
      <name>ttBuffers</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a25d691c591e2153d28719e3890898886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>ttBuffersPos</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a49908d6f6f23066f82ba78702f8dcb63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerEvent</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_event.html</filename>
    <base>TTEthernetModel::SchedulerEvent_Base</base>
    <member kind="function">
      <type></type>
      <name>SchedulerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>ad741b59d49d26c2cfd704042a2e02734</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SchedulerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a99016db380a7e1bb7a02dc0f0d91e718</anchor>
      <arglist>(const SchedulerEvent &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SchedulerEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a8187e29c29291a50a78d45b11d719de1</anchor>
      <arglist>(const SchedulerEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerEvent *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a6c143fc32caf9211282a2958b99f419e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cGate *</type>
      <name>getDestinationGate</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a597c63bcc7eebb347b6e143a7b847e38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDestinationGate</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a2fb753af35fa839f02e0435cdc496878</anchor>
      <arglist>(cGate *destinationGate)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cGate *</type>
      <name>destinationGate_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>aa28d7c5c37651874570e63d928154522</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerMessage</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_message.html</filename>
    <member kind="function">
      <type></type>
      <name>SchedulerMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>ab2077211501f37cd31dff6ee4ee374e5</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SchedulerMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a305da2f25273a39ea813b27b3cd7d136</anchor>
      <arglist>(const SchedulerMessage &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchedulerMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a43301459c2bee1994e52e561a5af64a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SchedulerMessage &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>ac00f94747a5057ad9415c87289eb92ec</anchor>
      <arglist>(const SchedulerMessage &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerMessage *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a32ae982ccba2167ddd793564cbffd15b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>ac3e28dacbfef78e9d12a827be54b42e7</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a01e4bdf7a65877f11b5ffd82356e1c4b</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a2015e1f5336613b02df6d4e96ca646a0</anchor>
      <arglist>(const SchedulerMessage &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>ac2044e14e3d9d1ac902e51800c9d7794</anchor>
      <arglist>(const SchedulerMessage &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerEvent_Base</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_event___base.html</filename>
    <base>TTEthernetModel::SchedulerMessage</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchedulerEvent_Base</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>ae439484f9aa61d2ba19b0a1bad34bb53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerEvent_Base *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>ac639d29395c621c3b7fd57917b6d505a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>a8de448386e34b5c045735c77c047aa33</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>af1f20976b20dc1417325f96ab394ce0c</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>abd029a56dfc5ca28049313e65b33d8ce</anchor>
      <arglist>(const SchedulerEvent_Base &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SchedulerEvent_Base</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>a243aa907cf88c4b3c7025ccd63b12046</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SchedulerEvent_Base</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>a10a0d86db7a23d5e4f570821c5ab4024</anchor>
      <arglist>(const SchedulerEvent_Base &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SchedulerEvent_Base &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>a5cc2669857d57506d67ac227d0b8d383</anchor>
      <arglist>(const SchedulerEvent_Base &amp;other)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>adf1d99683f239d13a1798233be14ee62</anchor>
      <arglist>(const SchedulerEvent_Base &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerActionTimeEvent</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</filename>
    <base>TTEthernetModel::SchedulerEvent</base>
    <member kind="function">
      <type></type>
      <name>SchedulerActionTimeEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a905686590d90be8991a5d8a3815ae7e7</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SchedulerActionTimeEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a937e5a6ee9b99faf9c23dbfdb09dada2</anchor>
      <arglist>(const SchedulerActionTimeEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchedulerActionTimeEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>ad8e365f4556c0f682ce394029fa92de6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SchedulerActionTimeEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>add7d80b622dd75103a97245a5056e3c5</anchor>
      <arglist>(const SchedulerActionTimeEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerActionTimeEvent *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a3a2a1b92dc94a5b1dab3d4534e4b6b8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a62172c386badbe7a544cfbd693365930</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>ad79cba341615162904aac92db3b12648</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getAction_time</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>ab720f567c5f8d6548ffe981987aa48e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAction_time</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a99401641cb4a1c30ec8392b2ed0d68c8</anchor>
      <arglist>(unsigned int action_time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a10bb01b8a3978ab70a4a0014e8c1cf3a</anchor>
      <arglist>(const SchedulerActionTimeEvent &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>action_time_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a462067ed2961a45024895cbfa665a03e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a492fce16d562409d2699c41a5b6e22f6</anchor>
      <arglist>(const SchedulerActionTimeEvent &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerTimerEvent</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</filename>
    <base>TTEthernetModel::SchedulerEvent</base>
    <member kind="function">
      <type></type>
      <name>SchedulerTimerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a6b8979d250cc0cb4456ce5d82065e540</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SchedulerTimerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>ad111f0095ab4b890371eaa9e89dcdcbb</anchor>
      <arglist>(const SchedulerTimerEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchedulerTimerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>ad69f0d7bb5b567b243fdacbdcdca726f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SchedulerTimerEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>aaaab1ea27ca07d8de442fc48aec14b24</anchor>
      <arglist>(const SchedulerTimerEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerTimerEvent *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a02d50f61dcb7958beed7b30c43115f0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>ad4abaa32d1af246731cdf6a62fdb5c5f</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a4ba27e5809696d7422e1c962211c7e6c</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getTimer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>ae9e464cecbed854f2c1b65f4677fda0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTimer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>aed673828ade2b4e814b53493af7cc967</anchor>
      <arglist>(unsigned int timer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a0f3ca0ae4f0b7d17e6e4ec7972967743</anchor>
      <arglist>(const SchedulerTimerEvent &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>timer_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>af882cb98fe36340e1a29522e69f31d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a14a86fa1e49bee86d5d943e1400202c2</anchor>
      <arglist>(const SchedulerTimerEvent &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEScheduler</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getTicks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a64bb264151d0e84841207f16d76c9f5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned long</type>
      <name>getTotalTicks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a0a07f031be84a14f0caa1575c77c149f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>aa4e1f9bf81886dfda80190f6f722936b</anchor>
      <arglist>(SchedulerEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a09132b4b872add769d397afdb065e91e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a6c787721f21a9e9d4484cc121d41d65e</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SimTime</type>
      <name>precision</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>ad367a45a23c0783dd9e8b1fd5fd91ed0</anchor>
      <arglist>(SimTime logical)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SimTime</type>
      <name>lastCycleStart</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>adb93cd3401e0c20955decca5937aa056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned long</type>
      <name>lastCycleTicks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a15a5e21cf00de7823dfc65c7ff2d3d3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Sync</name>
    <filename>class_t_t_ethernet_model_1_1_sync.html</filename>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync.html</anchorfile>
      <anchor>af7840028f2678c62f2d6044c68f85afe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync.html</anchorfile>
      <anchor>a550db39e0e0ccdb95f263c37aa1f4fe9</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>src/api/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>dir_5839ea53e0107f38916ce6e8482f5a94.html</filename>
    <file>APIPayload_m.h</file>
    <file>Callback.cc</file>
    <file>Callback.h</file>
    <file>Task.cc</file>
    <file>Task.h</file>
  </compound>
  <compound kind="dir">
    <name>src/applications/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>dir_d3c648cba0baa191ba5c49bd1b217feb.html</filename>
    <file>TTEAPIApplicationBase.cc</file>
    <file>TTEAPIApplicationBase.h</file>
    <file>TTEAPITestApplication.cc</file>
    <file>TTEAPITestApplication.h</file>
    <file>TTEApplicationBase.cc</file>
    <file>TTEApplicationBase.h</file>
    <file>TTETestApp.cc</file>
    <file>TTETestApp.h</file>
  </compound>
  <compound kind="dir">
    <name>src/base/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/base/</path>
    <filename>dir_dd9cf6547b3daea15d21a54802e373e4.html</filename>
    <file>TTE4INETDefs.h</file>
  </compound>
  <compound kind="dir">
    <name>src/buffer/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>dir_af1f04a6814f065d11c26c5e97286bcc.html</filename>
    <file>BGBuffer.cc</file>
    <file>BGBuffer.h</file>
    <file>BGQueueBuffer.cc</file>
    <file>BGQueueBuffer.h</file>
    <file>Buffer.cc</file>
    <file>Buffer.h</file>
    <file>BufferManager.cc</file>
    <file>BufferManager.h</file>
    <file>DoubleBuffer.cc</file>
    <file>DoubleBuffer.h</file>
    <file>QueueBuffer.cc</file>
    <file>QueueBuffer.h</file>
    <file>RCBuffer.cc</file>
    <file>RCBuffer.h</file>
    <file>RCDoubleBuffer.cc</file>
    <file>RCDoubleBuffer.h</file>
    <file>RCQueueBuffer.cc</file>
    <file>RCQueueBuffer.h</file>
    <file>TTBuffer.cc</file>
    <file>TTBuffer.h</file>
    <file>TTBufferEmpty_m.h</file>
    <file>TTDoubleBuffer.cc</file>
    <file>TTDoubleBuffer.h</file>
    <file>TTQueueBuffer.cc</file>
    <file>TTQueueBuffer.h</file>
  </compound>
  <compound kind="dir">
    <name>src/configuration/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/configuration/</path>
    <filename>dir_167948e7818992f0a0c2d0fef2c62405.html</filename>
    <file>ConfigurationUtils.cc</file>
    <file>ConfigurationUtils.h</file>
  </compound>
  <compound kind="dir">
    <name>src/ctc/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>dir_70493b844ed7499cbfccf4c5cccc6d42.html</filename>
    <file>Incoming.cc</file>
    <file>Incoming.h</file>
    <file>RCIncoming.cc</file>
    <file>RCIncoming.h</file>
    <file>TTIncoming.cc</file>
    <file>TTIncoming.h</file>
  </compound>
  <compound kind="dir">
    <name>src/linklayer/ethernet/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/ethernet/</path>
    <filename>dir_adb34554275f836391abf50c1254372f.html</filename>
    <file>CTFrame_m.h</file>
  </compound>
  <compound kind="dir">
    <name>src/linklayer/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>dir_bfe1ad422ae4884c3ea29f31d3cde981.html</filename>
    <dir>src/linklayer/ethernet/</dir>
    <file>BGTrafficHandle.cc</file>
    <file>BGTrafficHandle.h</file>
    <file>TTEInput.cc</file>
    <file>TTEInput.h</file>
    <file>TTEOutput.cc</file>
    <file>TTEOutput.h</file>
  </compound>
  <compound kind="dir">
    <name>src/scheduler/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>dir_ed7284d30813667d680d3c571561feb5.html</filename>
    <file>SchedulerEvent.cc</file>
    <file>SchedulerEvent.h</file>
    <file>SchedulerMessage_m.h</file>
    <file>SchedulerMessageEvents_m.h</file>
    <file>TTEScheduler.cc</file>
    <file>TTEScheduler.h</file>
  </compound>
  <compound kind="dir">
    <name>src/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/</path>
    <filename>dir_b83218604b4f51c9d011668b0c42e102.html</filename>
    <dir>src/api/</dir>
    <dir>src/applications/</dir>
    <dir>src/base/</dir>
    <dir>src/buffer/</dir>
    <dir>src/configuration/</dir>
    <dir>src/ctc/</dir>
    <dir>src/linklayer/</dir>
    <dir>src/scheduler/</dir>
    <dir>src/synchronisation/</dir>
    <file>index.h</file>
  </compound>
  <compound kind="dir">
    <name>src/synchronisation/</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/</path>
    <filename>dir_e91b5cc3279f6efa832a22015b9fa21e.html</filename>
    <file>Sync.cc</file>
    <file>Sync.h</file>
  </compound>
</tagfile>
