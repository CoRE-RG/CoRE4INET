<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>APIPayload_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_a_p_i_payload__m_8h</filename>
    <class kind="class">TTEthernetModel::APIPayload</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_a_p_i_payload__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a6281240ab3b6b517511d0d14bccfd745</anchor>
      <arglist>(cCommBuffer *b, APIPayload &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>afb69a66fe1825ae4a81ce48bcf2c2930</anchor>
      <arglist>(cCommBuffer *b, APIPayload &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BaseConfigurationManager.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/configuration/base/</path>
    <filename>_base_configuration_manager_8cc</filename>
    <includes id="_base_configuration_manager_8h" name="BaseConfigurationManager.h" local="yes" imported="no">BaseConfigurationManager.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aefd28f6a5636deeca78e7c0554fb7954</anchor>
      <arglist>(BaseConfigurationManager)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BaseConfigurationManager.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/configuration/base/</path>
    <filename>_base_configuration_manager_8h</filename>
    <class kind="class">TTEthernetModel::BaseConfigurationManager</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>BGBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_b_g_buffer_8cc</filename>
    <includes id="_b_g_buffer_8h" name="BGBuffer.h" local="yes" imported="no">BGBuffer.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1a30572760654f2bc826ac57dcd5ba75</anchor>
      <arglist>(BGBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BGBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_b_g_buffer_8h</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <class kind="class">TTEthernetModel::BGBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>BGQueueBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_b_g_queue_buffer_8cc</filename>
    <includes id="_b_g_queue_buffer_8h" name="BGQueueBuffer.h" local="yes" imported="no">BGQueueBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_b_g_queue_buffer_8cc.html</anchorfile>
      <anchor>ac8b4453f9ee99e61d74b2a5daa43b890</anchor>
      <arglist>(BGQueueBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BGQueueBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_b_g_queue_buffer_8h</filename>
    <includes id="_b_g_buffer_8h" name="BGBuffer.h" local="no" imported="no">BGBuffer.h</includes>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="no" imported="no">QueueBuffer.h</includes>
    <class kind="class">TTEthernetModel::BGQueueBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>BGTrafficHandle.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_b_g_traffic_handle_8cc</filename>
    <includes id="_b_g_traffic_handle_8h" name="BGTrafficHandle.h" local="yes" imported="no">BGTrafficHandle.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ETHERAPP_BUFFER_SAP</name>
      <anchorfile>_b_g_traffic_handle_8cc.html</anchorfile>
      <anchor>adfda9e1906c8a96fad2fdbc2341c1f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a681d6f2c0140f3349c5d85c1484f0497</anchor>
      <arglist>(BGTrafficHandle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BGTrafficHandle.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_b_g_traffic_handle_8h</filename>
    <class kind="class">TTEthernetModel::BGTrafficHandle</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Buffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_buffer_8cc</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <includes id="_t_t_e4_i_n_e_t_defs_8h" name="TTE4INETDefs.h" local="yes" imported="no">TTE4INETDefs.h</includes>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="yes" imported="no">HelperFunctions.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_buffer_8cc.html</anchorfile>
      <anchor>a28f601bb9650a3195e4330d5cb702404</anchor>
      <arglist>(Buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Buffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_buffer_8h</filename>
    <class kind="class">TTEthernetModel::Buffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Callback.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_callback_8cc</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="yes" imported="no">TTBuffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_callback_8h" name="Callback.h" local="yes" imported="no">Callback.h</includes>
    <includes id="_t_t_e_a_p_i_application_base_8h" name="TTEAPIApplicationBase.h" local="yes" imported="no">TTEAPIApplicationBase.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Callback.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_callback_8h</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="yes" imported="no">TTBuffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <class kind="class">TTEthernetModel::Callback</class>
    <class kind="class">TTEthernetModel::APICallback</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="typedef">
      <type>void(*</type>
      <name>cbFunc</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a569061ba77b42c07ef513a4288990de2</anchor>
      <arglist>)(void *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CTBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_c_t_buffer_8cc</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <includes id="_c_t_buffer_8h" name="CTBuffer.h" local="yes" imported="no">CTBuffer.h</includes>
    <includes id="_t_t_e4_i_n_e_t_defs_8h" name="TTE4INETDefs.h" local="yes" imported="no">TTE4INETDefs.h</includes>
    <includes id="_c_t_frame_8h" name="CTFrame.h" local="yes" imported="no">CTFrame.h</includes>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="yes" imported="no">HelperFunctions.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_c_t_buffer_8cc.html</anchorfile>
      <anchor>a9008536803d55339eca250922b791d55</anchor>
      <arglist>(CTBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CTBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_c_t_buffer_8h</filename>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <class kind="class">TTEthernetModel::CTBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>CTFrame.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/ethernet/</path>
    <filename>_c_t_frame_8cc</filename>
    <includes id="_c_t_frame_8h" name="CTFrame.h" local="yes" imported="no">CTFrame.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>CTFrame.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/ethernet/</path>
    <filename>_c_t_frame_8h</filename>
    <includes id="_c_t_frame__m_8h" name="CTFrame_m.h" local="yes" imported="no">CTFrame_m.h</includes>
    <class kind="class">TTEthernetModel::CTFrame</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>CTFrame_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/ethernet/</path>
    <filename>_c_t_frame__m_8h</filename>
    <class kind="class">TTEthernetModel::CTFrame_Base</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_c_t_frame__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DoubleBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_double_buffer_8cc</filename>
    <includes id="_double_buffer_8h" name="DoubleBuffer.h" local="yes" imported="no">DoubleBuffer.h</includes>
  </compound>
  <compound kind="file">
    <name>DoubleBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_double_buffer_8h</filename>
    <includes id="_c_t_buffer_8h" name="CTBuffer.h" local="yes" imported="no">CTBuffer.h</includes>
    <class kind="class">TTEthernetModel::DoubleBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>DummySync.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/base/</path>
    <filename>_dummy_sync_8cc</filename>
    <includes id="_dummy_sync_8h" name="DummySync.h" local="yes" imported="no">DummySync.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="yes" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_sync_notification__m_8h" name="SyncNotification_m.h" local="yes" imported="no">SyncNotification_m.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_dummy_sync_8cc.html</anchorfile>
      <anchor>ada4da7739ba46e11b4d2a93fb79d78fb</anchor>
      <arglist>(DummySync)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DummySync.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/base/</path>
    <filename>_dummy_sync_8h</filename>
    <includes id="_sync_base_8h" name="SyncBase.h" local="yes" imported="no">SyncBase.h</includes>
    <class kind="class">TTEthernetModel::DummySync</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>HelperFunctions.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/utilities/</path>
    <filename>_helper_functions_8cc</filename>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="yes" imported="no">HelperFunctions.h</includes>
    <member kind="function">
      <type>std::vector&lt; std::string &gt; &amp;</type>
      <name>split</name>
      <anchorfile>_helper_functions_8cc.html</anchorfile>
      <anchor>ade13b75125e1abc9b3c64dda41bd991f</anchor>
      <arglist>(const std::string &amp;string, char delimiter, std::vector&lt; std::string &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>replaceAll</name>
      <anchorfile>_helper_functions_8cc.html</anchorfile>
      <anchor>ab9d051a1ba408dea46d399d4692ee145</anchor>
      <arglist>(std::string &amp;string, std::string toFind, std::string replacement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPath</name>
      <anchorfile>_helper_functions_8cc.html</anchorfile>
      <anchor>aa7b454470a0618d9bc176ef18ba6a7c7</anchor>
      <arglist>(cPar &amp;parameter, std::string &amp;pathToAdd)</arglist>
    </member>
    <member kind="function">
      <type>cGate *</type>
      <name>gateByFullPath</name>
      <anchorfile>_helper_functions_8cc.html</anchorfile>
      <anchor>af871fed61f87700e83e5ec4a43cb388b</anchor>
      <arglist>(std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ticksToTransparentClock</name>
      <anchorfile>_helper_functions_8cc.html</anchorfile>
      <anchor>ad639e4b71630a76730add8ddf0337d12</anchor>
      <arglist>(uint64_t ticks, simtime_t tick)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>secondsToTransparentClock</name>
      <anchorfile>_helper_functions_8cc.html</anchorfile>
      <anchor>ad17b18302fcd707dc57bb68106c622da</anchor>
      <arglist>(simtime_t seconds)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>transparentClockToTicks</name>
      <anchorfile>_helper_functions_8cc.html</anchorfile>
      <anchor>ab7aebf5462b19bd64206b5ab5ebb3392</anchor>
      <arglist>(uint64_t transparentClock, simtime_t tick)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HelperFunctions.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/utilities/</path>
    <filename>_helper_functions_8h</filename>
    <member kind="function">
      <type>std::vector&lt; std::string &gt; &amp;</type>
      <name>split</name>
      <anchorfile>_helper_functions_8h.html</anchorfile>
      <anchor>ade13b75125e1abc9b3c64dda41bd991f</anchor>
      <arglist>(const std::string &amp;string, char delimiter, std::vector&lt; std::string &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>replaceAll</name>
      <anchorfile>_helper_functions_8h.html</anchorfile>
      <anchor>ab9d051a1ba408dea46d399d4692ee145</anchor>
      <arglist>(std::string &amp;string, std::string toFind, std::string replacement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPath</name>
      <anchorfile>_helper_functions_8h.html</anchorfile>
      <anchor>aa7b454470a0618d9bc176ef18ba6a7c7</anchor>
      <arglist>(cPar &amp;parameter, std::string &amp;pathToAdd)</arglist>
    </member>
    <member kind="function">
      <type>cGate *</type>
      <name>gateByFullPath</name>
      <anchorfile>_helper_functions_8h.html</anchorfile>
      <anchor>af871fed61f87700e83e5ec4a43cb388b</anchor>
      <arglist>(std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ticksToTransparentClock</name>
      <anchorfile>_helper_functions_8h.html</anchorfile>
      <anchor>ad639e4b71630a76730add8ddf0337d12</anchor>
      <arglist>(uint64_t ticks, simtime_t tick)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>secondsToTransparentClock</name>
      <anchorfile>_helper_functions_8h.html</anchorfile>
      <anchor>ad17b18302fcd707dc57bb68106c622da</anchor>
      <arglist>(simtime_t seconds)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>transparentClockToTicks</name>
      <anchorfile>_helper_functions_8h.html</anchorfile>
      <anchor>ab7aebf5462b19bd64206b5ab5ebb3392</anchor>
      <arglist>(uint64_t transparentClock, simtime_t tick)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HICM.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/HICompressionMaster/</path>
    <filename>_h_i_c_m_8cc</filename>
    <includes id="_h_i_c_m_8h" name="HICM.h" local="yes" imported="no">HICM.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a5ba144af678d02f31a868f01470be5d5</anchor>
      <arglist>(HICM)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HICM.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/HICompressionMaster/</path>
    <filename>_h_i_c_m_8h</filename>
    <includes id="_h_i_c_m_state_contex_8h" name="HICMStateContex.h" local="yes" imported="no">HICMStateContex.h</includes>
    <includes id="_h_i_c_m_states_8h" name="HICMStates.h" local="yes" imported="no">HICMStates.h</includes>
    <class kind="class">TTEthernetModel::HICM</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>HICMState.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/HICompressionMaster/</path>
    <filename>_h_i_c_m_state_8h</filename>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="no" imported="no">PCFrame_m.h</includes>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="no" imported="no">SchedulerEvent.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_synchronisation_events__m_8h" name="SynchronisationEvents_m.h" local="no" imported="no">SynchronisationEvents_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_t_t_e4_i_n_e_t_defs_8h" name="TTE4INETDefs.h" local="yes" imported="no">TTE4INETDefs.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <class kind="class">TTEthernetModel::HICMState</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>HICMStateContex.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/HICompressionMaster/</path>
    <filename>_h_i_c_m_state_contex_8h</filename>
    <includes id="_h_i_c_m_state_8h" name="HICMState.h" local="yes" imported="no">HICMState.h</includes>
    <includes id="_h_i_c_m_8h" name="HICM.h" local="yes" imported="no">HICM.h</includes>
    <class kind="class">TTEthernetModel::HICMStateContex</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>HICMStates.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/HICompressionMaster/</path>
    <filename>_h_i_c_m_states_8cc</filename>
    <includes id="_h_i_c_m_states_8h" name="HICMStates.h" local="yes" imported="no">HICMStates.h</includes>
    <includes id="_h_i_c_m_8h" name="HICM.h" local="yes" imported="no">HICM.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_synchronisation_events__m_8h" name="SynchronisationEvents_m.h" local="yes" imported="no">SynchronisationEvents_m.h</includes>
    <includes id="_t_t_e4_i_n_e_t_defs_8h" name="TTE4INETDefs.h" local="yes" imported="no">TTE4INETDefs.h</includes>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="yes" imported="no">HelperFunctions.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="yes" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>HICMStates.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/HICompressionMaster/</path>
    <filename>_h_i_c_m_states_8h</filename>
    <includes id="_h_i_c_m_state_8h" name="HICMState.h" local="yes" imported="no">HICMState.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="yes" imported="no">SchedulerMessage_m.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="yes" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="yes" imported="no">SchedulerEvent.h</includes>
    <class kind="class">TTEthernetModel::HI_CM_INIT</class>
    <class kind="class">TTEthernetModel::HI_CM_PSEUDOSYNC</class>
    <class kind="class">TTEthernetModel::HI_CM_INTEGRATE</class>
    <class kind="class">TTEthernetModel::HI_CM_STABLE</class>
    <class kind="class">TTEthernetModel::HI_CM_UNSYNC</class>
    <class kind="class">TTEthernetModel::HI_CM_SYNC</class>
    <class kind="class">TTEthernetModel::HI_CM_TENTATIVE_SYNC</class>
    <class kind="class">TTEthernetModel::HI_CM_WAIT_4_CYCLE_START</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Incoming.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_incoming_8cc</filename>
    <includes id="_incoming_8h" name="Incoming.h" local="yes" imported="no">Incoming.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aeea9743591e321db140489ba522d583b</anchor>
      <arglist>(Incoming)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Incoming.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_incoming_8h</filename>
    <class kind="class">TTEthernetModel::Incoming</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>index.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/</path>
    <filename>index_8h</filename>
  </compound>
  <compound kind="file">
    <name>PCFIncoming.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_p_c_f_incoming_8cc</filename>
    <includes id="_p_c_f_incoming_8h" name="PCFIncoming.h" local="yes" imported="no">PCFIncoming.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a483fc181e370e1891974ddf97dc9135b</anchor>
      <arglist>(PCFIncoming)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PCFIncoming.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_p_c_f_incoming_8h</filename>
    <includes id="_incoming_8h" name="Incoming.h" local="no" imported="no">Incoming.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <class kind="class">TTEthernetModel::PCFIncoming</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>PCFrame_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/ethernet/</path>
    <filename>_p_c_frame__m_8h</filename>
    <includes id="_r_c_frame__m_8h" name="RCFrame_m.h" local="yes" imported="no">RCFrame_m.h</includes>
    <class kind="class">TTEthernetModel::PCFrame</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_p_c_frame__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PCFType</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1ee6d33b2f327407c3f27ead021da60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CS</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1ee6d33b2f327407c3f27ead021da60ea69b796dac846487107a8c28c5a5b77d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IN</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1ee6d33b2f327407c3f27ead021da60eaaf186ee41615fe8d831c9e1506f4ceca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CA</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1ee6d33b2f327407c3f27ead021da60eadd95599e4fe0d23eef0bb3c80c877d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CS</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1ee6d33b2f327407c3f27ead021da60ea69b796dac846487107a8c28c5a5b77d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IN</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1ee6d33b2f327407c3f27ead021da60eaaf186ee41615fe8d831c9e1506f4ceca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CA</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1ee6d33b2f327407c3f27ead021da60eadd95599e4fe0d23eef0bb3c80c877d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ae4a0122c6f713ba7b8dbbd41845eeba9</anchor>
      <arglist>(cCommBuffer *b, PCFrame &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a096314f89dfca8a8fcceb1574e3b1a83</anchor>
      <arglist>(cCommBuffer *b, PCFrame &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>QueueBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_queue_buffer_8cc</filename>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="yes" imported="no">QueueBuffer.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>QueueBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_queue_buffer_8h</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <class kind="class">TTEthernetModel::QueueBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RCBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_buffer_8cc</filename>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_c_t_frame__m_8h" name="CTFrame_m.h" local="no" imported="no">CTFrame_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa7001417b7427ebf8ec8cf7ae864a137</anchor>
      <arglist>(RCBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_buffer_8h</filename>
    <includes id="_c_t_buffer_8h" name="CTBuffer.h" local="yes" imported="no">CTBuffer.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <class kind="class">TTEthernetModel::RCBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RCDoubleBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_double_buffer_8cc</filename>
    <includes id="_r_c_double_buffer_8h" name="RCDoubleBuffer.h" local="yes" imported="no">RCDoubleBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_r_c_double_buffer_8cc.html</anchorfile>
      <anchor>a7f1139b3370629e7084720e8dafa917b</anchor>
      <arglist>(RCDoubleBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCDoubleBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_double_buffer_8h</filename>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="no" imported="no">RCBuffer.h</includes>
    <includes id="_double_buffer_8h" name="DoubleBuffer.h" local="no" imported="no">DoubleBuffer.h</includes>
    <class kind="class">TTEthernetModel::RCDoubleBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RCFrame_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/ethernet/</path>
    <filename>_r_c_frame__m_8h</filename>
    <includes id="_c_t_frame_8h" name="CTFrame.h" local="yes" imported="no">CTFrame.h</includes>
    <class kind="class">TTEthernetModel::RCFrame</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_r_c_frame__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9eb9b41eb3bccb5e80eb1fa8ad164601</anchor>
      <arglist>(cCommBuffer *b, RCFrame &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab4abfcea993ff748ccf29c60c30ebf4c</anchor>
      <arglist>(cCommBuffer *b, RCFrame &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCIncoming.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_r_c_incoming_8cc</filename>
    <includes id="_r_c_incoming_8h" name="RCIncoming.h" local="yes" imported="no">RCIncoming.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a2264014da3e972e42d74c2304fd3b844</anchor>
      <arglist>(RCIncoming)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCIncoming.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_r_c_incoming_8h</filename>
    <includes id="_incoming_8h" name="Incoming.h" local="no" imported="no">Incoming.h</includes>
    <class kind="class">TTEthernetModel::RCIncoming</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RCQueueBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_queue_buffer_8cc</filename>
    <includes id="_r_c_queue_buffer_8h" name="RCQueueBuffer.h" local="yes" imported="no">RCQueueBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_r_c_queue_buffer_8cc.html</anchorfile>
      <anchor>a3cf467195c9cb8db8d6f86b51569f216</anchor>
      <arglist>(RCQueueBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCQueueBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_r_c_queue_buffer_8h</filename>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="no" imported="no">RCBuffer.h</includes>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="no" imported="no">QueueBuffer.h</includes>
    <class kind="class">TTEthernetModel::RCQueueBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RCTrafficSourceApp.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/trafficsource/</path>
    <filename>_r_c_traffic_source_app_8cc</filename>
    <includes id="_r_c_traffic_source_app_8h" name="RCTrafficSourceApp.h" local="yes" imported="no">RCTrafficSourceApp.h</includes>
    <includes id="_c_t_frame__m_8h" name="CTFrame_m.h" local="no" imported="no">CTFrame_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a00c1c368ff03571108abf6b923fabc10</anchor>
      <arglist>(RCTrafficSourceApp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCTrafficSourceApp.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/trafficsource/</path>
    <filename>_r_c_traffic_source_app_8h</filename>
    <includes id="_traffic_source_app_base_8h" name="TrafficSourceAppBase.h" local="yes" imported="no">TrafficSourceAppBase.h</includes>
    <class kind="class">TTEthernetModel::RCTrafficSourceApp</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>RecordPlaybackScheduler.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_record_playback_scheduler_8cc</filename>
    <includes id="_record_playback_scheduler_8h" name="RecordPlaybackScheduler.h" local="yes" imported="no">RecordPlaybackScheduler.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a02f426a3ef639893aef9c0253b6cd26a</anchor>
      <arglist>(RecordPlaybackScheduler)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RecordPlaybackScheduler.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_record_playback_scheduler_8h</filename>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <class kind="class">TTEthernetModel::RecordPlaybackScheduler</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SC.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationClient/</path>
    <filename>_s_c_8cc</filename>
    <includes id="_s_c_8h" name="SC.h" local="yes" imported="no">SC.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a52075e413525cd3c38007b6311705b44</anchor>
      <arglist>(SC)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SC.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationClient/</path>
    <filename>_s_c_8h</filename>
    <includes id="_s_c_state_contex_8h" name="SCStateContex.h" local="yes" imported="no">SCStateContex.h</includes>
    <includes id="_s_c_states_8h" name="SCStates.h" local="yes" imported="no">SCStates.h</includes>
    <class kind="class">TTEthernetModel::SC</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SchedulerEvent.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_scheduler_event_8cc</filename>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="yes" imported="no">SchedulerEvent.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Register_Class</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9ba425cc49eab27772e7d30e07e647f2</anchor>
      <arglist>(SchedulerEvent)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SchedulerEvent.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_scheduler_event_8h</filename>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <class kind="class">TTEthernetModel::SchedulerEvent</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SchedulerMessage_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_scheduler_message__m_8h</filename>
    <class kind="class">TTEthernetModel::SchedulerMessage</class>
    <class kind="class">TTEthernetModel::SchedulerEvent_Base</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_scheduler_message__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SchedulerMessageKind</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW_CYCLE</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499a2859c30aff3d9e94ebba06a6bac34622</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_TIME_EVENT</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499aba53aed0985e6c791aa7b01e73192cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMER_EVENT</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499a6cb1ab49053a3b9d013a1fcf4896ac5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NEW_CYCLE</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499a2859c30aff3d9e94ebba06a6bac34622</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ACTION_TIME_EVENT</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499aba53aed0985e6c791aa7b01e73192cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>TIMER_EVENT</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7d0551d60b68ae7bedfd5d3d30f8b499a6cb1ab49053a3b9d013a1fcf4896ac5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a0ab391d670cfaa42a1bc4b2c5988e0fa</anchor>
      <arglist>(cCommBuffer *b, SchedulerMessage &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>acfcb7477b12f2295333c5b326a5f494a</anchor>
      <arglist>(cCommBuffer *b, SchedulerMessage &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SchedulerMessageEvents_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_scheduler_message_events__m_8h</filename>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="yes" imported="no">SchedulerEvent.h</includes>
    <class kind="class">TTEthernetModel::SchedulerActionTimeEvent</class>
    <class kind="class">TTEthernetModel::SchedulerTimerEvent</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_scheduler_message_events__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ad471f384ae651bd2e5f25cce336630fa</anchor>
      <arglist>(cCommBuffer *b, SchedulerActionTimeEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a23b567b98696d77bb7d8610d16e6f843</anchor>
      <arglist>(cCommBuffer *b, SchedulerActionTimeEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a12474326f7b9cd480e7211bd8086edc6</anchor>
      <arglist>(cCommBuffer *b, SchedulerTimerEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ac82461286dbca3f7b3ad7751b31620c0</anchor>
      <arglist>(cCommBuffer *b, SchedulerTimerEvent &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SCState.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationClient/</path>
    <filename>_s_c_state_8h</filename>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="no" imported="no">SchedulerEvent.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_synchronisation_events__m_8h" name="SynchronisationEvents_m.h" local="yes" imported="no">SynchronisationEvents_m.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <class kind="class">TTEthernetModel::SCState</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SCStateContex.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationClient/</path>
    <filename>_s_c_state_contex_8h</filename>
    <includes id="_s_c_state_8h" name="SCState.h" local="yes" imported="no">SCState.h</includes>
    <class kind="class">TTEthernetModel::StateContex</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SCStates.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationClient/</path>
    <filename>_s_c_states_8cc</filename>
    <includes id="_s_c_states_8h" name="SCStates.h" local="yes" imported="no">SCStates.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_s_c_8h" name="SC.h" local="yes" imported="no">SC.h</includes>
    <includes id="_synchronisation_events__m_8h" name="SynchronisationEvents_m.h" local="yes" imported="no">SynchronisationEvents_m.h</includes>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="yes" imported="no">HelperFunctions.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SCStates.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationClient/</path>
    <filename>_s_c_states_8h</filename>
    <includes id="_s_c_state_8h" name="SCState.h" local="yes" imported="no">SCState.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <class kind="class">TTEthernetModel::SC_INTEGRATE</class>
    <class kind="class">TTEthernetModel::SC_INIT</class>
    <class kind="class">TTEthernetModel::SC_PSEUDOSYNC</class>
    <class kind="class">TTEthernetModel::SC_STABLE</class>
    <class kind="class">TTEthernetModel::SC_SYNC</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SICM.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SICompressionMaster/</path>
    <filename>_s_i_c_m_8cc</filename>
    <includes id="_s_i_c_m_8h" name="SICM.h" local="yes" imported="no">SICM.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a52b02ae6e2ae7931a33d2cb8ba046116</anchor>
      <arglist>(SICM)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SICM.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SICompressionMaster/</path>
    <filename>_s_i_c_m_8h</filename>
    <includes id="_s_i_c_m_state_contex_8h" name="SICMStateContex.h" local="yes" imported="no">SICMStateContex.h</includes>
    <includes id="_s_i_c_m_states_8h" name="SICMStates.h" local="yes" imported="no">SICMStates.h</includes>
    <class kind="class">TTEthernetModel::SICM</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SICMState.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SICompressionMaster/</path>
    <filename>_s_i_c_m_state_8h</filename>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="no" imported="no">PCFrame_m.h</includes>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="no" imported="no">SchedulerEvent.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_synchronisation_events__m_8h" name="SynchronisationEvents_m.h" local="no" imported="no">SynchronisationEvents_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_t_t_e4_i_n_e_t_defs_8h" name="TTE4INETDefs.h" local="yes" imported="no">TTE4INETDefs.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <class kind="class">TTEthernetModel::SICMState</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SICMStateContex.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SICompressionMaster/</path>
    <filename>_s_i_c_m_state_contex_8h</filename>
    <includes id="_s_i_c_m_state_8h" name="SICMState.h" local="yes" imported="no">SICMState.h</includes>
    <includes id="_s_i_c_m_8h" name="SICM.h" local="yes" imported="no">SICM.h</includes>
    <class kind="class">TTEthernetModel::SICMStateContex</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SICMStates.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SICompressionMaster/</path>
    <filename>_s_i_c_m_states_8cc</filename>
    <includes id="_s_i_c_m_states_8h" name="SICMStates.h" local="yes" imported="no">SICMStates.h</includes>
    <includes id="_s_i_c_m_8h" name="SICM.h" local="yes" imported="no">SICM.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_synchronisation_events__m_8h" name="SynchronisationEvents_m.h" local="yes" imported="no">SynchronisationEvents_m.h</includes>
    <includes id="_t_t_e4_i_n_e_t_defs_8h" name="TTE4INETDefs.h" local="yes" imported="no">TTE4INETDefs.h</includes>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="yes" imported="no">HelperFunctions.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="yes" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SICMStates.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SICompressionMaster/</path>
    <filename>_s_i_c_m_states_8h</filename>
    <includes id="_s_i_c_m_state_8h" name="SICMState.h" local="yes" imported="no">SICMState.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="no" imported="no">SchedulerEvent.h</includes>
    <class kind="class">TTEthernetModel::SI_CM_INIT</class>
    <class kind="class">TTEthernetModel::SI_CM_PSEUDOSYNC</class>
    <class kind="class">TTEthernetModel::SI_CM_INTEGRATE</class>
    <class kind="class">TTEthernetModel::SI_CM_STABLE</class>
    <class kind="class">TTEthernetModel::SI_CM_UNSYNC</class>
    <class kind="class">TTEthernetModel::SI_CM_SYNC</class>
    <class kind="class">TTEthernetModel::SI_CM_ENABLED</class>
    <class kind="class">TTEthernetModel::SI_CM_WAIT_4_IN</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CA_FRAME</name>
      <anchorfile>_s_i_c_m_states_8h.html</anchorfile>
      <anchor>a08060cfe0e703fcabe73d80ae5468b98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_FRAME</name>
      <anchorfile>_s_i_c_m_states_8h.html</anchorfile>
      <anchor>a3c118953c98327c5bf70f0818b093d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IN_FRAME</name>
      <anchorfile>_s_i_c_m_states_8h.html</anchorfile>
      <anchor>a82adfea0f3d239282b7e5b9b8d729f6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SM.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationMaster/</path>
    <filename>_s_m_8cc</filename>
    <includes id="_s_m_8h" name="SM.h" local="yes" imported="no">SM.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a75cfe5edbe334d8ade37a2a4262b3682</anchor>
      <arglist>(SM)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SM.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationMaster/</path>
    <filename>_s_m_8h</filename>
    <includes id="_s_m_state_contex_8h" name="SMStateContex.h" local="yes" imported="no">SMStateContex.h</includes>
    <includes id="_s_m_states_8h" name="SMStates.h" local="yes" imported="no">SMStates.h</includes>
    <class kind="class">TTEthernetModel::SM</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SMState.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationMaster/</path>
    <filename>_s_m_state_8h</filename>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="no" imported="no">PCFrame_m.h</includes>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="no" imported="no">SchedulerEvent.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_synchronisation_events__m_8h" name="SynchronisationEvents_m.h" local="no" imported="no">SynchronisationEvents_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <class kind="class">TTEthernetModel::SMState</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SMStateContex.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationMaster/</path>
    <filename>_s_m_state_contex_8h</filename>
    <includes id="_s_m_state_8h" name="SMState.h" local="yes" imported="no">SMState.h</includes>
    <includes id="_s_m_8h" name="SM.h" local="yes" imported="no">SM.h</includes>
    <class kind="class">TTEthernetModel::SMStateContex</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SMStates.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationMaster/</path>
    <filename>_s_m_states_8cc</filename>
    <includes id="_s_m_states_8h" name="SMStates.h" local="yes" imported="no">SMStates.h</includes>
    <includes id="_s_m_8h" name="SM.h" local="yes" imported="no">SM.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_synchronisation_events__m_8h" name="SynchronisationEvents_m.h" local="yes" imported="no">SynchronisationEvents_m.h</includes>
    <includes id="_t_t_e4_i_n_e_t_defs_8h" name="TTE4INETDefs.h" local="yes" imported="no">TTE4INETDefs.h</includes>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="yes" imported="no">HelperFunctions.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="yes" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SMStates.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationMaster/</path>
    <filename>_s_m_states_8h</filename>
    <includes id="_s_m_state_8h" name="SMState.h" local="yes" imported="no">SMState.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="no" imported="no">SchedulerEvent.h</includes>
    <class kind="class">TTEthernetModel::SM_INIT</class>
    <class kind="class">TTEthernetModel::SM_PSEUDOSYNC</class>
    <class kind="class">TTEthernetModel::SM_INTEGRATE</class>
    <class kind="class">TTEthernetModel::SM_STABLE</class>
    <class kind="class">TTEthernetModel::SM_UNSYNC</class>
    <class kind="class">TTEthernetModel::SM_SYNC</class>
    <class kind="class">TTEthernetModel::SM_FLOOD</class>
    <class kind="class">TTEthernetModel::SM_WAIT_4_CYCLE_START_CS</class>
    <class kind="class">TTEthernetModel::SM_TENTATIVE_SYNC</class>
    <class kind="class">TTEthernetModel::SM_WAIT_4_CYCLE_START</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SyncBase.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/base/</path>
    <filename>_sync_base_8cc</filename>
    <includes id="_sync_base_8h" name="SyncBase.h" local="yes" imported="no">SyncBase.h</includes>
  </compound>
  <compound kind="file">
    <name>SyncBase.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/base/</path>
    <filename>_sync_base_8h</filename>
    <includes id="_sync_notification__m_8h" name="SyncNotification_m.h" local="yes" imported="no">SyncNotification_m.h</includes>
    <class kind="class">TTEthernetModel::SyncBase</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>SynchronisationEvents_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/</path>
    <filename>_synchronisation_events__m_8h</filename>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="yes" imported="no">SchedulerMessageEvents_m.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="yes" imported="no">PCFrame_m.h</includes>
    <class kind="class">TTEthernetModel::FrameEvent</class>
    <class kind="class">TTEthernetModel::OWCounter</class>
    <class kind="class">TTEthernetModel::CompressedPIT</class>
    <class kind="class">TTEthernetModel::DispatchDelay</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_synchronisation_events__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ad6cbfa337acd5298bcaf5bd7b2c4bc4b</anchor>
      <arglist>(cCommBuffer *b, FrameEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a67aa762b0e91491cb1efc8f266e7d4f8</anchor>
      <arglist>(cCommBuffer *b, FrameEvent &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ae089b4023642c26c76d0b6d275e06375</anchor>
      <arglist>(cCommBuffer *b, OWCounter &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7573a8271997436e1ffd18efd0cd05fb</anchor>
      <arglist>(cCommBuffer *b, OWCounter &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7b2c420139504543c3259485c302b3a2</anchor>
      <arglist>(cCommBuffer *b, CompressedPIT &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a1dbf50f261d8ee0495a939214d12f1ea</anchor>
      <arglist>(cCommBuffer *b, CompressedPIT &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a7556ce880f64d9ef816d35025e0f8aac</anchor>
      <arglist>(cCommBuffer *b, DispatchDelay &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aba00271f91add56d1d86b24c9b7ca1d1</anchor>
      <arglist>(cCommBuffer *b, DispatchDelay &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SyncNotification_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/base/</path>
    <filename>_sync_notification__m_8h</filename>
    <class kind="class">TTEthernetModel::SyncNotification</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_sync_notification__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SyncNotificationKind</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a8aa921213d978cfc8893352be1e32585</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a8aa921213d978cfc8893352be1e32585ad08f58f9e31551ffb917a57c00bddc6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASYNC</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a8aa921213d978cfc8893352be1e32585a05abc23c85bf68e3908640db73bc9787</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SYNC</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a8aa921213d978cfc8893352be1e32585ad08f58f9e31551ffb917a57c00bddc6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ASYNC</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a8aa921213d978cfc8893352be1e32585a05abc23c85bf68e3908640db73bc9787</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a2de2fb3b268ee807af997f98034afc68</anchor>
      <arglist>(cCommBuffer *b, SyncNotification &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a145fca09ddb2cb0f5960eaf80d6dd1a5</anchor>
      <arglist>(cCommBuffer *b, SyncNotification &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Task.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_task_8cc</filename>
    <includes id="_task_8h" name="Task.h" local="yes" imported="no">Task.h</includes>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>Task.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>_task_8h</filename>
    <class kind="class">TTEthernetModel::Task</class>
    <class kind="class">TTEthernetModel::APITask</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TicApp.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/examples/rt_tictoc/</path>
    <filename>_tic_app_8cc</filename>
    <includes id="_tic_app_8h" name="TicApp.h" local="yes" imported="no">TicApp.h</includes>
    <includes id="_tic_toc__m_8h" name="TicToc_m.h" local="yes" imported="no">TicToc_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_t_t_frame__m_8h" name="TTFrame_m.h" local="yes" imported="no">TTFrame_m.h</includes>
    <includes id="_r_c_frame__m_8h" name="RCFrame_m.h" local="yes" imported="no">RCFrame_m.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>abe346c443aca1941888f991ef4118a84</anchor>
      <arglist>(TicApp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TicApp.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/examples/rt_tictoc/</path>
    <filename>_tic_app_8h</filename>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <class kind="class">TTEthernetModel::TicApp</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TicToc_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/examples/rt_tictoc/</path>
    <filename>_tic_toc__m_8h</filename>
    <class kind="class">TTEthernetModel::TicToc</class>
    <class kind="class">TTEthernetModel::Tic</class>
    <class kind="class">TTEthernetModel::Toc</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_tic_toc__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a5c0059e7cd379ee40c99cf33ef5282ee</anchor>
      <arglist>(cCommBuffer *b, TicToc &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a5a8f3f99e7a6a37eafeb97af48d1592b</anchor>
      <arglist>(cCommBuffer *b, TicToc &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a191f77a0cc0790e8369bcca2381ed16d</anchor>
      <arglist>(cCommBuffer *b, Tic &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a93bad3a01e1025f791a6b55e6a766445</anchor>
      <arglist>(cCommBuffer *b, Tic &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ae80ee6b5485c1e61bc4c7f8ac75279c1</anchor>
      <arglist>(cCommBuffer *b, Toc &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a6dad992d750ef7705052ed628c7a030a</anchor>
      <arglist>(cCommBuffer *b, Toc &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TocApp.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/examples/rt_tictoc/</path>
    <filename>_toc_app_8cc</filename>
    <includes id="_toc_app_8h" name="TocApp.h" local="yes" imported="no">TocApp.h</includes>
    <includes id="_tic_toc__m_8h" name="TicToc_m.h" local="yes" imported="no">TicToc_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_r_c_frame__m_8h" name="RCFrame_m.h" local="yes" imported="no">RCFrame_m.h</includes>
    <includes id="_t_t_frame__m_8h" name="TTFrame_m.h" local="yes" imported="no">TTFrame_m.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a903c8a39b2688dd0c1b5a661bbf5cb52</anchor>
      <arglist>(TocApp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TocApp.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/examples/rt_tictoc/</path>
    <filename>_toc_app_8h</filename>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <class kind="class">TTEthernetModel::TocApp</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TrafficSourceAppBase.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/trafficsource/</path>
    <filename>_traffic_source_app_base_8cc</filename>
    <includes id="_traffic_source_app_base_8h" name="TrafficSourceAppBase.h" local="yes" imported="no">TrafficSourceAppBase.h</includes>
    <includes id="_c_t_frame_8h" name="CTFrame.h" local="yes" imported="no">CTFrame.h</includes>
    <includes id="_t_t_frame__m_8h" name="TTFrame_m.h" local="yes" imported="no">TTFrame_m.h</includes>
    <includes id="_r_c_frame__m_8h" name="RCFrame_m.h" local="yes" imported="no">RCFrame_m.h</includes>
    <includes id="_t_t_e4_i_n_e_t_defs_8h" name="TTE4INETDefs.h" local="yes" imported="no">TTE4INETDefs.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a87980e6759479c67b53d286556b50a40</anchor>
      <arglist>(TrafficSourceAppBase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TrafficSourceAppBase.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/trafficsource/</path>
    <filename>_traffic_source_app_base_8h</filename>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <class kind="class">TTEthernetModel::TrafficSourceAppBase</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_buffer_8cc</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="yes" imported="no">TTBuffer.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <includes id="_t_t_buffer_empty__m_8h" name="TTBufferEmpty_m.h" local="no" imported="no">TTBufferEmpty_m.h</includes>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_buffer_8cc.html</anchorfile>
      <anchor>adee5cdb85bdf1161c3941cf02d82c121</anchor>
      <arglist>(TTBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_buffer_8h</filename>
    <includes id="_c_t_buffer_8h" name="CTBuffer.h" local="no" imported="no">CTBuffer.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <class kind="class">TTEthernetModel::TTBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTBufferEmpty_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_buffer_empty__m_8h</filename>
    <class kind="class">TTEthernetModel::TTBufferEmpty</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_t_t_buffer_empty__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a6678db5193e5777d266c3fa18f1cbd62</anchor>
      <arglist>(cCommBuffer *b, TTBufferEmpty &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a8080299cdc6b0d91f71aeab68333bcfc</anchor>
      <arglist>(cCommBuffer *b, TTBufferEmpty &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTDoubleBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_double_buffer_8cc</filename>
    <includes id="_t_t_double_buffer_8h" name="TTDoubleBuffer.h" local="yes" imported="no">TTDoubleBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_double_buffer_8cc.html</anchorfile>
      <anchor>a48c5c2b57fbf60fe2045a3f22bee6665</anchor>
      <arglist>(TTDoubleBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTDoubleBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_double_buffer_8h</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <includes id="_double_buffer_8h" name="DoubleBuffer.h" local="no" imported="no">DoubleBuffer.h</includes>
    <class kind="class">TTEthernetModel::TTDoubleBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTE4INETDefs.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/base/</path>
    <filename>_t_t_e4_i_n_e_t_defs_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>TTE4INET_VERSION</name>
      <anchorfile>_t_t_e4_i_n_e_t_defs_8h.html</anchorfile>
      <anchor>a6987250b99b95db595b8b00a85d384e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_RC_PRIORITIES</name>
      <anchorfile>_t_t_e4_i_n_e_t_defs_8h.html</anchorfile>
      <anchor>a5cb5b8c633a00972c5fe0da72112b2de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN_ETHERNET_FRAME_BYTES</name>
      <anchorfile>_t_t_e4_i_n_e_t_defs_8h.html</anchorfile>
      <anchor>af1aeba82bae190f10e219e04546e8cb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEAPIApplicationBase.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/api/</path>
    <filename>_t_t_e_a_p_i_application_base_8cc</filename>
    <includes id="_t_t_e_a_p_i_application_base_8h" name="TTEAPIApplicationBase.h" local="yes" imported="no">TTEAPIApplicationBase.h</includes>
    <includes id="_incoming_8h" name="Incoming.h" local="yes" imported="no">Incoming.h</includes>
    <includes id="_t_t_incoming_8h" name="TTIncoming.h" local="yes" imported="no">TTIncoming.h</includes>
    <includes id="_r_c_incoming_8h" name="RCIncoming.h" local="yes" imported="no">RCIncoming.h</includes>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="yes" imported="no">TTBuffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="yes" imported="no">RCBuffer.h</includes>
    <includes id="_b_g_buffer_8h" name="BGBuffer.h" local="yes" imported="no">BGBuffer.h</includes>
    <includes id="_a_p_i_payload__m_8h" name="APIPayload_m.h" local="yes" imported="no">APIPayload_m.h</includes>
    <includes id="_task_8h" name="Task.h" local="yes" imported="no">Task.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_sync_notification__m_8h" name="SyncNotification_m.h" local="yes" imported="no">SyncNotification_m.h</includes>
    <includes id="_c_t_frame_8h" name="CTFrame.h" local="yes" imported="no">CTFrame.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa58d8e9b8f6e9fc06de623b534f81b80</anchor>
      <arglist>(TTEAPIApplicationBase)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_init</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a24756513da7465c672dc4183e20c75bc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_start</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a456aa12d87e1467e61dd56836586165a</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_stop</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9b9ef527dc031a2cb3149a38a97e1c94</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_exit</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a23e2a9bf44e612773a2a7f1815513de3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_configure</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab646854c6e32b50cc54cd9861c04c4dc</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_conf_t *const conf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_set_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa1cf8c7a57d7e48d0b27a440a4139ff3</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_var_id_t var_id, const uint32_t var_size, const void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ac913d0815a05a381414ce63a38578107</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_ct_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a0c08e9f806ff1011806fddfb9014cce8</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_ct_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>acb8ba34f04ede8b84801a4f2be3f69b4</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_bg_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a21ea57b6e8c8056230b1b84a05196733</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_bg_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9fe764695b541e37295324189cca0379</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_write_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a2ea21eedcc3b6b8fcfe3b43d2983aeb4</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_read_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a33815fa22f3f06c00f7bfea33266a7ad</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame, tte_buf_status_t *const status)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_open_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab516575ac500afd254b63406a74670de</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame, tte_buf_status_t *const status)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_close_input_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aa7797c51c5a1612d348cdbface7d0581</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_open_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>afa376f71c699c168c7c46bd19a58088f</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_close_output_buf</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a20495ed75c9f5a8da1ee165cac3d62c9</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_get_buf_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>af799cbf8581cc211d531ad0c9d01cd6e</anchor>
      <arglist>(const tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_set_buf_var</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9ebc765b80522eb49e17a710cdcb946c</anchor>
      <arglist>(tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, const void *const value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_flush_buffers</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a461d49f0d3593a3ca2cb6f15fda4b11d</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_flush_tt_buffers</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a07aa669e5af8f14bd4dd681312c6cfeb</anchor>
      <arglist>(const uint8_t ctrl_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tte_flush_bg_buffers</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a27f4409fe960bd3c631a78a3abc0c7d0</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEAPIApplicationBase.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/api/</path>
    <filename>_t_t_e_a_p_i_application_base_8h</filename>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <includes id="_c_t_frame__m_8h" name="CTFrame_m.h" local="yes" imported="no">CTFrame_m.h</includes>
    <class kind="class">TTEthernetModel::TTEAPIPriv</class>
    <class kind="class">TTEthernetModel::TTEAPIApplicationBase</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TTE_API_VER</name>
      <anchorfile>_t_t_e_a_p_i_application_base_8h.html</anchorfile>
      <anchor>a50b70d6be057f13cd53aebdb07f7e374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TTEAPIApplicationMessageKind</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a668234575b96b5b06f3ee757f2c8f95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_APPLICATION</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a668234575b96b5b06f3ee757f2c8f95fa64ea6e73041a2aff8b4d811e3bc39828</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>START_APPLICATION</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a668234575b96b5b06f3ee757f2c8f95fa64ea6e73041a2aff8b4d811e3bc39828</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEAPITestApplication.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/api/</path>
    <filename>_t_t_e_a_p_i_test_application_8cc</filename>
    <includes id="_t_t_e_a_p_i_test_application_8h" name="TTEAPITestApplication.h" local="yes" imported="no">TTEAPITestApplication.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a5c5956c0d2d9d513061ce077ec72eb1a</anchor>
      <arglist>(TTEAPITestApplication)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testCallback</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a96e25ddc242fc9843315ae7758949f39</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>main</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>abc712099a1b61a09a06b1ace93447f1c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEAPITestApplication.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/api/</path>
    <filename>_t_t_e_a_p_i_test_application_8h</filename>
    <includes id="_t_t_e_a_p_i_application_base_8h" name="TTEAPIApplicationBase.h" local="yes" imported="no">TTEAPIApplicationBase.h</includes>
    <class kind="class">TTEthernetModel::TTEAPITestApplication</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTEApplicationBase.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/</path>
    <filename>_t_t_e_application_base_8cc</filename>
    <includes id="_t_t_e_application_base_8h" name="TTEApplicationBase.h" local="yes" imported="no">TTEApplicationBase.h</includes>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="yes" imported="no">HelperFunctions.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a03d5f3df852840d56243f2e9a5c57859</anchor>
      <arglist>(TTEApplicationBase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEApplicationBase.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/</path>
    <filename>_t_t_e_application_base_8h</filename>
    <includes id="_incoming_8h" name="Incoming.h" local="yes" imported="no">Incoming.h</includes>
    <includes id="_callback_8h" name="Callback.h" local="yes" imported="no">Callback.h</includes>
    <class kind="class">TTEthernetModel::TTEApplicationBase</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTEInput.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_t_t_e_input_8cc</filename>
    <includes id="_t_t_e_input_8h" name="TTEInput.h" local="yes" imported="no">TTEInput.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_buffer_8h" name="Buffer.h" local="yes" imported="no">Buffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_e_input_8cc.html</anchorfile>
      <anchor>a9f503c92d53e8a2d0cea4f7edf7e3b90</anchor>
      <arglist>(TTEInput)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEInput.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_t_t_e_input_8h</filename>
    <includes id="_incoming_8h" name="Incoming.h" local="no" imported="no">ctc/Incoming.h</includes>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="yes" imported="no">HelperFunctions.h</includes>
    <class kind="class">TTEthernetModel::TTEInput</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTEOutput.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_t_t_e_output_8cc</filename>
    <includes id="_t_t_e_output_8h" name="TTEOutput.h" local="yes" imported="no">TTEOutput.h</includes>
    <includes id="_buffer_8h" name="Buffer.h" local="no" imported="no">Buffer.h</includes>
    <includes id="_r_c_buffer_8h" name="RCBuffer.h" local="no" imported="no">RCBuffer.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="no" imported="no">PCFrame_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <includes id="_t_t_buffer_empty__m_8h" name="TTBufferEmpty_m.h" local="no" imported="no">TTBufferEmpty_m.h</includes>
    <includes id="_helper_functions_8h" name="HelperFunctions.h" local="no" imported="no">HelperFunctions.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_e_output_8cc.html</anchorfile>
      <anchor>a955dd25587c96a55aafb8f5201050ca5</anchor>
      <arglist>(TTEOutput)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEOutput.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>_t_t_e_output_8h</filename>
    <includes id="_t_t_e4_i_n_e_t_defs_8h" name="TTE4INETDefs.h" local="no" imported="no">TTE4INETDefs.h</includes>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <includes id="_p_c_frame__m_8h" name="PCFrame_m.h" local="no" imported="no">PCFrame_m.h</includes>
    <class kind="class">TTEthernetModel::TTEOutput</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTEScheduler.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_t_t_e_scheduler_8cc</filename>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>acd0c2d26fd64ce9e389bf26933c682b8</anchor>
      <arglist>(TTEScheduler)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTEScheduler.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>_t_t_e_scheduler_8h</filename>
    <includes id="_scheduler_message__m_8h" name="SchedulerMessage_m.h" local="no" imported="no">SchedulerMessage_m.h</includes>
    <includes id="_scheduler_event_8h" name="SchedulerEvent.h" local="no" imported="no">SchedulerEvent.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <class kind="class">TTEthernetModel::TTEScheduler</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTFrame_m.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/ethernet/</path>
    <filename>_t_t_frame__m_8h</filename>
    <includes id="_c_t_frame_8h" name="CTFrame.h" local="yes" imported="no">CTFrame.h</includes>
    <class kind="class">TTEthernetModel::TTFrame</class>
    <namespace>TTEthernetModel</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_t_t_frame__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ad5b55b4e7f434adf857d84b911b7a893</anchor>
      <arglist>(cCommBuffer *b, TTFrame &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>aba4739dae310fc44a4a29b8f66751f78</anchor>
      <arglist>(cCommBuffer *b, TTFrame &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTIncoming.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_t_t_incoming_8cc</filename>
    <includes id="_t_t_incoming_8h" name="TTIncoming.h" local="yes" imported="no">TTIncoming.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="no" imported="no">TTEScheduler.h</includes>
    <includes id="_scheduler_message_events__m_8h" name="SchedulerMessageEvents_m.h" local="no" imported="no">SchedulerMessageEvents_m.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>ab535594f76930f3a95f966fec03daac2</anchor>
      <arglist>(TTIncoming)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTIncoming.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>_t_t_incoming_8h</filename>
    <includes id="_incoming_8h" name="Incoming.h" local="no" imported="no">Incoming.h</includes>
    <class kind="class">TTEthernetModel::TTIncoming</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTQueueBuffer.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_queue_buffer_8cc</filename>
    <includes id="_t_t_queue_buffer_8h" name="TTQueueBuffer.h" local="yes" imported="no">TTQueueBuffer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_t_t_queue_buffer_8cc.html</anchorfile>
      <anchor>a1e46f0b515b45bca21453c39c7f0d13f</anchor>
      <arglist>(TTQueueBuffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTQueueBuffer.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>_t_t_queue_buffer_8h</filename>
    <includes id="_t_t_buffer_8h" name="TTBuffer.h" local="no" imported="no">TTBuffer.h</includes>
    <includes id="_queue_buffer_8h" name="QueueBuffer.h" local="no" imported="no">QueueBuffer.h</includes>
    <class kind="class">TTEthernetModel::TTQueueBuffer</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="file">
    <name>TTTrafficSourceApp.cc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/trafficsource/</path>
    <filename>_t_t_traffic_source_app_8cc</filename>
    <includes id="_t_t_traffic_source_app_8h" name="TTTrafficSourceApp.h" local="yes" imported="no">TTTrafficSourceApp.h</includes>
    <includes id="_c_t_frame__m_8h" name="CTFrame_m.h" local="no" imported="no">CTFrame_m.h</includes>
    <includes id="_t_t_e_scheduler_8h" name="TTEScheduler.h" local="yes" imported="no">TTEScheduler.h</includes>
    <namespace>TTEthernetModel</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespace_t_t_ethernet_model.html</anchorfile>
      <anchor>a9b8e712c9e98f56bb02b359db087f458</anchor>
      <arglist>(TTTrafficSourceApp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TTTrafficSourceApp.h</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/trafficsource/</path>
    <filename>_t_t_traffic_source_app_8h</filename>
    <includes id="_traffic_source_app_base_8h" name="TrafficSourceAppBase.h" local="yes" imported="no">TrafficSourceAppBase.h</includes>
    <class kind="class">TTEthernetModel::TTTrafficSourceApp</class>
    <namespace>TTEthernetModel</namespace>
  </compound>
  <compound kind="page">
    <name>whatsnew</name>
    <title>What&apos;s New</title>
    <filename>whatsnew</filename>
  </compound>
  <compound kind="page">
    <name>readme</name>
    <title>Readme</title>
    <filename>readme</filename>
  </compound>
  <compound kind="page">
    <name>install</name>
    <title>Install help</title>
    <filename>install</filename>
  </compound>
  <compound kind="group">
    <name>Applications</name>
    <title>Applications</title>
    <filename>group___applications.html</filename>
    <class kind="class">TTEthernetModel::TTEAPIApplicationBase</class>
    <class kind="class">TTEthernetModel::TTEAPITestApplication</class>
    <class kind="class">TTEthernetModel::TicApp</class>
    <class kind="class">TTEthernetModel::TocApp</class>
    <class kind="class">TTEthernetModel::TTEApplicationBase</class>
    <class kind="class">TTEthernetModel::RCTrafficSourceApp</class>
    <class kind="class">TTEthernetModel::TrafficSourceAppBase</class>
    <class kind="class">TTEthernetModel::TTTrafficSourceApp</class>
  </compound>
  <compound kind="group">
    <name>Buffer</name>
    <title>Buffers</title>
    <filename>group___buffer.html</filename>
    <class kind="class">TTEthernetModel::BGBuffer</class>
    <class kind="class">TTEthernetModel::BGQueueBuffer</class>
    <class kind="class">TTEthernetModel::Buffer</class>
    <class kind="class">TTEthernetModel::CTBuffer</class>
    <class kind="class">TTEthernetModel::DoubleBuffer</class>
    <class kind="class">TTEthernetModel::QueueBuffer</class>
    <class kind="class">TTEthernetModel::RCBuffer</class>
    <class kind="class">TTEthernetModel::RCDoubleBuffer</class>
    <class kind="class">TTEthernetModel::RCQueueBuffer</class>
    <class kind="class">TTEthernetModel::TTBuffer</class>
    <class kind="class">TTEthernetModel::TTDoubleBuffer</class>
    <class kind="class">TTEthernetModel::TTQueueBuffer</class>
    <class kind="class">TTEthernetModel::CTFrame</class>
  </compound>
  <compound kind="group">
    <name>Configuration</name>
    <title>Configuration</title>
    <filename>group___configuration.html</filename>
  </compound>
  <compound kind="namespace">
    <name>TTEthernetModel</name>
    <filename>namespace_t_t_ethernet_model.html</filename>
    <class kind="class">TTEthernetModel::APIPayload</class>
    <class kind="class">TTEthernetModel::Callback</class>
    <class kind="class">TTEthernetModel::APICallback</class>
    <class kind="class">TTEthernetModel::Task</class>
    <class kind="class">TTEthernetModel::APITask</class>
    <class kind="class">TTEthernetModel::TTEAPIPriv</class>
    <class kind="class">TTEthernetModel::TTEAPIApplicationBase</class>
    <class kind="class">TTEthernetModel::TTEAPITestApplication</class>
    <class kind="class">TTEthernetModel::TicApp</class>
    <class kind="class">TTEthernetModel::TicToc</class>
    <class kind="class">TTEthernetModel::Tic</class>
    <class kind="class">TTEthernetModel::Toc</class>
    <class kind="class">TTEthernetModel::TocApp</class>
    <class kind="class">TTEthernetModel::TTEApplicationBase</class>
    <class kind="class">TTEthernetModel::RCTrafficSourceApp</class>
    <class kind="class">TTEthernetModel::TrafficSourceAppBase</class>
    <class kind="class">TTEthernetModel::TTTrafficSourceApp</class>
    <class kind="class">TTEthernetModel::BGBuffer</class>
    <class kind="class">TTEthernetModel::BGQueueBuffer</class>
    <class kind="class">TTEthernetModel::Buffer</class>
    <class kind="class">TTEthernetModel::CTBuffer</class>
    <class kind="class">TTEthernetModel::DoubleBuffer</class>
    <class kind="class">TTEthernetModel::QueueBuffer</class>
    <class kind="class">TTEthernetModel::RCBuffer</class>
    <class kind="class">TTEthernetModel::RCDoubleBuffer</class>
    <class kind="class">TTEthernetModel::RCQueueBuffer</class>
    <class kind="class">TTEthernetModel::TTBuffer</class>
    <class kind="class">TTEthernetModel::TTBufferEmpty</class>
    <class kind="class">TTEthernetModel::TTDoubleBuffer</class>
    <class kind="class">TTEthernetModel::TTQueueBuffer</class>
    <class kind="class">TTEthernetModel::BaseConfigurationManager</class>
    <class kind="class">TTEthernetModel::Incoming</class>
    <class kind="class">TTEthernetModel::PCFIncoming</class>
    <class kind="class">TTEthernetModel::RCIncoming</class>
    <class kind="class">TTEthernetModel::TTIncoming</class>
    <class kind="class">TTEthernetModel::BGTrafficHandle</class>
    <class kind="class">TTEthernetModel::CTFrame</class>
    <class kind="class">TTEthernetModel::CTFrame_Base</class>
    <class kind="class">TTEthernetModel::PCFrame</class>
    <class kind="class">TTEthernetModel::RCFrame</class>
    <class kind="class">TTEthernetModel::TTFrame</class>
    <class kind="class">TTEthernetModel::TTEInput</class>
    <class kind="class">TTEthernetModel::TTEOutput</class>
    <class kind="class">TTEthernetModel::RecordPlaybackScheduler</class>
    <class kind="class">TTEthernetModel::SchedulerEvent</class>
    <class kind="class">TTEthernetModel::SchedulerMessage</class>
    <class kind="class">TTEthernetModel::SchedulerEvent_Base</class>
    <class kind="class">TTEthernetModel::SchedulerActionTimeEvent</class>
    <class kind="class">TTEthernetModel::SchedulerTimerEvent</class>
    <class kind="class">TTEthernetModel::TTEScheduler</class>
    <class kind="class">TTEthernetModel::HICM</class>
    <class kind="class">TTEthernetModel::HICMState</class>
    <class kind="class">TTEthernetModel::HICMStateContex</class>
    <class kind="class">TTEthernetModel::HI_CM_INIT</class>
    <class kind="class">TTEthernetModel::HI_CM_PSEUDOSYNC</class>
    <class kind="class">TTEthernetModel::HI_CM_INTEGRATE</class>
    <class kind="class">TTEthernetModel::HI_CM_STABLE</class>
    <class kind="class">TTEthernetModel::HI_CM_UNSYNC</class>
    <class kind="class">TTEthernetModel::HI_CM_SYNC</class>
    <class kind="class">TTEthernetModel::HI_CM_TENTATIVE_SYNC</class>
    <class kind="class">TTEthernetModel::HI_CM_WAIT_4_CYCLE_START</class>
    <class kind="class">TTEthernetModel::SICM</class>
    <class kind="class">TTEthernetModel::SICMState</class>
    <class kind="class">TTEthernetModel::SICMStateContex</class>
    <class kind="class">TTEthernetModel::SI_CM_INIT</class>
    <class kind="class">TTEthernetModel::SI_CM_PSEUDOSYNC</class>
    <class kind="class">TTEthernetModel::SI_CM_INTEGRATE</class>
    <class kind="class">TTEthernetModel::SI_CM_STABLE</class>
    <class kind="class">TTEthernetModel::SI_CM_UNSYNC</class>
    <class kind="class">TTEthernetModel::SI_CM_SYNC</class>
    <class kind="class">TTEthernetModel::SI_CM_ENABLED</class>
    <class kind="class">TTEthernetModel::SI_CM_WAIT_4_IN</class>
    <class kind="class">TTEthernetModel::SC</class>
    <class kind="class">TTEthernetModel::SCState</class>
    <class kind="class">TTEthernetModel::StateContex</class>
    <class kind="class">TTEthernetModel::SC_INTEGRATE</class>
    <class kind="class">TTEthernetModel::SC_INIT</class>
    <class kind="class">TTEthernetModel::SC_PSEUDOSYNC</class>
    <class kind="class">TTEthernetModel::SC_STABLE</class>
    <class kind="class">TTEthernetModel::SC_SYNC</class>
    <class kind="class">TTEthernetModel::FrameEvent</class>
    <class kind="class">TTEthernetModel::OWCounter</class>
    <class kind="class">TTEthernetModel::CompressedPIT</class>
    <class kind="class">TTEthernetModel::DispatchDelay</class>
    <class kind="class">TTEthernetModel::SM</class>
    <class kind="class">TTEthernetModel::SMState</class>
    <class kind="class">TTEthernetModel::SMStateContex</class>
    <class kind="class">TTEthernetModel::SM_INIT</class>
    <class kind="class">TTEthernetModel::SM_PSEUDOSYNC</class>
    <class kind="class">TTEthernetModel::SM_INTEGRATE</class>
    <class kind="class">TTEthernetModel::SM_STABLE</class>
    <class kind="class">TTEthernetModel::SM_UNSYNC</class>
    <class kind="class">TTEthernetModel::SM_SYNC</class>
    <class kind="class">TTEthernetModel::SM_FLOOD</class>
    <class kind="class">TTEthernetModel::SM_WAIT_4_CYCLE_START_CS</class>
    <class kind="class">TTEthernetModel::SM_TENTATIVE_SYNC</class>
    <class kind="class">TTEthernetModel::SM_WAIT_4_CYCLE_START</class>
    <class kind="class">TTEthernetModel::DummySync</class>
    <class kind="class">TTEthernetModel::SyncBase</class>
    <class kind="class">TTEthernetModel::SyncNotification</class>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::APIPayload</name>
    <filename>class_t_t_ethernet_model_1_1_a_p_i_payload.html</filename>
    <member kind="function">
      <type></type>
      <name>APIPayload</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a9e72eb7d300c4c3946b34dc0f12cc4bc</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>APIPayload</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>add89b4361cf76fb2e1b02a767006320e</anchor>
      <arglist>(const APIPayload &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~APIPayload</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>adcce61382005e81869ed48a788b8bba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>APIPayload &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a6a7636841c9a0253c516d7bfb47da881</anchor>
      <arglist>(const APIPayload &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual APIPayload *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a9c1d1941f7e7f921212f864c74369d47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>aa977d14a191dccb1e230dff6b1d223df</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a1617bf0e4f4d36b7aaec5c41c0365a00</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDataArraySize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>aa78d332aba9881ef36103a38cc7db855</anchor>
      <arglist>(unsigned int size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getDataArraySize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a9206099c4333990a469573bf727a1d4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned char</type>
      <name>getData</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>ac17d0fcd624feff47496113533db708f</anchor>
      <arglist>(unsigned int k) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setData</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a6023b81cdd1519fd5a26e624e08f7d28</anchor>
      <arglist>(unsigned int k, unsigned char data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a2ee8093790e0015494048487e60cde0e</anchor>
      <arglist>(const APIPayload &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned char *</type>
      <name>data_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a863c858da1354795d08f183bd7151a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>data_arraysize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>a50ff80a49acb7d27f6000f2a85374fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_payload.html</anchorfile>
      <anchor>afb61f2a267f812d598ec0afccc79b78e</anchor>
      <arglist>(const APIPayload &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Callback</name>
    <filename>class_t_t_ethernet_model_1_1_callback.html</filename>
    <member kind="function">
      <type></type>
      <name>Callback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>ac429c903d83a86d58c0fa1d25839112d</anchor>
      <arglist>(Buffer *buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFunctionPointer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a1f9693145db468086fe515a3c8f013e7</anchor>
      <arglist>(void(*functionPointer)(void *))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cbFunc</type>
      <name>getFunctionPointer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a896dfa84e9a30772145d299dfb1d6f3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFunctionArg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>adc42d514caa3a02b999bc35fd5a079a1</anchor>
      <arglist>(void *setFunctionArg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>getFunctionArg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a6d97ea9315e9c4acc5590e502ebcff3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>aa3e7f47a402a69d3c20d65bf2100d669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void(*</type>
      <name>fn</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a7293b3eef51447f1b64cdfbef2c6d6d1</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>aa380f67856c5eb956b81635083e6f598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>argSet</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a7ef8744aee5a2529d55d48d81067ee9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Buffer *</type>
      <name>buffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_callback.html</anchorfile>
      <anchor>a4d030c5d94df6b63625cfd06e09cd757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::APICallback</name>
    <filename>class_t_t_ethernet_model_1_1_a_p_i_callback.html</filename>
    <base>TTEthernetModel::Callback</base>
    <member kind="function">
      <type></type>
      <name>APICallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_callback.html</anchorfile>
      <anchor>acf06f2db54bd5d7509fdf371121754e9</anchor>
      <arglist>(Buffer *buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_a_p_i_callback.html</anchorfile>
      <anchor>af24a22d40df515c22abe0965457b2e2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Task</name>
    <filename>class_t_t_ethernet_model_1_1_task.html</filename>
    <member kind="function">
      <type></type>
      <name>Task</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a18c0b610645e9b19b85d49fdf629f07a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFunctionPointer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a72955c53dc491d5ad13f9e8412714c24</anchor>
      <arglist>(void(*functionPointer)(void *))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cbFunc</type>
      <name>getFunctionPointer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a66fd75e65247e9c74761e46a0adbed80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFunctionArg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>aee238f2c43ef560dac2937dc9578dda5</anchor>
      <arglist>(void *setFunctionArg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>getFunctionArg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>adffe247a4b5c389ac8263dae059f84b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeTask</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a6528388c6375cb74a0e9463702573689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void(*</type>
      <name>fn</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a629616515cb7c427add1c32d478f6103</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>adc0838237866a338b26c2280bb1896e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>argSet</name>
      <anchorfile>class_t_t_ethernet_model_1_1_task.html</anchorfile>
      <anchor>a79bd20df62f2c8b83420b7b6f4d6f0e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::APITask</name>
    <filename>class_t_t_ethernet_model_1_1_a_p_i_task.html</filename>
    <base>TTEthernetModel::Task</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEAPIPriv</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_priv.html</filename>
    <member kind="variable">
      <type>Buffer *</type>
      <name>buffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_priv.html</anchorfile>
      <anchor>a6a893471fa70005204729eacc9c836be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EtherFrame *</type>
      <name>frame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_priv.html</anchorfile>
      <anchor>a68b9ff1f0c2431ab0e05b7f20ff35cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>data</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_priv.html</anchorfile>
      <anchor>ae37461f566a7771f6798e5e692e197ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEAPIApplicationBase</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</filename>
    <base>TTEthernetModel::TTEApplicationBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerTask</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a9472479b1788c65b84199fdd89eebbc9</anchor>
      <arglist>(unsigned int actionTime, void(*functionPointer)(void *), void *setFunctionArg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_ct_output_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a004aa5acb4b8bf25cdcb8dfa29b35569</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_bg_output_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a9493a178576b42719e346740a94758f7</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_bg_input_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>af8024cfd62c23545d3226c1fae26d504</anchor>
      <arglist>(const uint8_t ctrl_id, const uint8_t channel, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_ct_input_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a7441ae1141a1993ca486014cb2406ab7</anchor>
      <arglist>(const uint8_t ctrl_id, const uint16_t ct_id, tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>aed85f82bfe571df81436339852f1a7a8</anchor>
      <arglist>(const uint8_t ctrl_id, const tte_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_open_output_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a70ba853e240dc96c91460457c3921657</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_open_input_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>ae857de443d19fe185f14cf4d24f61b4b</anchor>
      <arglist>(tte_buffer_t *const buf, tte_frame_t *const frame, tte_buf_status_t *const status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_close_output_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>ac1a61c340af54c6b06b9e68373b8ef09</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_close_input_buf</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>aa38b602984406d089b81f4676d3114d9</anchor>
      <arglist>(tte_buffer_t *const buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_set_buf_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>ae1cd0a759a9626632cb3f72f219653c6</anchor>
      <arglist>(tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, const void *const value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int32_t</type>
      <name>tte_get_buf_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a31069033961d39a5fad323f6e33995f2</anchor>
      <arglist>(const tte_buffer_t *const buf, const tte_buf_var_id_t var_id, const uint32_t var_size, void *const value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_application_base.html</anchorfile>
      <anchor>af1c61841a520d233a320651046f8c63e</anchor>
      <arglist>(Callback *cb)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_application_base.html</anchorfile>
      <anchor>a97851409093558c7b7483fd6bde8fcd4</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>startApplication</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a7f9324b6d5675dc375a0def922b202df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a508e4c6e531a7df3c9b273ca1ca0cb15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a6a91f5372abc6bd1edd29c797c5c087c</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>synchronized</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_application_base.html</anchorfile>
      <anchor>a1f918ae7bd3817f47d9c46a0747e7a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint16_t, std::list&lt; Buffer * &gt; &gt;</type>
      <name>buffers</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_application_base.html</anchorfile>
      <anchor>a3119d9508505d956452d04d89651b720</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEAPITestApplication</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_test_application.html</filename>
    <base>TTEthernetModel::TTEAPIApplicationBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>startApplication</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_a_p_i_test_application.html</anchorfile>
      <anchor>ad9351f7c43a7b6053d953a122e328c3a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TicApp</name>
    <filename>class_t_t_ethernet_model_1_1_tic_app.html</filename>
    <base>TTEthernetModel::TTEApplicationBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_app.html</anchorfile>
      <anchor>adbe659f1b31a035a57d52753e8cfd189</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_app.html</anchorfile>
      <anchor>aaf986893527bfb9aff0d6c636d3e30dc</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>rxPkSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_app.html</anchorfile>
      <anchor>aa259f07fe156b6db36bce6c1994b9dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>roundtripSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_app.html</anchorfile>
      <anchor>a59fa5d43141720dede4d296fc29784fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TicToc</name>
    <filename>class_t_t_ethernet_model_1_1_tic_toc.html</filename>
    <member kind="function">
      <type></type>
      <name>TicToc</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>af2ffdbeaf5a21007c030f0b4887ea808</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TicToc</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>a57a430e315fbe59226c229a7ec42a1bf</anchor>
      <arglist>(const TicToc &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TicToc</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>a5db95e3659f4d2e96d08c0ab088c8e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TicToc &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>a192907455f42bf526c42e1d309149260</anchor>
      <arglist>(const TicToc &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TicToc *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>a3607feab8a34f1fc00212f79d5690053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>aef8367fbe4acc5ebeb379c00122f1ec8</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>acb4aef0605fa3d2bd17944c11eeadb9e</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getCount</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>a155850d4af983d115e1995ee0a8cf4a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCount</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>a31604df46a50cdfe06959ff1fe222b56</anchor>
      <arglist>(unsigned int count)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual simtime_t</type>
      <name>getRoundtrip_start</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>ac1f7d4faba5a685d45eadb5b10964dcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRoundtrip_start</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>ac8aa581e939b1a0f3e385a07c6d3e735</anchor>
      <arglist>(simtime_t roundtrip_start)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>a873229a8c082a1bf84cdcc70dc0cb33a</anchor>
      <arglist>(const TicToc &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>count_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>ae38d0127ae9d494a28c874337bdc1361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simtime_t</type>
      <name>roundtrip_start_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>a57b39a16e1b1ec28bdb5b93771cbbd20</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic_toc.html</anchorfile>
      <anchor>af8b879578db3d5687d5577c6c36dff08</anchor>
      <arglist>(const TicToc &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Tic</name>
    <filename>class_t_t_ethernet_model_1_1_tic.html</filename>
    <base>TTEthernetModel::TicToc</base>
    <member kind="function">
      <type></type>
      <name>Tic</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>ad3c6ed015826411c123704952adbb6ce</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tic</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>af842ac967e7b6c3bd2b0e10189c5e1d1</anchor>
      <arglist>(const Tic &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Tic</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>a4957ff187f998b72509f376cdbac1df3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Tic &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>a5507f7438bedc9e731b6081b9a65a3bd</anchor>
      <arglist>(const Tic &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Tic *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>a4006b32c42ca65ee179004d46fbd12aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>a7f655f0dca5f08d6d8fae6680a52ca58</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>a60e9be69bb9506d60cd85fce7e66347c</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getRequest</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>adfca1b48be1c4468a03e609bce286a0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRequest</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>af1cdad82f0d7c5f5860bf49d45d688ab</anchor>
      <arglist>(const char *request)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>a3eb46551688e94a8de49df97a5750b8b</anchor>
      <arglist>(const Tic &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>opp_string</type>
      <name>request_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>ad821cd508f5eb1d02384ae4a89b3d080</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_tic.html</anchorfile>
      <anchor>aa985138665aad4f539eba91838478e1f</anchor>
      <arglist>(const Tic &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Toc</name>
    <filename>class_t_t_ethernet_model_1_1_toc.html</filename>
    <base>TTEthernetModel::TicToc</base>
    <member kind="function">
      <type></type>
      <name>Toc</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>a120f93d8f99c63d177a3375d521dbd3a</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Toc</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>aefe1d716d85c3b7583d50b2d840aa9d3</anchor>
      <arglist>(const Toc &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Toc</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>a69299f23aafa655d449e201bcc1649f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Toc &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>a6b87121d9f62066901f1462739fddeca</anchor>
      <arglist>(const Toc &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Toc *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>ab404156a5ee4105cbc304e4f54f88e27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>af1b4e57d0b6e819833db1c128cd60526</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>af18384ce71e0fd3629659a03c68491de</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getResponse</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>a3968aef45161fd02f8bf6021a00b9f28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setResponse</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>a34ac77014a9546bc90f31622ebe0134f</anchor>
      <arglist>(const char *response)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>ad666fb8b925aff90c45a1e80d9b22d39</anchor>
      <arglist>(const Toc &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>opp_string</type>
      <name>response_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>abe8e2b18c8445f18d061783e00a1d8b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc.html</anchorfile>
      <anchor>a60387cc2c4397f991d6049699a28123e</anchor>
      <arglist>(const Toc &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TocApp</name>
    <filename>class_t_t_ethernet_model_1_1_toc_app.html</filename>
    <base>TTEthernetModel::TTEApplicationBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc_app.html</anchorfile>
      <anchor>ad8d03e910660fb5c47fb3fe382d0b89f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_toc_app.html</anchorfile>
      <anchor>a04a76e9e0e2f75fab5b4fadc6168b8df</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEApplicationBase</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_application_base.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_application_base.html</anchorfile>
      <anchor>afb51c02d68bc0e74091f9343c9d685b1</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCTrafficSourceApp</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_traffic_source_app.html</filename>
    <base>TTEthernetModel::TrafficSourceAppBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_traffic_source_app.html</anchorfile>
      <anchor>ad898172513d660cb0776c22f39e9a8e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_traffic_source_app.html</anchorfile>
      <anchor>a17f477a3954c6cea4837568e966d0dbe</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sendMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_traffic_source_app_base.html</anchorfile>
      <anchor>a6a960b3fb8884fc7d25a0429bfa1bb07</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TrafficSourceAppBase</name>
    <filename>class_t_t_ethernet_model_1_1_traffic_source_app_base.html</filename>
    <base>TTEthernetModel::TTEApplicationBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_traffic_source_app_base.html</anchorfile>
      <anchor>a1330bb8aa9fb62d5644028a6a6e70b6a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTTrafficSourceApp</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_traffic_source_app.html</filename>
    <base>TTEthernetModel::TrafficSourceAppBase</base>
    <member kind="function">
      <type></type>
      <name>TTTrafficSourceApp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_traffic_source_app.html</anchorfile>
      <anchor>aa7d92bdb761412701cff2b97f3db5f1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_traffic_source_app.html</anchorfile>
      <anchor>a5bb303c777740aa1add4ac6bd9fd4f60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_traffic_source_app.html</anchorfile>
      <anchor>ac619e3780c7d6ae2f1255eec306b49d6</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>moduloCycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_traffic_source_app.html</anchorfile>
      <anchor>a51733c2ae3b39d6537d2bda4e067dd0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::BGBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_b_g_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::Buffer</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_b_g_buffer.html</anchorfile>
      <anchor>a211a308b66c69421bc399cec124fc9b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_b_g_buffer.html</anchorfile>
      <anchor>a91fc44bd17d4f3bf9c4f6c8f6e92b369</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ac606d7037af7ce8e80ee115e15702ac6</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a1d435625f8dd05ea15fde3eb29922ade</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a8800ad2ee324013175cd231eb69cb0f8</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enqueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a7eb775139a8c4b60f4dc02542764be57</anchor>
      <arglist>(EtherFrame *newFrame)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EtherFrame *</type>
      <name>dequeue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>abd0a3ec42e4b1167cd526e42fb014f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recordPacketSent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ad89f79667e18913a0761302a7ebd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setIsEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a2411de966054f13194db1b714d5b0f1d</anchor>
      <arglist>(bool empty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Buffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a59b8743e4a5f731bdd0c4185c9ef263b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a0ac6a8e36c3da9a0a54f01d1060f5e44</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="function">
      <type>EtherFrame *</type>
      <name>getFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>aa1d4eb4debc0b0769c57f897d5726a55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a103fcc93e67999af16858940eb4e788e</anchor>
      <arglist>(EtherFrame *frame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addReceiveCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a7a1d776c979b17d4108a39c0d8f4513e</anchor>
      <arglist>(Callback *cb, TTEApplicationBase *application)</arglist>
    </member>
    <member kind="function">
      <type>Callback *</type>
      <name>getReceiveCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ae10e7a38f55951ee20af4b28b91c5fe7</anchor>
      <arglist>(TTEApplicationBase *application)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTransmitCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>aade74911a8a34f0940e109274992a015</anchor>
      <arglist>(Callback *cb, TTEApplicationBase *application)</arglist>
    </member>
    <member kind="function">
      <type>Callback *</type>
      <name>getTransmitCallback</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ab8f416aca0c0f61d460896f85b39e252</anchor>
      <arglist>(TTEApplicationBase *application)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; cGate * &gt;</type>
      <name>destinationGates</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ac648d2729e20841d94b3abee8c999462</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; TTEApplicationBase *, Callback * &gt;</type>
      <name>receiveCallbacks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a37942f0c1ee909da2bdc29371e45f616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; TTEApplicationBase *, Callback * &gt;</type>
      <name>transmitCallbacks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a43c2174122aab6a6e8727ec2b0ab8c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>txPkSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>aa1ab8b8b2326252ded43a84e816e6bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>latencySignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>a8dab8020603b4991ff88a6c9e019098d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::BGQueueBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_b_g_queue_buffer.html</filename>
    <base>TTEthernetModel::BGBuffer</base>
    <base>TTEthernetModel::QueueBuffer</base>
    <member kind="function">
      <type></type>
      <name>QueueBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>aff1e2fd154dee22cbf7b1b3b8faf6e98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~QueueBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>a7f11141bd9474385aeb4503a448411ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enqueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>a2c05233a275aa10a7cd43c7dbacb8918</anchor>
      <arglist>(EtherFrame *newFrame)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EtherFrame *</type>
      <name>dequeue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>a3bde0c17cc704204563ddd4420f67a1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>queueLengthSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>af5b562c7fed1ef92a89ae720117379fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>ctDroppedSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>a8baa087bd3c88b6ff4effaa5b61a0de2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Buffer</name>
    <filename>class_t_t_ethernet_model_1_1_buffer.html</filename>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initializeStatistics</name>
      <anchorfile>class_t_t_ethernet_model_1_1_buffer.html</anchorfile>
      <anchor>ad913ce4432ef7f7f4075be533580acbd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::CTBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_c_t_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::Buffer</base>
    <member kind="function">
      <type></type>
      <name>~CTBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_buffer.html</anchorfile>
      <anchor>a7bc44f30e4b9e2f0e291926f7cd12f44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_buffer.html</anchorfile>
      <anchor>ac71ac70a5cfebd3e20242558e10647ca</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_buffer.html</anchorfile>
      <anchor>a782921ec7af833958c6dbb3473c4a9fd</anchor>
      <arglist>(EtherFrame *frame)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_buffer.html</anchorfile>
      <anchor>a9f63a30295ca896641a180e1a5722c95</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>ctMask</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_buffer.html</anchorfile>
      <anchor>ab82f227f459445b2c1d8508e7169c173</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>ctMarker</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_buffer.html</anchorfile>
      <anchor>a34a64940e379b99bc6a8311215c28699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>ctId</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_buffer.html</anchorfile>
      <anchor>a7203272f768f82148599630fe5f45b5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::DoubleBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_double_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::Buffer</base>
    <member kind="function">
      <type></type>
      <name>DoubleBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a992dcdf53bc3d254bfd7c5bd13f0e8b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DoubleBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a94b9936ccd4cf379d9e10be60e2288f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enqueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a5efd7fdf739edb648d27b3d73cf7e301</anchor>
      <arglist>(EtherFrame *newFrame)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EtherFrame *</type>
      <name>dequeue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a553b877693bbf07c5f89f014225e9bef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EtherFrame *</type>
      <name>frame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_double_buffer.html</anchorfile>
      <anchor>a0f3686cef203e3bd5aaa2fe5bf7a6d40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::QueueBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_queue_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::Buffer</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeStatistics</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>ab4bde61ddadc0f2aa89ab1e0511aa75a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>frames</name>
      <anchorfile>class_t_t_ethernet_model_1_1_queue_buffer.html</anchorfile>
      <anchor>a4ff8a59871277e2dd95c30e47fcae75c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::CTBuffer</base>
    <member kind="function">
      <type></type>
      <name>RCBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a28a7080ddfdf7e174c60e603e591a163</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RCBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a212e2052db6d39afc9eaa2ababfe0b80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetBag</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>aa1c315bc29d6e0142ca2083963dfa8ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a1f08d040d089ae71cd04ae090dcf168e</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>ae45b6326746540c298c4984ec882a2df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a26004d9ecf78c5ef969734abbaeaf6af</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>aaf4e100095277446da87f5e705532414</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bagExpired</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a3100b00349614e1133c9dbef3de05ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>numReset</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>a209f46ba8e8256c356e633926412d29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SchedulerTimerEvent *</type>
      <name>timerMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_buffer.html</anchorfile>
      <anchor>ae4ea236625d88fa133564931fc34ea01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCDoubleBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_double_buffer.html</filename>
    <base>TTEthernetModel::RCBuffer</base>
    <base protection="private">TTEthernetModel::DoubleBuffer</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCQueueBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_queue_buffer.html</filename>
    <base>TTEthernetModel::RCBuffer</base>
    <base>TTEthernetModel::QueueBuffer</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_buffer.html</filename>
    <base virtualness="virtual">TTEthernetModel::CTBuffer</base>
    <member kind="function">
      <type></type>
      <name>TTBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer.html</anchorfile>
      <anchor>a2339c6f1ae57205d239aba4fcabcae18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TTBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer.html</anchorfile>
      <anchor>a1a8c955b41a59b8dc0a810b77d5e6f47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer.html</anchorfile>
      <anchor>a019fc44e7ff5ac11f77dbd05fbab3123</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer.html</anchorfile>
      <anchor>ab218b6f191c2d664696574d519144407</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer.html</anchorfile>
      <anchor>a78eff1b2851f7f86a09377237ea14847</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer.html</anchorfile>
      <anchor>a6f088c185c9be2ea71150ad04c2c3ccb</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SchedulerActionTimeEvent *</type>
      <name>actionTimeEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer.html</anchorfile>
      <anchor>a4b75f1f4bde77e1f66506c1dabb9c001</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTBufferEmpty</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</filename>
    <member kind="function">
      <type></type>
      <name>TTBufferEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a6c481edaac22f65e33f33b901f07b7ae</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TTBufferEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>aea8b05d0af0e753bd36d89ccbb444b8e</anchor>
      <arglist>(const TTBufferEmpty &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TTBufferEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>ab6dd684f1f930388fc67865bd311b050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TTBufferEmpty &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>ab1334c1ce52ac3fb90f40e671b05823e</anchor>
      <arglist>(const TTBufferEmpty &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TTBufferEmpty *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a81168ffeefb0c21aa54dfd3293702fe5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>ac8e4b78753c335b2b409e39218f1ae83</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a48bc3cc75438d769c8d139442ac079c5</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a34dff78e66c19a20f5063156c5de6280</anchor>
      <arglist>(const TTBufferEmpty &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_buffer_empty.html</anchorfile>
      <anchor>a3e3c9132ee0c2d33b0c9b47846f4ebde</anchor>
      <arglist>(const TTBufferEmpty &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTDoubleBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_double_buffer.html</filename>
    <base>TTEthernetModel::TTBuffer</base>
    <base>TTEthernetModel::DoubleBuffer</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTQueueBuffer</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_queue_buffer.html</filename>
    <base>TTEthernetModel::TTBuffer</base>
    <base>TTEthernetModel::QueueBuffer</base>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::BaseConfigurationManager</name>
    <filename>class_t_t_ethernet_model_1_1_base_configuration_manager.html</filename>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_base_configuration_manager.html</anchorfile>
      <anchor>a7a96aa7bb1d1cfdb5cc0c7aeb5c5f0c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_base_configuration_manager.html</anchorfile>
      <anchor>a6fd4995bb7f027a1e53e631a7051889e</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::Incoming</name>
    <filename>class_t_t_ethernet_model_1_1_incoming.html</filename>
    <member kind="function">
      <type></type>
      <name>Incoming</name>
      <anchorfile>class_t_t_ethernet_model_1_1_incoming.html</anchorfile>
      <anchor>a3d8d8f98264c1e8353d7c37af4b4aa94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_incoming.html</anchorfile>
      <anchor>addb7e0a67350ee855fd2ee12229f5a1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_incoming.html</anchorfile>
      <anchor>a5ac75f71601c607f38b7a96525b5b8e7</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hadError</name>
      <anchorfile>class_t_t_ethernet_model_1_1_incoming.html</anchorfile>
      <anchor>a93c9b0218b8b0560152cfa731b70d6a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>ctDroppedSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_incoming.html</anchorfile>
      <anchor>a7943b1436f1d363536ac89bfbd12d3c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::PCFIncoming</name>
    <filename>class_t_t_ethernet_model_1_1_p_c_f_incoming.html</filename>
    <base>TTEthernetModel::Incoming</base>
    <member kind="function">
      <type></type>
      <name>PCFIncoming</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_f_incoming.html</anchorfile>
      <anchor>aa39c92ee13f949cbefd2442ac707211b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_f_incoming.html</anchorfile>
      <anchor>a17ab6bc16f37d08b32019134c7575bd2</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_f_incoming.html</anchorfile>
      <anchor>a38c009d5d097389415ad311017ed9899</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_f_incoming.html</anchorfile>
      <anchor>abe59655d5103cc37715908dc1d99688d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PCFType</type>
      <name>pcfType</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_f_incoming.html</anchorfile>
      <anchor>a5926cbc4f5a5b08db917d042a73b0054</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCIncoming</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_incoming.html</filename>
    <base>TTEthernetModel::Incoming</base>
    <member kind="function">
      <type></type>
      <name>RCIncoming</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_incoming.html</anchorfile>
      <anchor>a2e91469273a2dadc6ddc128765fd37f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_incoming.html</anchorfile>
      <anchor>a723830f6e453a9c1bb05cd6b81ac77f9</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_incoming.html</anchorfile>
      <anchor>a1b5ad168546c8989b2612d208b77d1e7</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint64_t</type>
      <name>lastArrived</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_incoming.html</anchorfile>
      <anchor>a540a1303aa120c1929b9a3334dafd28c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint64_t</type>
      <name>bag</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_incoming.html</anchorfile>
      <anchor>a032e45132a618de300da57e9e1d3710b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTIncoming</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_incoming.html</filename>
    <base>TTEthernetModel::Incoming</base>
    <member kind="function">
      <type></type>
      <name>TTIncoming</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_incoming.html</anchorfile>
      <anchor>a6d4d52ad84020314206ca1f280a07d72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TTIncoming</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_incoming.html</anchorfile>
      <anchor>a5d1ffb0940fff4fc9ef8284ca58dca6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_incoming.html</anchorfile>
      <anchor>a957fe196b6e0e5fd38c6bf3af879e14b</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EtherFrame *</type>
      <name>frame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_incoming.html</anchorfile>
      <anchor>aa29dca1540c001cbf321b4826d21b092</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::BGTrafficHandle</name>
    <filename>class_t_t_ethernet_model_1_1_b_g_traffic_handle.html</filename>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_b_g_traffic_handle.html</anchorfile>
      <anchor>a95560712bbfdfeb3b8cc0ee5ec9d1e54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_b_g_traffic_handle.html</anchorfile>
      <anchor>a63ec50dfd77c3ee9cf1e4f8420836adc</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::CTFrame</name>
    <filename>class_t_t_ethernet_model_1_1_c_t_frame.html</filename>
    <base>TTEthernetModel::CTFrame_Base</base>
    <member kind="function">
      <type></type>
      <name>CTFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>aa6c3124d71f93a9e6c77dc222ec0c83c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a2bf2035a4f5ef70b344111f6c62cdc9d</anchor>
      <arglist>(const CTFrame &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>ab74c6406cbcf6192f3382bb5ada7682e</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type>CTFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a5e883632cad236af244d02466f1a3702</anchor>
      <arglist>(const CTFrame &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CTFrame *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a00029d359f0f54ffb9ab68d9b524eedc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16_t</type>
      <name>getCtID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a2fea209999310a2d5378473778edc0a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCtID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a6cc596633d31d4d3c7a961861601b762</anchor>
      <arglist>(uint16_t ctID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>getCtMarker</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a388ddcdd5f1aa8a77144f4ff21c739ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCtMarker</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame.html</anchorfile>
      <anchor>a6614e211b31a81b20eb38824f59c0cd2</anchor>
      <arglist>(uint32_t ctMarker)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CTFrame_Base</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a32b4ef22f7271d956390a2095521c99d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a1ba8f346f8bdb002736819abebbeb9b4</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a3febdbe4a65ad54518014ad711a08b13</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a97915b105fa050dab255ee93822eb53a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>afd65dd3c5194fab53ff6673dd5c3a0ca</anchor>
      <arglist>(const char *displayString)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a5a8a7e08cb9160bce581ed67ba8b4129</anchor>
      <arglist>(const CTFrame_Base &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CTFrame_Base</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a21eadc291f0553e50f70d32e073be2c4</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CTFrame_Base</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>af652f0bfe6c1ce8ef2b929c685e044cd</anchor>
      <arglist>(const CTFrame_Base &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CTFrame_Base &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>ac94553b4465cd110a6de752c0515b485</anchor>
      <arglist>(const CTFrame_Base &amp;other)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>opp_string</type>
      <name>displayString_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>aa4dd6c2d444c15017ab678f6063e1e0b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::CTFrame_Base</name>
    <filename>class_t_t_ethernet_model_1_1_c_t_frame___base.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual CTFrame_Base *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>add5599636cba972ebf6d9ac76f2c7dcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16_t</type>
      <name>getCtID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a85eeb9d9bd96c8942715a2c78e4d653c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCtID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a168bd939d3b82dec23a71413d0741a07</anchor>
      <arglist>(uint16_t ctID)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>getCtMarker</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>adef74ce7a4839fb29ecfaec169ad55ef</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCtMarker</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a9e20797c5f494a8f6c33ffd3a3beba8a</anchor>
      <arglist>(uint32_t ctMarker)=0</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_c_t_frame___base.html</anchorfile>
      <anchor>a91c2026d9aff65d2f5ad9fc40f46cb7b</anchor>
      <arglist>(const CTFrame_Base &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::PCFrame</name>
    <filename>class_t_t_ethernet_model_1_1_p_c_frame.html</filename>
    <base>TTEthernetModel::RCFrame</base>
    <member kind="function">
      <type></type>
      <name>PCFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a4fc14437f6fd6a9846c5a16f63f4b1f2</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PCFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>aafc5f7c0639a1333454d7fbf8088407a</anchor>
      <arglist>(const PCFrame &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PCFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a60dbb86e15517b2415c94e92938a50ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PCFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a59d4f03020b30ff280ecc669507d98d3</anchor>
      <arglist>(const PCFrame &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PCFrame *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a1cde6482f24ab3e15b0925333c3aee1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a1ae745b23af6e1f298cae1830545c0c4</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>aa28f36c66158b42e6fe77cdb270bff59</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>getIntegration_cycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a4cdb22a6b94e3349fda06cbd8d8c81b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIntegration_cycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a40db4a5606b72d5edd31a5cf087d55c4</anchor>
      <arglist>(uint32_t integration_cycle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>getMembership_new</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a0090730a0044d2f39b9a45f35af035dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMembership_new</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a27cc4c12fe4a6388148a65d24a8c9b0f</anchor>
      <arglist>(uint32_t membership_new)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>getSync_priority</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>ac341672095bb40dea74b6cca65a6685a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSync_priority</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a50972839445b1af41186e28829842552</anchor>
      <arglist>(uint8_t sync_priority)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>getSync_domain</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a6496db3fbece4788f4135d974fc8b534</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSync_domain</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>adf48954713c4f9f14a80b2fa04c72575</anchor>
      <arglist>(uint8_t sync_domain)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>getType</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a5f200d7348c2a117363c4d85badd5fe7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setType</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a9fb8e1f99431891cfaff6113845fa077</anchor>
      <arglist>(uint8_t type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>getTransparent_clock</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a080d6a6fa849d7fffd072751c7817b68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransparent_clock</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a0d73d91af4fb078b2e625ccef226a434</anchor>
      <arglist>(uint64_t transparent_clock)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>ad7af2e3570a5d8604160547b88f3810d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a67b759c126e9853282bac95ed4ab657d</anchor>
      <arglist>(const char *displayString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>a74532a1341809108c31d0838eae713ed</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>ab17c70f772011823042b3198262ba3c3</anchor>
      <arglist>(const RCFrame &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RCFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>af5a52c00a12dafb5ed423af78573e57d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>ad6a2eafe9d449a821a8f2bdfc0bc12d3</anchor>
      <arglist>(const RCFrame &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a55eaa4bc782f93eeee3b47a4c4041999</anchor>
      <arglist>(const PCFrame &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>ad990b4c6e128095f1a1e3c7ba56cec73</anchor>
      <arglist>(const RCFrame &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>integration_cycle_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>aa2a9bd407029116c8113e9c14cd4c789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>membership_new_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a618f8a4cb35c1a23252d9244f563f3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>sync_priority_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>aed31bff1def8c0c62b1907f4881e302e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>sync_domain_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a4f2ef6adab0e76ccc2d6cf434cb9dcae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>type_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a2afdda6e054292dd1304f0caed9aae5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>transparent_clock_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>ac3f84a60ab18d3278e9fa1c1d4b25298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>opp_string</type>
      <name>displayString_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a0916ca7f28ceaa36ad8dc33d64fffd14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>opp_string</type>
      <name>displayString_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>a6ff3736774da30ed8f64585fcae9bc67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_p_c_frame.html</anchorfile>
      <anchor>a8845b058d2111858080f922f390ca90d</anchor>
      <arglist>(const PCFrame &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RCFrame</name>
    <filename>class_t_t_ethernet_model_1_1_r_c_frame.html</filename>
    <base>TTEthernetModel::CTFrame</base>
    <member kind="function" virtualness="virtual">
      <type>virtual RCFrame *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>a46f3718b6c8e99bdce957eaa5f3b024c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>a402750475afd12efc934c8cdfb860db4</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>a7416e213b40a103a9892593674a235a5</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>a99c267c9f51ca952728b0ddc5ab35784</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>a9b87c58902e8189c528129125b2eb8c5</anchor>
      <arglist>(const char *displayString)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_r_c_frame.html</anchorfile>
      <anchor>ab91613921b2d34d4f7e206f9614650c1</anchor>
      <arglist>(const RCFrame &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTFrame</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_frame.html</filename>
    <base>TTEthernetModel::CTFrame</base>
    <member kind="function">
      <type></type>
      <name>TTFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>aab16252082ba69af7e5064b60a902de1</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TTFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>a1ac4a4559e41c01b265ec2a17e06e530</anchor>
      <arglist>(const TTFrame &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TTFrame</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>a018cb7ba732769ba614d2b1e886e2855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TTFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>ade0dcaa3310083546c23ed086d7b0a54</anchor>
      <arglist>(const TTFrame &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TTFrame *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>a0fab9929c53b6718d43df8dabacead11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>a8b43fa17744a5a8ba5441118abf9b6c7</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>ab9412f52689e2016841faa9d82f42bfa</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>a8f49dd8711f5401e3a9aaa0f3f8b8c3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisplayString</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>a688dff71dd3c331f2a60d478a02015af</anchor>
      <arglist>(const char *displayString)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>af3edd9c51478b17896a571a66c80ee13</anchor>
      <arglist>(const TTFrame &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>opp_string</type>
      <name>displayString_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>a5473819d1a709660529169fbf3a21550</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_frame.html</anchorfile>
      <anchor>a11346a05c64ca820fa15ed79795e2383</anchor>
      <arglist>(const TTFrame &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEInput</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_input.html</filename>
    <member kind="function">
      <type></type>
      <name>TTEInput</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>ae4a93376feb0c86d94bf03a4d1a71e5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a3c9f4c8b21c9f67fe94f1f47d4f116aa</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a662ebf14464f337aa3a5a21ee2c8451c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a787189dd1096648e01c28fb2ae51d42f</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hadError</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a17a1091fad15b18d3914a28ab4c56b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>ctDroppedSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>ac3e45a6edb1c107af246b74feb7ecb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCT</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a3b0e81aeb6f2cafae491db474a097eed</anchor>
      <arglist>(EtherFrame *frame)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual uint16_t</type>
      <name>getCTID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>af95a545e8b0558f1307c2ad740b24c43</anchor>
      <arglist>(EtherFrame *frame)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; uint16_t, std::list&lt; Incoming * &gt; &gt;</type>
      <name>incomings</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>aaaececd11f6657b3e0ee0df3d97c3059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>ctMask</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>a82cf009403203ac2617d8653ae1934cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>ctMarker</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>ac83d02d31255e8347c3312da4e87c82a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>promiscuous</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_input.html</anchorfile>
      <anchor>aef2add9ea7abff75f9320e7e5bc5d321</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEOutput</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_output.html</filename>
    <member kind="function">
      <type></type>
      <name>TTEOutput</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>ab968c58c879864bd9985b5998388a2ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TTEOutput</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a4157c9b499b19acccb411a309aa7c686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>aa4ef4ab8ac5d91d1fd5e76814cb10550</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addListener</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a0676f12c27e9ef3e7776c0acfe70901d</anchor>
      <arglist>(IPassiveQueueListener *listener)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeListener</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a91e6f036feb0e6308920778003c4253c</anchor>
      <arglist>(IPassiveQueueListener *listener)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a986591ead93237643e88d4020f764df0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a70262cb8679514a6b781aa655ac5090f</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>requestPacket</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a94831b378a881dd1677657884c75d359</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumPendingRequests</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>ac55e4e6ffd709810a2c2ca85c7fb112e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEmpty</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a6d424bc0883c8e7550dc0e796bf0c8cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a674f0c4a336bdaf7b5b4d01e01ef11b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notifyListeners</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a137bf29cc9b4914d8a6e896a03b19a6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>ttQueueLengthSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a1a9507a65aff479ff4b61888c68270ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>beQueueLengthSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>afa7b69c7f2d89563e55286cf355d41b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>pcfQueueLengthSignal</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>abb9e957c0df6f82aebbbb3ecbc08446f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTransmissionAllowed</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>ad1c852f0d04c6d14b680f6d7bc76683d</anchor>
      <arglist>(EtherFrame *message)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransparentClock</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a0e77770f63e3aa9304a50c38c7a0f51c</anchor>
      <arglist>(PCFrame *pcf)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>registerTTBuffer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>aa915182c2ca1fa08c42d5bd7778e8049</anchor>
      <arglist>(TTBuffer *buffer)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cChannel *</type>
      <name>outChannel</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>aee61f7bffa323acc06c45781b3596284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>framesRequested</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>ad83090e8780efd64cac05c45a7906638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>ttQueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a42f484692a92cd55ef9c1962f69b1aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>rcQueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a526c96163c69076a4692e84af2e0dadc</anchor>
      <arglist>[NUM_RC_PRIORITIES]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>beQueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a2746167140e2ecf8fdccc72edbc06419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cQueue</type>
      <name>pcfQueue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>aa01659c8572a09479b84e4a760a11871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; TTBuffer * &gt;</type>
      <name>ttBuffers</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a25d691c591e2153d28719e3890898886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; IPassiveQueueListener * &gt;</type>
      <name>listeners</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a8b02dfe81ab36f3c2cbf7988f04067cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>ttBuffersPos</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_output.html</anchorfile>
      <anchor>a49908d6f6f23066f82ba78702f8dcb63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::RecordPlaybackScheduler</name>
    <filename>class_t_t_ethernet_model_1_1_record_playback_scheduler.html</filename>
    <base>TTEthernetModel::TTEScheduler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_record_playback_scheduler.html</anchorfile>
      <anchor>af0837876590b5f1223b5690c57b88611</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecordPlaybackScheduler</name>
      <anchorfile>class_t_t_ethernet_model_1_1_record_playback_scheduler.html</anchorfile>
      <anchor>a99b0aabe725858e24a338040a05a524b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>changeDrift</name>
      <anchorfile>class_t_t_ethernet_model_1_1_record_playback_scheduler.html</anchorfile>
      <anchor>a547f8e9f2f3bafbba45e1dcdfa7b4951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TTEScheduler</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a30f72f29b15d4e7e43827bfaf8ce1ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>getTicks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a6831234789320df881e83389f49cd773</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>getTotalTicks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>ac0ad022871d9c70f81625755d7cdb77e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>getCycles</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>abedcf2e9dee0a4d1a3c215133b0283b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clockCorrection</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a47d1fbcf833c7f8d6627277a4b8525b3</anchor>
      <arglist>(int32_t ticks)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>registerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>afc4a5062aeb6488f879e99df6cb35865</anchor>
      <arglist>(SchedulerEvent *event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>registerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>ab4982b6b9a942543ebef29621f19c254</anchor>
      <arglist>(SchedulerActionTimeEvent *actionTimeEvent, bool forceNextCycle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unregisterEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>acfeedfdd1219d0ab349663750d1be18a</anchor>
      <arglist>(SchedulerEvent *event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>correctEvents</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a1d44b1afcda7d7fda8dbe9974ca50d59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_record_playback_scheduler.html</anchorfile>
      <anchor>ae765dc6738c12e3cf7a1167ccc34dce1</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a6c787721f21a9e9d4484cc121d41d65e</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>ae3cee7dfc4267e06777e68d24676a199</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FILE *</type>
      <name>fp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_record_playback_scheduler.html</anchorfile>
      <anchor>a81d1ae691dd212754315cbbd2f470f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>counter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_record_playback_scheduler.html</anchorfile>
      <anchor>ab77b0b80012d73b1a54c958d4fb2ec21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt; *</type>
      <name>values</name>
      <anchorfile>class_t_t_ethernet_model_1_1_record_playback_scheduler.html</anchorfile>
      <anchor>a173be499019e9af0d963c9e1b3d4b1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simtime_t</type>
      <name>lastCycleStart</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>aea8a89df27267990b93dee83a5af0714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simtime_t</type>
      <name>lastNewCycleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a4d5242a559cd9b03e414737478fbfed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>lastCycleTicks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a2d87fc1cbd4c25c86d1848bc41303532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; SchedulerEvent * &gt;</type>
      <name>registredEvents</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a0791fe14690ef7e7d8522bd327b131a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cMessage *</type>
      <name>newCyclemsg</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a2888779973a53b90f45b75572e9a4ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simtime_t</type>
      <name>maxDrift</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a1edefaca11211937a0f25bac41c6b705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simtime_t</type>
      <name>currentTick</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a09879c9ecea584f0f9fdf9a6b9ae517b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simtime_t</type>
      <name>tick</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>ad52d22f0ff333c545fdda908ea086498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>cycleTicks</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a19c3046efecb7b6b01d954af55ca719f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>cycles</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>af3200fe6d183cc70909a4573817d9fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>currentDrift</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a35b241eb0e43cba370968101f127d8c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static simsignal_t</type>
      <name>newCycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>acfe085a06ee865037999c12e5c3a2e58</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerEvent</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_event.html</filename>
    <base>TTEthernetModel::SchedulerEvent_Base</base>
    <member kind="function">
      <type></type>
      <name>SchedulerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>ad741b59d49d26c2cfd704042a2e02734</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SchedulerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a99016db380a7e1bb7a02dc0f0d91e718</anchor>
      <arglist>(const SchedulerEvent &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SchedulerEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a8187e29c29291a50a78d45b11d719de1</anchor>
      <arglist>(const SchedulerEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerEvent *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a6c143fc32caf9211282a2958b99f419e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cGate *</type>
      <name>getDestinationGate</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a597c63bcc7eebb347b6e143a7b847e38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDestinationGate</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>a2fb753af35fa839f02e0435cdc496878</anchor>
      <arglist>(cGate *destinationGate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchedulerEvent_Base</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>ae439484f9aa61d2ba19b0a1bad34bb53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>a8de448386e34b5c045735c77c047aa33</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>af1f20976b20dc1417325f96ab394ce0c</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SchedulerMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>ab2077211501f37cd31dff6ee4ee374e5</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SchedulerMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a305da2f25273a39ea813b27b3cd7d136</anchor>
      <arglist>(const SchedulerMessage &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchedulerMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a43301459c2bee1994e52e561a5af64a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SchedulerMessage &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>ac00f94747a5057ad9415c87289eb92ec</anchor>
      <arglist>(const SchedulerMessage &amp;other)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cGate *</type>
      <name>destinationGate_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event.html</anchorfile>
      <anchor>aa28d7c5c37651874570e63d928154522</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>abd029a56dfc5ca28049313e65b33d8ce</anchor>
      <arglist>(const SchedulerEvent_Base &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SchedulerEvent_Base</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>a243aa907cf88c4b3c7025ccd63b12046</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SchedulerEvent_Base</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>a10a0d86db7a23d5e4f570821c5ab4024</anchor>
      <arglist>(const SchedulerEvent_Base &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SchedulerEvent_Base &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>a5cc2669857d57506d67ac227d0b8d383</anchor>
      <arglist>(const SchedulerEvent_Base &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerMessage</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_message.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerMessage *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a32ae982ccba2167ddd793564cbffd15b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>ac3e28dacbfef78e9d12a827be54b42e7</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a01e4bdf7a65877f11b5ffd82356e1c4b</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>a2015e1f5336613b02df6d4e96ca646a0</anchor>
      <arglist>(const SchedulerMessage &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_message.html</anchorfile>
      <anchor>ac2044e14e3d9d1ac902e51800c9d7794</anchor>
      <arglist>(const SchedulerMessage &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerEvent_Base</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_event___base.html</filename>
    <base>TTEthernetModel::SchedulerMessage</base>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerEvent_Base *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>ac639d29395c621c3b7fd57917b6d505a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_event___base.html</anchorfile>
      <anchor>adf1d99683f239d13a1798233be14ee62</anchor>
      <arglist>(const SchedulerEvent_Base &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerActionTimeEvent</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</filename>
    <base>TTEthernetModel::SchedulerEvent</base>
    <member kind="function">
      <type></type>
      <name>SchedulerActionTimeEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a905686590d90be8991a5d8a3815ae7e7</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SchedulerActionTimeEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a937e5a6ee9b99faf9c23dbfdb09dada2</anchor>
      <arglist>(const SchedulerActionTimeEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchedulerActionTimeEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>ad8e365f4556c0f682ce394029fa92de6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SchedulerActionTimeEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>add7d80b622dd75103a97245a5056e3c5</anchor>
      <arglist>(const SchedulerActionTimeEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerActionTimeEvent *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a3a2a1b92dc94a5b1dab3d4534e4b6b8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a62172c386badbe7a544cfbd693365930</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>ad79cba341615162904aac92db3b12648</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>getAction_time</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>ae1923af8a78544d569484f5d4d63a008</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAction_time</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>ab0f807d52294908cc0822e279f267c93</anchor>
      <arglist>(uint32_t action_time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a10bb01b8a3978ab70a4a0014e8c1cf3a</anchor>
      <arglist>(const SchedulerActionTimeEvent &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>action_time_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a90beef7f5572fb9ef5b6bd5c55d95dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_action_time_event.html</anchorfile>
      <anchor>a492fce16d562409d2699c41a5b6e22f6</anchor>
      <arglist>(const SchedulerActionTimeEvent &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SchedulerTimerEvent</name>
    <filename>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</filename>
    <base>TTEthernetModel::SchedulerEvent</base>
    <member kind="function">
      <type></type>
      <name>SchedulerTimerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a6b8979d250cc0cb4456ce5d82065e540</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SchedulerTimerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>ad111f0095ab4b890371eaa9e89dcdcbb</anchor>
      <arglist>(const SchedulerTimerEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchedulerTimerEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>ad69f0d7bb5b567b243fdacbdcdca726f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SchedulerTimerEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>aaaab1ea27ca07d8de442fc48aec14b24</anchor>
      <arglist>(const SchedulerTimerEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SchedulerTimerEvent *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a02d50f61dcb7958beed7b30c43115f0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>ad4abaa32d1af246731cdf6a62fdb5c5f</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a4ba27e5809696d7422e1c962211c7e6c</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64_t</type>
      <name>getTimer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a162602f83626bf5fe51bf31eb8bd1b9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTimer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a745bd5c895c3f8c974e8650fda2b2c15</anchor>
      <arglist>(uint64_t timer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a0f3ca0ae4f0b7d17e6e4ec7972967743</anchor>
      <arglist>(const SchedulerTimerEvent &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>timer_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a76151b99678cb6dcf7b342174db49f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_scheduler_timer_event.html</anchorfile>
      <anchor>a14a86fa1e49bee86d5d943e1400202c2</anchor>
      <arglist>(const SchedulerTimerEvent &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::TTEScheduler</name>
    <filename>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>ac88fa65ebf14efcf4c5463eda1f8a980</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>changeDrift</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a902defa7f993806c5121a8c0099cf3de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_t_t_e_scheduler.html</anchorfile>
      <anchor>a44bf1e841a5d31175a74b35c047e6e46</anchor>
      <arglist>(int stage)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HICM</name>
    <filename>class_t_t_ethernet_model_1_1_h_i_c_m.html</filename>
    <member kind="function">
      <type></type>
      <name>HICM</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>a2092e6b05162498621ad2848cc76ad7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HICM</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>a9c0d628755d4a6ce5e356f373e8537d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>a7f83719a05711d72446aaa93345a80e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>a28ac4bb9c9fa46c545899aa29dfbb521</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>a7615e0fe926175d0a2e5b14d0c78c477</anchor>
      <arglist>(cMessage *m)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finish</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>ae93b39af48b37ff7a5a6717665b7488a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HICMStateContex *</type>
      <name>cm</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>a68da65bdec68a640e7f7c6f936147972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HI_CM_INIT *</type>
      <name>c0</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>a41b38978db8b243aa9b2a62a4baa0e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FILE *</type>
      <name>fp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>adc28bf562aa9e999aaa7ae42e37b4e18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::stringstream</type>
      <name>ss</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>a98132802b084b2f0d36b8350a6b3a5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>path</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m.html</anchorfile>
      <anchor>a7851aa38deefe97d8ebfb541792429a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HICMState</name>
    <filename>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a64dc06d2124daff76599248933a7ca46</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a2829ee9db511717e0da475cd43164741</anchor>
      <arglist>(cMessage *message, HICM *sicm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a539aefc6d5a70e26e1c0b8fce8d3d528</anchor>
      <arglist>(unsigned int bitVector, int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitPosition</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a90168898aa701dd5f03ec5d9acf55969</anchor>
      <arglist>(unsigned int bitVector)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inSchedule</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a31c9d61d12c78dd164dd836cbf6fe88d</anchor>
      <arglist>(unsigned int permanence_pit, unsigned int sc_receive_pit, unsigned int precission)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inSchedule2</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a32e329b1b6784d4ac61766eb3a600008</anchor>
      <arglist>(unsigned int permanence_pit, unsigned int sc_receive_pit, unsigned int acceptance_window)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compress</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ace4f12dc6358234881a6ddd97e5227e3</anchor>
      <arglist>(vector&lt; pair&lt; unsigned int, unsigned int &gt; &gt; *vct, int faulty_sms)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>setBits</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>aa06ff1bd02a8b6c5619673447e345414</anchor>
      <arglist>(vector&lt; pair&lt; unsigned int, unsigned int &gt; &gt; *vct)</arglist>
    </member>
    <member kind="variable">
      <type>cOutVector *</type>
      <name>outVector</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a6cf2c4b46144d3510f3ca6a4ab432310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HICM *</type>
      <name>hicm</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a24c51d1c7b7c7b7cc9c20169451d330c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>fp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a91d8df38106c58a52a9e5a6c8b9188e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt; *</type>
      <name>values</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>afc9996158fc518ee68111f618e68abe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>counter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a7416bddee763e2e9babf25129fa1aca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dummy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a89b98b359e6648a84e6b1b5f843530fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>data</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a656660c440c2a5a3c4edf7af376a297f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>local_timer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ae07d14c77aa72226ceb0c33d048b4ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>flood_receive</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a3ed0d6ad219b295a341b91e5d43c502a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>closed_window</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a20c2e80a7da34904a5e8d73ba06df47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>round_completed</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a32f3183c2bdbaff3dcd1cc8cd2bcc20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>local_clock</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a8d9ddbd364865c759ee33b9745f7d22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>local_sync_membership</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a526e335a4ccde505f9a8d9e2ca8091fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>local_async_membership</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a850d4445fa5a4c31a6a74bc5b58dc0e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>local_integration_cycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ae84f75fcf8d3c6adeef2e7910f1ee839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>clock_corr</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a4e99026910d5117be8244b4e729eb8cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stable_cycle_counter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ab565f217d8ed4ba4983a9d2b8c465717</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>duration</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a29be3a9ea6a275182851f6d4c1979a83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>max_transmision_delay</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>acd335c70e35e78f5b359840b37bdaee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>local_async_membership_r</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a58e7462799b23fc06efd0cf22c9b5b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>local_async_membership_f</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ad6972f8dc85063c009af514af0ff0f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ctid</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a69aae029aefbcf1c8c00e75d44fc6bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event2</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a6054ff2f18236a2ab1d1fb8d1ce30016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event3</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ae239746bfe1e4c6cd6a5c15f350020b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event4</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a4b986f8952d4f15c8910ba3abcebd03e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event5</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a14700b49e2793b4d61e82e5ce456e1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TTEScheduler *</type>
      <name>tteScheduler</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ad3668faf19bc65d904d74e00587d154e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerTimerEvent *</type>
      <name>event</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ab496875d06e29251d6dbea1afe2fbd8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>map&lt; long, PCFrame * &gt; *</type>
      <name>compressed_frames</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a58e76fc5801197fdffbf9b46a92b2c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>map&lt; unsigned int, vector&lt; pair&lt; unsigned int, unsigned int &gt; &gt; * &gt; *</type>
      <name>compression_stack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ade67e21ae76e0b842149fe04b1b1d333</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>map&lt; unsigned int, vector&lt; pair&lt; unsigned int, unsigned int &gt; &gt; * &gt;::iterator</type>
      <name>compression_stack_it</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ac79d349b94d74026d3ff4cdf6d0c3742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>deque&lt; CompressedPIT * &gt; *</type>
      <name>delay_container</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>aede02bae7e2b00a4862bfa001c19c646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>deque&lt; DispatchDelay * &gt; *</type>
      <name>dispatch_delay_container</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>ab858994a7bae73aabb5565607f3c5719</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>deque&lt; pair&lt; unsigned int, unsigned int &gt; &gt; *</type>
      <name>clock_stack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state.html</anchorfile>
      <anchor>a0345d2f121dd102452271efd72c54c5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HICMStateContex</name>
    <filename>class_t_t_ethernet_model_1_1_h_i_c_m_state_contex.html</filename>
    <member kind="function">
      <type></type>
      <name>HICMStateContex</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state_contex.html</anchorfile>
      <anchor>ae9fa1b3f170c837831d036563bea57bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HICMStateContex</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state_contex.html</anchorfile>
      <anchor>ab9d3c971d2c09f62f6407e74c9e7caca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state_contex.html</anchorfile>
      <anchor>a384cd771e2c9d16aa585e0dbaf2ea537</anchor>
      <arglist>(HICMState *firstState)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parseMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state_contex.html</anchorfile>
      <anchor>a346f6b7be7c8f6a652275e412c0a018c</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HICMState *</type>
      <name>pState</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i_c_m_state_contex.html</anchorfile>
      <anchor>a51421b5d8c9983a8fe5b689be02a57db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HI_CM_INIT</name>
    <filename>class_t_t_ethernet_model_1_1_h_i___c_m___i_n_i_t.html</filename>
    <base>TTEthernetModel::HICMState</base>
    <member kind="function">
      <type></type>
      <name>HI_CM_INIT</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___i_n_i_t.html</anchorfile>
      <anchor>a55a757a2f7651d78e1bed7c58ba3f69c</anchor>
      <arglist>(HICM *hicm, FILE *f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HI_CM_PSEUDOSYNC</name>
    <filename>class_t_t_ethernet_model_1_1_h_i___c_m___p_s_e_u_d_o_s_y_n_c.html</filename>
    <base>TTEthernetModel::HICMState</base>
    <member kind="function">
      <type></type>
      <name>HI_CM_PSEUDOSYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___p_s_e_u_d_o_s_y_n_c.html</anchorfile>
      <anchor>a314743ce54d2ea19a02ef3d2eca2fbc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___p_s_e_u_d_o_s_y_n_c.html</anchorfile>
      <anchor>a3eec96f52f00078ed667b70c1cc129b3</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HI_CM_INTEGRATE</name>
    <filename>class_t_t_ethernet_model_1_1_h_i___c_m___i_n_t_e_g_r_a_t_e.html</filename>
    <base>TTEthernetModel::HICMState</base>
    <member kind="function">
      <type></type>
      <name>HI_CM_INTEGRATE</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>a88ea544c9ff07b976a9b62382fdbd04f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>af24a7ffa485cfb0d61c61c70c701b4ea</anchor>
      <arglist>(cMessage *message, HICM *hicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>ae4227df53af21197f8fcf6e229048355</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HI_CM_STABLE</name>
    <filename>class_t_t_ethernet_model_1_1_h_i___c_m___s_t_a_b_l_e.html</filename>
    <base>TTEthernetModel::HICMState</base>
    <member kind="function">
      <type></type>
      <name>HI_CM_STABLE</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___s_t_a_b_l_e.html</anchorfile>
      <anchor>a0512510b3c600b4288f0103e2afb9477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___s_t_a_b_l_e.html</anchorfile>
      <anchor>a3bceae8cd4fe419084811d512914a3ab</anchor>
      <arglist>(cMessage *message, HICM *hicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___s_t_a_b_l_e.html</anchorfile>
      <anchor>a2b65c69931761161a95a029d9482c380</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HI_CM_UNSYNC</name>
    <filename>class_t_t_ethernet_model_1_1_h_i___c_m___u_n_s_y_n_c.html</filename>
    <base>TTEthernetModel::HICMState</base>
    <member kind="function">
      <type></type>
      <name>HI_CM_UNSYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___u_n_s_y_n_c.html</anchorfile>
      <anchor>a32993c673264826061b644a5b6cd62f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___u_n_s_y_n_c.html</anchorfile>
      <anchor>ae1497f8bc28d72eb0a677b832d6349e7</anchor>
      <arglist>(cMessage *message, HICM *hicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___u_n_s_y_n_c.html</anchorfile>
      <anchor>ab6bed176a07634836d2cfba8b4813d9a</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HI_CM_SYNC</name>
    <filename>class_t_t_ethernet_model_1_1_h_i___c_m___s_y_n_c.html</filename>
    <base>TTEthernetModel::HICMState</base>
    <member kind="function">
      <type></type>
      <name>HI_CM_SYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___s_y_n_c.html</anchorfile>
      <anchor>a4c33abd9064a513b5da8a231874db643</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___s_y_n_c.html</anchorfile>
      <anchor>a789e3e7f0ea3f4594eac34863ec7b59b</anchor>
      <arglist>(cMessage *message, HICM *hicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___s_y_n_c.html</anchorfile>
      <anchor>a44781b5c3014bf867962d860d8925b97</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HI_CM_TENTATIVE_SYNC</name>
    <filename>class_t_t_ethernet_model_1_1_h_i___c_m___t_e_n_t_a_t_i_v_e___s_y_n_c.html</filename>
    <base>TTEthernetModel::HICMState</base>
    <member kind="function">
      <type></type>
      <name>HI_CM_TENTATIVE_SYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___t_e_n_t_a_t_i_v_e___s_y_n_c.html</anchorfile>
      <anchor>ab60a88760511ad9cb38e1a64046fecca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___t_e_n_t_a_t_i_v_e___s_y_n_c.html</anchorfile>
      <anchor>af6c5887622fd9e0a1e3c95de36b01dd7</anchor>
      <arglist>(cMessage *message, HICM *hicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___t_e_n_t_a_t_i_v_e___s_y_n_c.html</anchorfile>
      <anchor>a4e6ec2761e85ced1208679289b2eafba</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::HI_CM_WAIT_4_CYCLE_START</name>
    <filename>class_t_t_ethernet_model_1_1_h_i___c_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t.html</filename>
    <base>TTEthernetModel::HICMState</base>
    <member kind="function">
      <type></type>
      <name>HI_CM_WAIT_4_CYCLE_START</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t.html</anchorfile>
      <anchor>a55100a8a64129671ad6b7bbb4ff58f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t.html</anchorfile>
      <anchor>a9784c3581df70d2effe8c2669b514b4e</anchor>
      <arglist>(cMessage *message, HICM *hicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_h_i___c_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t.html</anchorfile>
      <anchor>a73c77a799c20089f9162073229b28948</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SICM</name>
    <filename>class_t_t_ethernet_model_1_1_s_i_c_m.html</filename>
    <member kind="function">
      <type></type>
      <name>SICM</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>a8c182f972fa61685250d7b1e71e6b8c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SICM</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>a06c696e8dd05f726787e95add797248a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>a4ce267e34c17faaaabe90413ee0ff4d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>ab2d104b7454d2692a9061a4b24ef5474</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>a80a69dc0255d10c02a004d0cacb501bd</anchor>
      <arglist>(cMessage *m)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finish</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>a3af34d50f13a80db095c2613be365bdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SICMStateContex *</type>
      <name>cm</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>ab1244ec592de5a8bdf209274fba2f92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SI_CM_INIT *</type>
      <name>c0</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>ac67cf49c55b5f1391571e952c7047f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FILE *</type>
      <name>fp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>ab4ed84a31694c101000e5cc53f19fba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::stringstream</type>
      <name>ss</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>a678f661cf1edbdeaa4055301b8f68d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>path</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m.html</anchorfile>
      <anchor>a7ef57aa5d2f6eff17fcf23cf66c00f55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SICMState</name>
    <filename>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a2a9d2d417c26303ead099152daecf854</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a7d05806b784b773bcb0785a8595ea9b1</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>compressionFunctionCA</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>af21fae5026c744acddf50b6d6fa405eb</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a8f7754347eeb6ddf884ed2efe4b21193</anchor>
      <arglist>(unsigned int bitVector, int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitPosition</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a61696f76b2324100f753c81d1142087b</anchor>
      <arglist>(unsigned int bitVector)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inSchedule</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>afccc5778d5c83972d2f97ed2da6114ca</anchor>
      <arglist>(unsigned int permanence_pit, unsigned int sc_receive_pit, unsigned int precission)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inSchedule2</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>aecf6d80260647c27c21da24f42e13c13</anchor>
      <arglist>(unsigned int permanence_pit, unsigned int sc_receive_pit, unsigned int acceptance_window)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compress</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a82348318432501edc630883241bfa3ae</anchor>
      <arglist>(vector&lt; pair&lt; unsigned int, unsigned int &gt; &gt; *vct, int faulty_sms)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>setBits</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a7ecff4894d30876be2c5a1fbfca8afeb</anchor>
      <arglist>(vector&lt; pair&lt; unsigned int, unsigned int &gt; &gt; *vct)</arglist>
    </member>
    <member kind="variable">
      <type>cOutVector *</type>
      <name>outVector</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a2d241ac7422977cd460e999c26ddcb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SICM *</type>
      <name>sicm</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>abb5b492128ccfcc9d539369acdbc0a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>fp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a22e081430457e6b39228b780f3328fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt; *</type>
      <name>values</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a12fc957c47c7159e2eb98487a22ff21f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>counter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a636e4f32f8ac63724cc0f720e3ea6823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dummy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a661f436d1ae3e09ff3baa30461dc2510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>data</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>ac0df613f90688dc1a78444ac13550833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>local_timer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>ac1843678f32ab664942e05394554dd34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>flood_receive</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a25ffd3a9f9c0e58997c2fe1b44484ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>closed_window</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>ac5c72fc5032b46e762c03dc981563e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>round_completed</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>aeebee04e9a1d3efbe8647a0142b7a428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>local_clock</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a495d52c675d6608327e98153646b177d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>local_sync_membership</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a494bb5882782b7901d1a0669f93bd51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>local_async_membership</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a128cafc0ef67e4720fc52ef59814b24d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>local_integration_cycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a797dab473665ad86ebd06c1a4fea9922</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>clock_corr</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>aaf79714cb661e2627a9605892ae2a53a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stable_cycle_counter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>aa47c09ff35f8be8301e9521cea078619</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>duration</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a1476d915916d951acfa23744886ab522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>max_transmision_delay</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a322348e8045c3e8c824e94b09606f5a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>local_async_membership_r</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>ab83df7f4d895dcccca1e8fa83091310a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>local_async_membership_f</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a06fa8c5368f3bc741cc8d3cd52b2c050</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ctid</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a3d4ee21c2c79192bd9c54d4ac80d2547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event2</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>aaff56c1d3261b9eda101fe818621912e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event3</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a1ccb46f3c16c98d6b01a3033252a29fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event4</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>ad25ef73f6639daf11e8be2d9c8b639c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event5</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a3393c1f1ebd76f7db652b02d661843f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TTEScheduler *</type>
      <name>tteScheduler</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a55fa62fc0a7d2b9a752a73880415eea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerTimerEvent *</type>
      <name>event</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a4bf7086c170466e2717e657fc4b38945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>multimap&lt; unsigned int, PCFrame * &gt; *</type>
      <name>caCompressedFrames</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>abd434816cb46165a346d9524d6c1937d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>deque&lt; pair&lt; unsigned int, PCFrame * &gt; &gt; *</type>
      <name>compressed_frames</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>ae69cb1c6847a82534bd23344674160bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>map&lt; unsigned int, vector&lt; pair&lt; unsigned int, unsigned int &gt; &gt; * &gt; *</type>
      <name>compression_stack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>ad39c413159fd6930b36470137771d841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>map&lt; unsigned int, vector&lt; pair&lt; unsigned int, unsigned int &gt; &gt; * &gt;::iterator</type>
      <name>compression_stack_it</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>affeb14700ee200ed2b6b8d08d29615a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>map&lt; unsigned int, vector&lt; pair&lt; unsigned int, unsigned int &gt; &gt; * &gt; *</type>
      <name>ca_compression_stack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>ac2c59bf5641a72a14c1279e097106334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>deque&lt; CompressedPIT * &gt; *</type>
      <name>delay_container</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>a87396c51f7f5607990cc4af7c15c48fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>deque&lt; DispatchDelay * &gt; *</type>
      <name>dispatch_delay_container</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>aad5f51bb236da36fa60c57ce95b5a11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>deque&lt; pair&lt; unsigned int, unsigned int &gt; &gt; *</type>
      <name>clock_stack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state.html</anchorfile>
      <anchor>ae8fa37fe71191a3986acaf7f98cc5fbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SICMStateContex</name>
    <filename>class_t_t_ethernet_model_1_1_s_i_c_m_state_contex.html</filename>
    <member kind="function">
      <type></type>
      <name>SICMStateContex</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state_contex.html</anchorfile>
      <anchor>a46121a3fc498f3dde46a2000de639e15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SICMStateContex</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state_contex.html</anchorfile>
      <anchor>a49214f02e6aa0beaf5011e6828130f1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state_contex.html</anchorfile>
      <anchor>ad9b4ba8ad9300075dae8cb615751096c</anchor>
      <arglist>(SICMState *firstState)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parseMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state_contex.html</anchorfile>
      <anchor>a6e91ff26c599f6ac36da986416dfd523</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SICMState *</type>
      <name>pState</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i_c_m_state_contex.html</anchorfile>
      <anchor>a7482a90a029eaaa2d44cf071e4e6cc84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SI_CM_INIT</name>
    <filename>class_t_t_ethernet_model_1_1_s_i___c_m___i_n_i_t.html</filename>
    <base>TTEthernetModel::SICMState</base>
    <member kind="function">
      <type></type>
      <name>SI_CM_INIT</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___i_n_i_t.html</anchorfile>
      <anchor>a064d26bbffa96943ebb895e0242ea765</anchor>
      <arglist>(SICM *sicm, FILE *f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SI_CM_PSEUDOSYNC</name>
    <filename>class_t_t_ethernet_model_1_1_s_i___c_m___p_s_e_u_d_o_s_y_n_c.html</filename>
    <base>TTEthernetModel::SICMState</base>
    <member kind="function">
      <type></type>
      <name>SI_CM_PSEUDOSYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___p_s_e_u_d_o_s_y_n_c.html</anchorfile>
      <anchor>abf76cd45ca8bdb02f730a8748cda681f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___p_s_e_u_d_o_s_y_n_c.html</anchorfile>
      <anchor>af43fed740f189053e8481455ce7a2149</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SI_CM_INTEGRATE</name>
    <filename>class_t_t_ethernet_model_1_1_s_i___c_m___i_n_t_e_g_r_a_t_e.html</filename>
    <base>TTEthernetModel::SICMState</base>
    <member kind="function">
      <type></type>
      <name>SI_CM_INTEGRATE</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>a592af897d6672f088292037af354cfda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>a62713c3b297977960d3005baee176a77</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>ab418b3e75fbc74fde211482195d6ea8f</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunctionCA</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>a33134d5d91c4b30a6ecdbbb365d6ca79</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SI_CM_STABLE</name>
    <filename>class_t_t_ethernet_model_1_1_s_i___c_m___s_t_a_b_l_e.html</filename>
    <base>TTEthernetModel::SICMState</base>
    <member kind="function">
      <type></type>
      <name>SI_CM_STABLE</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___s_t_a_b_l_e.html</anchorfile>
      <anchor>a8868fa33db4f92dd0fff671578e893d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___s_t_a_b_l_e.html</anchorfile>
      <anchor>a333adbeb750e376f0d6029c6fa0bd689</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___s_t_a_b_l_e.html</anchorfile>
      <anchor>ac8c74ff81c08ced320e29a384c2ee8ae</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunctionCA</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___s_t_a_b_l_e.html</anchorfile>
      <anchor>a0b35f81a1cc96f6371bbf0a1d69cb7e6</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SI_CM_UNSYNC</name>
    <filename>class_t_t_ethernet_model_1_1_s_i___c_m___u_n_s_y_n_c.html</filename>
    <base>TTEthernetModel::SICMState</base>
    <member kind="function">
      <type></type>
      <name>SI_CM_UNSYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___u_n_s_y_n_c.html</anchorfile>
      <anchor>a6d3b9fdd2d8e49a39c6cbe931f4a8c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___u_n_s_y_n_c.html</anchorfile>
      <anchor>a3168c5eb17ba7b347a7a12883e78ec24</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___u_n_s_y_n_c.html</anchorfile>
      <anchor>a7add9f3b6ad3044545e40f7157f6e471</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunctionCA</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___u_n_s_y_n_c.html</anchorfile>
      <anchor>a00ad78b5518ddb8df849c1719c71e454</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SI_CM_SYNC</name>
    <filename>class_t_t_ethernet_model_1_1_s_i___c_m___s_y_n_c.html</filename>
    <base>TTEthernetModel::SICMState</base>
    <member kind="function">
      <type></type>
      <name>SI_CM_SYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___s_y_n_c.html</anchorfile>
      <anchor>a17f8d0d7a7bb0a82882b69e3b0ff47ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___s_y_n_c.html</anchorfile>
      <anchor>ac9a0026452994ea6379e8f9bb5cb15f1</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___s_y_n_c.html</anchorfile>
      <anchor>a9b84076245bb71ded3827497cbdf937a</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunctionCA</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___s_y_n_c.html</anchorfile>
      <anchor>a2f125d46dccc674aa2f19b769e7ee4b6</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SI_CM_ENABLED</name>
    <filename>class_t_t_ethernet_model_1_1_s_i___c_m___e_n_a_b_l_e_d.html</filename>
    <base>TTEthernetModel::SICMState</base>
    <member kind="function">
      <type></type>
      <name>SI_CM_ENABLED</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___e_n_a_b_l_e_d.html</anchorfile>
      <anchor>a032c5b29c04e5e602bc291ab59c00292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___e_n_a_b_l_e_d.html</anchorfile>
      <anchor>a47907824f59f90f41b1cec577bdb12c5</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___e_n_a_b_l_e_d.html</anchorfile>
      <anchor>a05a449ca17fe73ab49ba719be1ab52c9</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunctionCA</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___e_n_a_b_l_e_d.html</anchorfile>
      <anchor>a4981bcae796603b3a22a3d90ca0d81ef</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SI_CM_WAIT_4_IN</name>
    <filename>class_t_t_ethernet_model_1_1_s_i___c_m___w_a_i_t__4___i_n.html</filename>
    <base>TTEthernetModel::SICMState</base>
    <member kind="function">
      <type></type>
      <name>SI_CM_WAIT_4_IN</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___w_a_i_t__4___i_n.html</anchorfile>
      <anchor>a59182fd47534dccc59db7a80e6cd12d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___w_a_i_t__4___i_n.html</anchorfile>
      <anchor>ad1763fa968e9a85bca1bbe1851c18bbe</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___w_a_i_t__4___i_n.html</anchorfile>
      <anchor>a45f342c52be44816cbd5f31fee9d270b</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compressionFunctionCA</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_i___c_m___w_a_i_t__4___i_n.html</anchorfile>
      <anchor>a85aa462a949e08ac4f6cd0df5001658f</anchor>
      <arglist>(cMessage *message, SICM *sicm)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SC</name>
    <filename>class_t_t_ethernet_model_1_1_s_c.html</filename>
    <member kind="function">
      <type></type>
      <name>SC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>a83b766479acf1007a27eb382a68355ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>a4bcdd8d714009e0080f6fccc5e49192c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>a8d63f52108b3c18133dcb5c535066d75</anchor>
      <arglist>(cMessage *m)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>ab2d7359ce0cda373a17890acbb2de615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>a408f7d83e309403aa3e734d926fae99f</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finish</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>a36b6c35e019bc0771e3bc1fdaebe67da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StateContex *</type>
      <name>sc</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>af2d5858680c5f9440e29bd01bcb41372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SC_INIT *</type>
      <name>s0</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>a9030af27c51f1fc73cf2efda9a129d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>path</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>a154e746a828cc2b2c94808339ee88a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::stringstream</type>
      <name>ss</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>a71f7ab0780fa936291ff3305aa95293b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FILE *</type>
      <name>fp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c.html</anchorfile>
      <anchor>ab024b08ac29f3b069870a43d2e9a3ef8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SCState</name>
    <filename>class_t_t_ethernet_model_1_1_s_c_state.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reaction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a683bbec73537b6ac9c77041ca1276b36</anchor>
      <arglist>(int message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a4039b415fd16ef18c59e958923dc45a4</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TW</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>ab6d306f703dd37b4aef2e7354e49f965</anchor>
      <arglist>(int duration)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>ac13511bbcc17a3cf65099dd97ef38858</anchor>
      <arglist>(uint32_t bitVector, uint32_t length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inSchedule</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a05c36ae54a63d730651945b2d3abf37c</anchor>
      <arglist>(uint64_t permanence_pit, uint64_t sc_receive_pit, uint64_t precission)</arglist>
    </member>
    <member kind="variable">
      <type>cOutVector *</type>
      <name>outVector</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a4800685145bf4b2b9576a6a23311ad3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SC *</type>
      <name>sc</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a0dc7fe98638f82df48b53c4ac010cefb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt; *</type>
      <name>knownCMs</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a0fce4780751ff2642c0b534a23c4eed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>CMs</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a5ad1fdf470bd0e14917c5f6015507f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cStringTokenizer *</type>
      <name>tokenizer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a079a0c99c3ba2221bcc86c595da22694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>fp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>aa362869f7e9eba7bdf0567b6817ffebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt; *</type>
      <name>values</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a30042230d2ae406899ea38cf6540094e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>counter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>aab89bc1821e6ccbde4640c41052ad62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dummy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a51f93925d7a4c1162760e12251f9a9db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>data</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a547f249c0676d0e7f87215b790f25e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>local_timer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>ab2b54085c49f6933a124a71cd096c8b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>flood_receive</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a95dc0e74cde078d636c439d4afffcea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>closed_window</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a1fdff07dc14e8c46f7ee9f0ad63a5cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>round_completed</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a5465365a4d7eb79e1814a104b7fe502e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>powerUp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a4af1cd956cfcbdf1ebcea5ea08cea369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>first_sync_cycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>aea1740afb140814ceee45905249d3add</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>timeOutExpierd</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a8aaa61c1e5092e84783d1df90ee87367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MembershipAcceptanceRange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a44df4e73ffc4d740ce78c9abd13dd1ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>syncDomainId</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>ae2018d0b1f0c318e30a76097db83a371</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_current_sync_priority</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>ada578577498431e6dc71c1a5bc2893b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_clock</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a350dd4f845510c27166f7f5d8e5cd7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_sync_membership</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a3582194f063380be073887ca02641367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_async_membership</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a3cc12eee784ea00669d68bd3dc36acc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_async_membership_f</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a73e6f454224fe33fbca4abb5ea8ade25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_async_membership_r</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a320d7992782e5c4469214df1807a9379</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>local_integration_cycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a2f42e0fe89917689e529234120d5e289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>clock_corr</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>af8d11dd293f176e5a13d18d7d04e6bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>stable_cycle_counter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a9742e7fbe5467a248789153eab959354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>duration</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>af3dd864fc305ef3da9c02e5a90dc538e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>max_transmission_delay</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>aaa88b4e79cc24c8e5b6aff3ed81151c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TTEScheduler *</type>
      <name>tteScheduler</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a42a1d0c2ccaeec45707ac68b23cbaf5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerTimerEvent *</type>
      <name>event</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>ae210c51318000e2a15505517232a16a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event1</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a512741eb6b94566eaa5a76ffd1b1fc87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event2</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>ae0fa04127c35c3d2c45a27ce3634f86b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event3</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a2959108407db024c9c83ac07190883cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event4</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>ae525c49c7b7256ecaa25a7d7f825a244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event5</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a022a7ba57fab51c348ade5f43ed19517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>multimap&lt; uint32_t, uint64_t &gt; *</type>
      <name>container</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>af0851f8cebcb531ed6b684b5d8c602b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; uint32_t, pair&lt; uint32_t, uint64_t &gt; &gt; *</type>
      <name>clock_stack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a61a0d27bc70837d8a767e5eca78f4c7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>multimap&lt; uint64_t, FrameEvent * &gt; *</type>
      <name>e_container</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c_state.html</anchorfile>
      <anchor>a72ae0c8c47481245c861464063076f22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::StateContex</name>
    <filename>class_t_t_ethernet_model_1_1_state_contex.html</filename>
    <member kind="function">
      <type></type>
      <name>StateContex</name>
      <anchorfile>class_t_t_ethernet_model_1_1_state_contex.html</anchorfile>
      <anchor>a1a5176ab7ff37608b1185f9e425b9889</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StateContex</name>
      <anchorfile>class_t_t_ethernet_model_1_1_state_contex.html</anchorfile>
      <anchor>aba16349771aee93f8b203706c740b93b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState</name>
      <anchorfile>class_t_t_ethernet_model_1_1_state_contex.html</anchorfile>
      <anchor>a5cc68e4bb8ceffd01761d7b316aa49b4</anchor>
      <arglist>(SCState *firstState)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parseMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_state_contex.html</anchorfile>
      <anchor>a15c60a44653ce431a69775674d24f463</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SCState *</type>
      <name>pState</name>
      <anchorfile>class_t_t_ethernet_model_1_1_state_contex.html</anchorfile>
      <anchor>a94867164f92c234be4c574a6f102ae50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SC_INTEGRATE</name>
    <filename>class_t_t_ethernet_model_1_1_s_c___i_n_t_e_g_r_a_t_e.html</filename>
    <base>TTEthernetModel::SCState</base>
    <member kind="function">
      <type></type>
      <name>SC_INTEGRATE</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>a147b559dcee577dc2d1baa723a7682a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>a02cd21295dba4c944c8b674ab15fbe35</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SC_INIT</name>
    <filename>class_t_t_ethernet_model_1_1_s_c___i_n_i_t.html</filename>
    <base>TTEthernetModel::SCState</base>
    <member kind="function">
      <type></type>
      <name>SC_INIT</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___i_n_i_t.html</anchorfile>
      <anchor>a09fdb1589267c1a2d9c0a0932007d7ea</anchor>
      <arglist>(SC *sc, FILE *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___i_n_i_t.html</anchorfile>
      <anchor>a11f5c95d2d9198c0407e69dada5e7c91</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SC_PSEUDOSYNC</name>
    <filename>class_t_t_ethernet_model_1_1_s_c___p_s_e_u_d_o_s_y_n_c.html</filename>
    <base>TTEthernetModel::SCState</base>
    <member kind="function">
      <type></type>
      <name>SC_PSEUDOSYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___p_s_e_u_d_o_s_y_n_c.html</anchorfile>
      <anchor>a3cfbd6bff023236ce3c258b2dcf576a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___p_s_e_u_d_o_s_y_n_c.html</anchorfile>
      <anchor>a157d1de0c002f558471cc8679c8c5ddb</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SC_STABLE</name>
    <filename>class_t_t_ethernet_model_1_1_s_c___s_t_a_b_l_e.html</filename>
    <base>TTEthernetModel::SCState</base>
    <member kind="function">
      <type></type>
      <name>SC_STABLE</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___s_t_a_b_l_e.html</anchorfile>
      <anchor>a8cc2522dc2dd6f48ffbb8a226c2672e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___s_t_a_b_l_e.html</anchorfile>
      <anchor>a692264b281dbc1ac7d9c251fd216fb40</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SC_SYNC</name>
    <filename>class_t_t_ethernet_model_1_1_s_c___s_y_n_c.html</filename>
    <base>TTEthernetModel::SCState</base>
    <member kind="function">
      <type></type>
      <name>SC_SYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___s_y_n_c.html</anchorfile>
      <anchor>ab20fcf39cd5c36390c1e047767017bd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_c___s_y_n_c.html</anchorfile>
      <anchor>a8f278b9cd0b0d4cf2efb1acc4c886257</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::FrameEvent</name>
    <filename>class_t_t_ethernet_model_1_1_frame_event.html</filename>
    <base>TTEthernetModel::SchedulerTimerEvent</base>
    <member kind="function">
      <type></type>
      <name>FrameEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a9eefedfcda8c049c188a727a85df6f04</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FrameEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a80b0c2dcfc23982a8b0b928daf3b72da</anchor>
      <arglist>(const FrameEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FrameEvent</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a6818e41c6d19507bb024946ea37c9c79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FrameEvent &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>ab3254ca3bff51879a6718477082e91a2</anchor>
      <arglist>(const FrameEvent &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameEvent *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>aadc9d7c13cc4c4495fa7182d7681031f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>ac34bebd2979bd1b0a709637b428754cd</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>ab5d6aa53e45f79d453236bc9682d6372</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned long</type>
      <name>getIntegrationCycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a25d228be81c3ac1304e3fb56dbba6e5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIntegrationCycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a857650058ff2194b2494f4b5ffa8bbde</anchor>
      <arglist>(unsigned long integrationCycle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getMember</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>abd6bab20ea59f27ef32646e5bfe09e6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMember</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a502580d543d3972a343012d1a7c75177</anchor>
      <arglist>(unsigned int member)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned char</type>
      <name>getPcfType</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a5e48f2d71035be6757ea2b12a9d6936f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPcfType</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>ac0edf1e6ac8468ded167d07cb236bc42</anchor>
      <arglist>(unsigned char pcfType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getReceivedPort</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a0d4a7e26c49767796374367a67d6b6fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setReceivedPort</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>ae18ee532871dac9fcf3082ea2873b114</anchor>
      <arglist>(unsigned int receivedPort)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a783434b94387d3a7ff395303d05701fe</anchor>
      <arglist>(const FrameEvent &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned long</type>
      <name>integrationCycle_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>af30b58fabd6dcebd60358ca18f45b7ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>member_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a252a5b1d0de68782cb8c9d486708c718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned char</type>
      <name>pcfType_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>af317bdfb218935d5082b6be927fc914c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>receivedPort_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>a7556aa580be0a0d7f64e5ede221d32ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_frame_event.html</anchorfile>
      <anchor>aea6a346499fc840e16b6bbb69e6509b9</anchor>
      <arglist>(const FrameEvent &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::OWCounter</name>
    <filename>class_t_t_ethernet_model_1_1_o_w_counter.html</filename>
    <base>TTEthernetModel::SchedulerTimerEvent</base>
    <member kind="function">
      <type></type>
      <name>OWCounter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>aa25599020072500d1addf07ab50dc567</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OWCounter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>ae4e550b9a2804540982acad467f1442c</anchor>
      <arglist>(const OWCounter &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OWCounter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>ad913545bf689a4a2c468a43b8c27048c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>OWCounter &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>ab1f1586129b218095f38b28df02e7d63</anchor>
      <arglist>(const OWCounter &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OWCounter *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a3f1a3808de591af87b0d691cff57e016</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>aeb8f3355ea2f9fd14af2120f2b239cc2</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a812bdad2b6215c8a51f07b412689461e</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getLastNumberOfFrames</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a3404aaf651d7fba976c06b847e68afec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLastNumberOfFrames</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a7722e594215285bb480bdbc41c0e46df</anchor>
      <arglist>(unsigned int lastNumberOfFrames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getNumberOfObservationWindow</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>ab0703eb1402fcd5a1118624a620df697</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNumberOfObservationWindow</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a666dd701bcb89f8431beee0ef474d769</anchor>
      <arglist>(unsigned int numberOfObservationWindow)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned long</type>
      <name>getIntegrationCycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>acc2742c6362dfa4552b8733c9584fa3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIntegrationCycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a3d1e985573f9c8f0c5a4bb86c4fc096d</anchor>
      <arglist>(unsigned long integrationCycle)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a6b9743eaf294f1690f6dea3890a0e313</anchor>
      <arglist>(const OWCounter &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>lastNumberOfFrames_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a8c03c95f4d7b09e0c7afa9127aba02b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>numberOfObservationWindow_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a861251915bccb556f1179373aa348c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned long</type>
      <name>integrationCycle_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>af504e636ad2fe1fd89e15d61d25e4d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_o_w_counter.html</anchorfile>
      <anchor>a15a42b965327f8204d0cbb2376975a0e</anchor>
      <arglist>(const OWCounter &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::CompressedPIT</name>
    <filename>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</filename>
    <base>TTEthernetModel::SchedulerTimerEvent</base>
    <member kind="function">
      <type></type>
      <name>CompressedPIT</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a3583d7a354e25a2ed364c4a697b3d19c</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompressedPIT</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>ab912937360e629213e907a77d449424e</anchor>
      <arglist>(const CompressedPIT &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompressedPIT</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a308e7b4bb489f4e10390d35e7703280c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompressedPIT &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a7cfa4194694117c1477575ba0aa336c3</anchor>
      <arglist>(const CompressedPIT &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CompressedPIT *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>abefb670e3358780f4393463d669efddd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a5d6bd28ed39ebd978ce1ddf9ca5cf7e3</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a78a7f4909bb377bbcdfff40ecdee7630</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getMembership_new</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a02fd263828f43351d3bd52c309ab5f13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMembership_new</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a78bea32301c0a6a185309bc2b882e926</anchor>
      <arglist>(unsigned int membership_new)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned long</type>
      <name>getIntegrationCycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a9f0b14a8d93b595fb1462b6ea36be7c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIntegrationCycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a79b1e1d40065cb51a2ae4b19fea51068</anchor>
      <arglist>(unsigned long integrationCycle)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>af74e51d44cbb23851de2b4e775c91941</anchor>
      <arglist>(const CompressedPIT &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>membership_new_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a35c8ee343d0f03f10ec232974d2c745d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned long</type>
      <name>integrationCycle_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a30f781d9468db19e83ea86b7c9386701</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_compressed_p_i_t.html</anchorfile>
      <anchor>a4e7e673a962ce6a39a8c285c68baaa61</anchor>
      <arglist>(const CompressedPIT &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::DispatchDelay</name>
    <filename>class_t_t_ethernet_model_1_1_dispatch_delay.html</filename>
    <base>TTEthernetModel::SchedulerTimerEvent</base>
    <member kind="function">
      <type></type>
      <name>DispatchDelay</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a996c5eb7577598fdff17d038d4adff72</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DispatchDelay</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a33eaf5f433dbc9231280ee97bc7c8605</anchor>
      <arglist>(const DispatchDelay &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DispatchDelay</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a26cc8035a2d7610da64f95b98a2dbf45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DispatchDelay &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>ab54ab4888929372fe1288651b6e0f01f</anchor>
      <arglist>(const DispatchDelay &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DispatchDelay *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>ad836e312b58b51bb317a3451d32377fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a9fc72298f450e5b6fc7486627b636774</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a2af325638948846c37855f3719fe5dc5</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>getFrameID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a06d253eb81096b004b4c97a43748fc0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFrameID</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>abc0a67f3d2172ad92e238c3aefe26585</anchor>
      <arglist>(long frameID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>getMembership_new</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a193f5af2e6d28dd01a1724e6ca705b1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMembership_new</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a2d84c268e2907634568ef15fd446aee6</anchor>
      <arglist>(unsigned int membership_new)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a8b43955488bd3bfada72550ed7187b46</anchor>
      <arglist>(const DispatchDelay &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>frameID_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a5b16547c7c17fcfaa8f3dbbdc6923596</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>membership_new_var</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>add8cde2dce150ed807e55d3e956ca187</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dispatch_delay.html</anchorfile>
      <anchor>a9f303ff1dc41778f6969377d0f8b791f</anchor>
      <arglist>(const DispatchDelay &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM</name>
    <filename>class_t_t_ethernet_model_1_1_s_m.html</filename>
    <member kind="function">
      <type></type>
      <name>SM</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>a86ea7abe688f19169950e9e9e2fe59b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SM</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>a419fed63fd57fc0dbed81550be7fc9ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>a7dd9a93dd6a9cde89c48f208ada31b3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>aefb4a0a75592d2a08ce357910468eaeb</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>a498c8626cdb81e9dad8925b5f6489966</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finish</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>a25b5352b7352e504009e039c495003c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SMStateContex *</type>
      <name>sm</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>ad7efd5c1d43dc2496c68496f220fec80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SM_INIT *</type>
      <name>s0</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>aa1a11d297395a57769ca887a4718ad94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FILE *</type>
      <name>fp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>ac5b32843d40070b245cb543f1c17a8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>str</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>a3ebb7dfed45e6b443d60bc878427ac89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::stringstream</type>
      <name>ss</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m.html</anchorfile>
      <anchor>a02308d6cf629c08bed639054de90ea3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SMState</name>
    <filename>class_t_t_ethernet_model_1_1_s_m_state.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a8d853687d3f2b9e27168bf30c0e1396e</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValue</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a122b581427980d11a5205c6969a93efb</anchor>
      <arglist>(uint32_t bitVector, uint32_t length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inSchedule</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>ac6064207d1cacb649c2d3f418510dca6</anchor>
      <arglist>(uint64_t permanence_pit, uint64_t sc_receive_pit, uint64_t acceptance_window)</arglist>
    </member>
    <member kind="variable">
      <type>cOutVector *</type>
      <name>outVector</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>ad9cc85756ac3e7fd1e365e86bc6fd448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SM *</type>
      <name>sm</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a6784f39e31222902378c42922ea3ec70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>fp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>ae96fe043422d3523db8961df0401f513</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt; *</type>
      <name>values</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>ac9a9a01c0644a50fc46b0ffe397bf8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; int &gt; *</type>
      <name>knownCMs</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>aa22a5760a5c84002ad319fe6448cdd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>CMs</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>ac0d8013a806840964b789a3ca504add1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cStringTokenizer *</type>
      <name>tokenizer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>af43084b70e626e9a13ab682dd6cb5a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>temp</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a6de6a9b61bd36eb3421278980ed4a8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>counter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a2f9b38505c3946d90af7e4695c5e7aea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dummy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a533fb10ce9ee2e8ac5187e3b5ac7f008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>data</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a4e77ee93ed08628078b3782b6672b6f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>local_timer</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>aa3d7ec305c2bb5dbc1c1bdee596b5918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>flood_receive</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a7d7855bf6363c98319dbdc9f49faf142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>closed_window</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a9a3e8291331eca123479ffe443f68e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>round_completed</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>af01d277be0675652ee6af21859e918f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>ctid</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>ad5d24771f4b7ac61c7a4b27f689f7b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>local_clock</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a0532d04f2e9445cc71a984c6f56635f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_sync_membership</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>ab9314943c25986586f5039c1044d8226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_async_membership</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a8665efe73f00d06071e08b8ffaeff892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_async_membership_f</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a1d5cee2f40eb01f5779c45780e844d0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>local_async_membership_r</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>add72f9abeb010a79de47487c73b4b423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>local_integration_cycle</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a5944afe2bcc5270f8444ac428b88db47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>clock_corr</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a3f69ca517a9aca535a1507798c31d974</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>stable_cycle_counter</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a2784659c68df75031d656a640571c308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>duration</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a544abf6fdbb03d7a3686eb88b6e7ebbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ownBit</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>ada2ddf0f0623fa2678aaa6d6d228c273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>max_transmission_delay</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a624db31004456d988968be4f1707316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>syncDomain</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a4018e3ce6edb846316e5f4bcab73ceea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>syncPriority</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a0310153fce0a9db9ce38c7ad6cc107e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TTEScheduler *</type>
      <name>tteScheduler</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a8199c68e0e2ca8f1ff07f3604fae619d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerTimerEvent *</type>
      <name>event</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>aec0f605932532cf757368e63c32a0343</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event1</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a3d734bf7d943e34931b4427394d077cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event2</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a6e4c64cb57c82d863411bfd4549d89ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event3</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a77c3294c47ed22a57509be47fd000b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event4</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>aff8d6bd8188f416b67216937806c9a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SchedulerActionTimeEvent *</type>
      <name>event5</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>a9fff3d27a98061227035da46705f79c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MembershipAcceptanceRange</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>ae8d1fea60c217f394465fe9a62b99258</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; uint32_t, pair&lt; uint32_t, uint64_t &gt; &gt; *</type>
      <name>clock_stack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>adf98525149094d793db68ac977e4fac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>multimap&lt; uint64_t, FrameEvent * &gt; *</type>
      <name>e_container</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state.html</anchorfile>
      <anchor>acddbde2498689b1c59886a7162b66ccc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SMStateContex</name>
    <filename>class_t_t_ethernet_model_1_1_s_m_state_contex.html</filename>
    <member kind="function">
      <type></type>
      <name>SMStateContex</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state_contex.html</anchorfile>
      <anchor>a942b5b0497b93dd6f87b8fe2ba80b0bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SMStateContex</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state_contex.html</anchorfile>
      <anchor>aff0f60548771141bbe867454cf44f5cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state_contex.html</anchorfile>
      <anchor>a341ce1ec0878171e39d57acffa5e20da</anchor>
      <arglist>(SMState *firstState)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parseMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state_contex.html</anchorfile>
      <anchor>a2b5bc9a16318ea2a72b825dda52e423c</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SMState *</type>
      <name>pState</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m_state_contex.html</anchorfile>
      <anchor>a5fd469611e2d6a4e2f7f7ff7a5cb0c8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_INIT</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___i_n_i_t.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_INIT</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___i_n_i_t.html</anchorfile>
      <anchor>ab7ad8fa301029bf630123db20a20968a</anchor>
      <arglist>(SM *sm, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reaction</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___i_n_i_t.html</anchorfile>
      <anchor>a4b4a1482a08c72aea50b92f392a5d517</anchor>
      <arglist>(int message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_PSEUDOSYNC</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___p_s_e_u_d_o_s_y_n_c.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_PSEUDOSYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___p_s_e_u_d_o_s_y_n_c.html</anchorfile>
      <anchor>af7dc8913e63c664c91e85482f27d66b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___p_s_e_u_d_o_s_y_n_c.html</anchorfile>
      <anchor>abdd1866f55a05cc1b6541ea4a86981b0</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_INTEGRATE</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___i_n_t_e_g_r_a_t_e.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_INTEGRATE</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>a6398c5e3c97dc4ee7f8c24160c9ae292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___i_n_t_e_g_r_a_t_e.html</anchorfile>
      <anchor>a01fd1f551a2ee74756726590a83b738e</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_STABLE</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___s_t_a_b_l_e.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_STABLE</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___s_t_a_b_l_e.html</anchorfile>
      <anchor>a59bcf8c547baebd6a29b669d19fef120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___s_t_a_b_l_e.html</anchorfile>
      <anchor>a242b3832a1cefdfd8d4652302a895d55</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_UNSYNC</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___u_n_s_y_n_c.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_UNSYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___u_n_s_y_n_c.html</anchorfile>
      <anchor>a81665360f593c482bccf7846a0fede58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___u_n_s_y_n_c.html</anchorfile>
      <anchor>afa21e4c190c0b6c40c14d14012fc93fb</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_SYNC</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___s_y_n_c.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_SYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___s_y_n_c.html</anchorfile>
      <anchor>aac4448645916fd4bf08ab1443df8755c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___s_y_n_c.html</anchorfile>
      <anchor>acf0699570d2579e351cad628f3a4e68b</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_FLOOD</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___f_l_o_o_d.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_FLOOD</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___f_l_o_o_d.html</anchorfile>
      <anchor>ab13d26e079bb47a01a361d88bd3188e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___f_l_o_o_d.html</anchorfile>
      <anchor>a961760685353ba49ad10a10e4c6e7f5f</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_WAIT_4_CYCLE_START_CS</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t___c_s.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_WAIT_4_CYCLE_START_CS</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t___c_s.html</anchorfile>
      <anchor>ac17bd3f232175c99432cc3160f8a61d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t___c_s.html</anchorfile>
      <anchor>ac482be44e6b2231a53a13b97cc9b0b60</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_TENTATIVE_SYNC</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___t_e_n_t_a_t_i_v_e___s_y_n_c.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_TENTATIVE_SYNC</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___t_e_n_t_a_t_i_v_e___s_y_n_c.html</anchorfile>
      <anchor>a928faae69391aba8931d40739e629fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___t_e_n_t_a_t_i_v_e___s_y_n_c.html</anchorfile>
      <anchor>adac9cca3c562e02001ef678e735711f8</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SM_WAIT_4_CYCLE_START</name>
    <filename>class_t_t_ethernet_model_1_1_s_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t.html</filename>
    <base>TTEthernetModel::SMState</base>
    <member kind="function">
      <type></type>
      <name>SM_WAIT_4_CYCLE_START</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t.html</anchorfile>
      <anchor>abc8e3ee0cdc1f8db3f12b9fea32bf416</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_s_m___w_a_i_t__4___c_y_c_l_e___s_t_a_r_t.html</anchorfile>
      <anchor>ae89348888c4568ce4070d54d13f42023</anchor>
      <arglist>(cMessage *message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::DummySync</name>
    <filename>class_t_t_ethernet_model_1_1_dummy_sync.html</filename>
    <base>TTEthernetModel::SyncBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dummy_sync.html</anchorfile>
      <anchor>a9d6c204caa5950db42fa36aba6e40b87</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dummy_sync.html</anchorfile>
      <anchor>aee3b5f87f3f7ff9eb608bd54d3b4ced5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_t_t_ethernet_model_1_1_dummy_sync.html</anchorfile>
      <anchor>a56963aa89143a2a483e74b8e48426804</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notify</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_base.html</anchorfile>
      <anchor>aaeb436921e2b20498b7aba89f74902d7</anchor>
      <arglist>(SyncNotificationKind kind)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SyncBase</name>
    <filename>class_t_t_ethernet_model_1_1_sync_base.html</filename>
  </compound>
  <compound kind="class">
    <name>TTEthernetModel::SyncNotification</name>
    <filename>class_t_t_ethernet_model_1_1_sync_notification.html</filename>
    <member kind="function">
      <type></type>
      <name>SyncNotification</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_notification.html</anchorfile>
      <anchor>a6c5b7e9e8f7d33310294781c6d0b5e84</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SyncNotification</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_notification.html</anchorfile>
      <anchor>a8257c969ea8af1bf17596dedb59c07d4</anchor>
      <arglist>(const SyncNotification &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SyncNotification</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_notification.html</anchorfile>
      <anchor>a86f97196b52b938f1afc0021e3f9edc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SyncNotification &amp;</type>
      <name>operator=</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_notification.html</anchorfile>
      <anchor>ae2b2b149fadd242bc194dbabb89f0b8c</anchor>
      <arglist>(const SyncNotification &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SyncNotification *</type>
      <name>dup</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_notification.html</anchorfile>
      <anchor>a22accd26080a110c1091cc1eb0474890</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_notification.html</anchorfile>
      <anchor>aa0e3fac98bb2de7606f08ba6924a7062</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_notification.html</anchorfile>
      <anchor>abdfa5762c207a5693bf52189343cd47a</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_notification.html</anchorfile>
      <anchor>a1e552ad44506a204963f13190d922d95</anchor>
      <arglist>(const SyncNotification &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_t_t_ethernet_model_1_1_sync_notification.html</anchorfile>
      <anchor>aadc57d1d1db2b192fe504cc373233bff</anchor>
      <arglist>(const SyncNotification &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>api</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/api/</path>
    <filename>dir_343e750893ed8277907becb6babd1330.html</filename>
    <file>TTEAPIApplicationBase.cc</file>
    <file>TTEAPIApplicationBase.h</file>
    <file>TTEAPITestApplication.cc</file>
    <file>TTEAPITestApplication.h</file>
  </compound>
  <compound kind="dir">
    <name>api</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/api/</path>
    <filename>dir_5839ea53e0107f38916ce6e8482f5a94.html</filename>
    <file>APIPayload_m.h</file>
    <file>Callback.cc</file>
    <file>Callback.h</file>
    <file>Task.cc</file>
    <file>Task.h</file>
  </compound>
  <compound kind="dir">
    <name>applications</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/</path>
    <filename>dir_d3c648cba0baa191ba5c49bd1b217feb.html</filename>
    <dir>api</dir>
    <dir>base</dir>
    <dir>trafficsource</dir>
  </compound>
  <compound kind="dir">
    <name>AS6802</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/</path>
    <filename>dir_a3d746f5aaea8714bbcad22c8a403a15.html</filename>
    <dir>HICompressionMaster</dir>
    <dir>SICompressionMaster</dir>
    <dir>SynchronisationClient</dir>
    <dir>SynchronisationMaster</dir>
    <file>SynchronisationEvents_m.h</file>
  </compound>
  <compound kind="dir">
    <name>base</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/base/</path>
    <filename>dir_dd9cf6547b3daea15d21a54802e373e4.html</filename>
    <file>TTE4INETDefs.h</file>
  </compound>
  <compound kind="dir">
    <name>base</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/</path>
    <filename>dir_e1f4d9daf948ca3519fe69fdc6a66cf0.html</filename>
    <dir>examples</dir>
    <file>TTEApplicationBase.cc</file>
    <file>TTEApplicationBase.h</file>
  </compound>
  <compound kind="dir">
    <name>base</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/base/</path>
    <filename>dir_281c386ea8ca02cdd26bd30f4abb9fd9.html</filename>
    <file>DummySync.cc</file>
    <file>DummySync.h</file>
    <file>SyncBase.cc</file>
    <file>SyncBase.h</file>
    <file>SyncNotification_m.h</file>
  </compound>
  <compound kind="dir">
    <name>base</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/configuration/base/</path>
    <filename>dir_f0b6ddea895adc939cb93cf999ed1a11.html</filename>
    <file>BaseConfigurationManager.cc</file>
    <file>BaseConfigurationManager.h</file>
  </compound>
  <compound kind="dir">
    <name>buffer</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/buffer/</path>
    <filename>dir_af1f04a6814f065d11c26c5e97286bcc.html</filename>
    <file>BGBuffer.cc</file>
    <file>BGBuffer.h</file>
    <file>BGQueueBuffer.cc</file>
    <file>BGQueueBuffer.h</file>
    <file>Buffer.cc</file>
    <file>Buffer.h</file>
    <file>CTBuffer.cc</file>
    <file>CTBuffer.h</file>
    <file>DoubleBuffer.cc</file>
    <file>DoubleBuffer.h</file>
    <file>QueueBuffer.cc</file>
    <file>QueueBuffer.h</file>
    <file>RCBuffer.cc</file>
    <file>RCBuffer.h</file>
    <file>RCDoubleBuffer.cc</file>
    <file>RCDoubleBuffer.h</file>
    <file>RCQueueBuffer.cc</file>
    <file>RCQueueBuffer.h</file>
    <file>TTBuffer.cc</file>
    <file>TTBuffer.h</file>
    <file>TTBufferEmpty_m.h</file>
    <file>TTDoubleBuffer.cc</file>
    <file>TTDoubleBuffer.h</file>
    <file>TTQueueBuffer.cc</file>
    <file>TTQueueBuffer.h</file>
  </compound>
  <compound kind="dir">
    <name>configuration</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/configuration/</path>
    <filename>dir_167948e7818992f0a0c2d0fef2c62405.html</filename>
    <dir>base</dir>
  </compound>
  <compound kind="dir">
    <name>ctc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/ctc/</path>
    <filename>dir_70493b844ed7499cbfccf4c5cccc6d42.html</filename>
    <file>Incoming.cc</file>
    <file>Incoming.h</file>
    <file>PCFIncoming.cc</file>
    <file>PCFIncoming.h</file>
    <file>RCIncoming.cc</file>
    <file>RCIncoming.h</file>
    <file>TTIncoming.cc</file>
    <file>TTIncoming.h</file>
  </compound>
  <compound kind="dir">
    <name>ethernet</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/ethernet/</path>
    <filename>dir_adb34554275f836391abf50c1254372f.html</filename>
    <file>CTFrame.cc</file>
    <file>CTFrame.h</file>
    <file>CTFrame_m.h</file>
    <file>PCFrame_m.h</file>
    <file>RCFrame_m.h</file>
    <file>TTFrame_m.h</file>
  </compound>
  <compound kind="dir">
    <name>examples</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/examples/</path>
    <filename>dir_e64abe416cfc552608dcd9832945385c.html</filename>
    <dir>rt_tictoc</dir>
  </compound>
  <compound kind="dir">
    <name>HICompressionMaster</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/HICompressionMaster/</path>
    <filename>dir_eae0ebdfb493e1664e86f689e870be02.html</filename>
    <file>HICM.cc</file>
    <file>HICM.h</file>
    <file>HICMState.h</file>
    <file>HICMStateContex.h</file>
    <file>HICMStates.cc</file>
    <file>HICMStates.h</file>
  </compound>
  <compound kind="dir">
    <name>linklayer</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/linklayer/</path>
    <filename>dir_bfe1ad422ae4884c3ea29f31d3cde981.html</filename>
    <dir>ethernet</dir>
    <file>BGTrafficHandle.cc</file>
    <file>BGTrafficHandle.h</file>
    <file>TTEInput.cc</file>
    <file>TTEInput.h</file>
    <file>TTEOutput.cc</file>
    <file>TTEOutput.h</file>
  </compound>
  <compound kind="dir">
    <name>rt_tictoc</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/base/examples/rt_tictoc/</path>
    <filename>dir_3bbd4bba1e09542a4c450a5725b77f15.html</filename>
    <file>TicApp.cc</file>
    <file>TicApp.h</file>
    <file>TicToc_m.h</file>
    <file>TocApp.cc</file>
    <file>TocApp.h</file>
  </compound>
  <compound kind="dir">
    <name>scheduler</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/scheduler/</path>
    <filename>dir_ed7284d30813667d680d3c571561feb5.html</filename>
    <file>RecordPlaybackScheduler.cc</file>
    <file>RecordPlaybackScheduler.h</file>
    <file>SchedulerEvent.cc</file>
    <file>SchedulerEvent.h</file>
    <file>SchedulerMessage_m.h</file>
    <file>SchedulerMessageEvents_m.h</file>
    <file>TTEScheduler.cc</file>
    <file>TTEScheduler.h</file>
  </compound>
  <compound kind="dir">
    <name>SICompressionMaster</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SICompressionMaster/</path>
    <filename>dir_bc8967f65f3bc34b3247f40b6affe723.html</filename>
    <file>SICM.cc</file>
    <file>SICM.h</file>
    <file>SICMState.h</file>
    <file>SICMStateContex.h</file>
    <file>SICMStates.cc</file>
    <file>SICMStates.h</file>
  </compound>
  <compound kind="dir">
    <name>src</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/</path>
    <filename>dir_b83218604b4f51c9d011668b0c42e102.html</filename>
    <dir>api</dir>
    <dir>applications</dir>
    <dir>base</dir>
    <dir>buffer</dir>
    <dir>configuration</dir>
    <dir>ctc</dir>
    <dir>linklayer</dir>
    <dir>scheduler</dir>
    <dir>synchronisation</dir>
    <dir>utilities</dir>
    <file>index.h</file>
  </compound>
  <compound kind="dir">
    <name>synchronisation</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/</path>
    <filename>dir_e91b5cc3279f6efa832a22015b9fa21e.html</filename>
    <dir>AS6802</dir>
    <dir>base</dir>
  </compound>
  <compound kind="dir">
    <name>SynchronisationClient</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationClient/</path>
    <filename>dir_7a383a9fb5a92723a1dd9ead459865e2.html</filename>
    <file>SC.cc</file>
    <file>SC.h</file>
    <file>SCState.h</file>
    <file>SCStateContex.h</file>
    <file>SCStates.cc</file>
    <file>SCStates.h</file>
  </compound>
  <compound kind="dir">
    <name>SynchronisationMaster</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/synchronisation/AS6802/SynchronisationMaster/</path>
    <filename>dir_60d23d85662ea75b9badaabe2765865c.html</filename>
    <file>SM.cc</file>
    <file>SM.h</file>
    <file>SMState.h</file>
    <file>SMStateContex.h</file>
    <file>SMStates.cc</file>
    <file>SMStates.h</file>
  </compound>
  <compound kind="dir">
    <name>trafficsource</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/applications/trafficsource/</path>
    <filename>dir_3ad50fdc357625b44e6f8972c2d997f3.html</filename>
    <file>RCTrafficSourceApp.cc</file>
    <file>RCTrafficSourceApp.h</file>
    <file>TrafficSourceAppBase.cc</file>
    <file>TrafficSourceAppBase.h</file>
    <file>TTTrafficSourceApp.cc</file>
    <file>TTTrafficSourceApp.h</file>
  </compound>
  <compound kind="dir">
    <name>utilities</name>
    <path>/home/tillsteinbach/git/TTEthernetModel/src/utilities/</path>
    <filename>dir_8d204083f9d300dda59a72701f54b154.html</filename>
    <file>HelperFunctions.cc</file>
    <file>HelperFunctions.h</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Sourcecode Documentation - TTEthernet Model for INET Framework (TTE4INET)</title>
    <filename>index</filename>
  </compound>
</tagfile>
