[General]
network = small_network

**.node2.phy[*].mac.address = "0A-00-00-00-00-02"

# Defines the running real-time application of node2 that generates RC traffic.
**.node2.numApps = 3
**.node2.app[0].typename = "RCTrafficSourceApp"
**.node2.app[0].displayName = "vl_101"
**.node2.app[0].interval = 1ms
**.node2.app[0].payload = 46Byte
**.node2.app[0].ct_id = 101
# Connect the traffic generator output to the corresponding buffer.
**.node2.app[0].buffers = "vl_101"

**.node2.app[1].typename = "CTTrafficSinkApp"
**.node2.app[1].displayName = "vl_100"

**.node2.app[2].typename = "CTTrafficSinkApp"
**.node2.app[2].displayName = "vl_102"

# Connect the conformance checker for incoming TT traffic of vl_100 with phy[0]
# such that the corresponding TT messages will be put into the buffer at ppt.
**.node2.phy[0].inControl.ct_incomings = "vl_100_ctc, vl_102_ctc"

**.node2.vl_100.destination_gates = "app[1].TTin"
**.node2.vl_100_ctc.receive_window_start = sec_to_tick(1020us)
**.node2.vl_100_ctc.receive_window_end = sec_to_tick(1040us)
**.node2.vl_100_ctc.permanence_pit = sec_to_tick(1040us)
**.node2.vl_100.ct_id = 100
**.node2.vl_100.sendWindowStart = sec_to_tick(1080us)

# Connect the output vl_101 to the physical port phy[0].
**.node2.vl_101.destination_gates = "phy[0].RCin"
**.node2.vl_101.bag = sec_to_tick(900us)
**.node2.vl_101.priority = 0
**.node2.vl_101.ct_id = 101

**.node2.vl_102.destination_gates = "app[2].TTin"
**.node2.vl_102_ctc.receive_window_start = sec_to_tick(1045us)
**.node2.vl_102_ctc.receive_window_end = sec_to_tick(1065us)
**.node2.vl_102_ctc.permanence_pit = sec_to_tick(1065us)
**.node2.vl_102_ctc.period = "period[1]"
**.node2.vl_102.ct_id = 102
**.node2.vl_102.sendWindowStart = sec_to_tick(1105us)
**.node2.vl_102.period = "period[1]"

[Config With_Crosstraffic]
**.node2.numApps = 5
# Defines the running background traffic (BE)
**.node2.app[3].typename = "BGTrafficSinkApp"
**.node2.app[3].srcAddress = "0A-00-00-00-00-01"

**.node2.app[4].typename = "BGTrafficSourceApp"
**.node2.app[4].destAddress = "0A-00-00-00-00-03"
**.node2.app[4].payload = intWithUnit(uniform(1500Byte, 1500Byte))
**.node2.app[4].sendInterval = uniform(200us,500us)

**.node2.bgIn.destination_gates = "app[3].in"

[Config With_Crossbursts]
extends = With_Crosstraffic
**.node2.app[4].typename = "BGBurstTrafficSourceApp"
**.node2.app[4].payload = 1500Byte
**.node2.app[4].burstSize = 500KiB
**.node2.app[4].sendInterval = uniform(200ms,500ms)