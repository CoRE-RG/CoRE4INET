[General]
network = small_network

**.node2.phy[*].mac.address = "0A-00-00-00-00-02"

# Defines the running real-time application of node2 that generates RC traffic.
**.node2.numApps = 3
**.node2.tteApp[0].typename = "RCTrafficSourceApp"
**.node2.tteApp[0].interval = 1ms
**.node2.tteApp[0].payload = 46Byte
**.node2.tteApp[0].ct_id = 101
# Connect the traffic generator output to the corresponding buffer.
**.node2.tteApp[0].buffers = "vl_101"

**.node2.tteApp[1].typename = "TrafficSinkApp"

**.node2.tteApp[2].typename = "TrafficSinkApp"

# Connect the conformance checker for incoming TT traffic of vl_100 with phy[0]
# such that the corresponding TT messages will be put into the buffer at ppt.
**.node2.phy[0].inControl.incomings = "vl_100_ctc, vl_102_ctc"

**.node2.vl_100.destination_gates = "tteApp[1].TTin"
**.node2.vl_100_ctc.receive_window_start = sec_to_tick(1020us)
**.node2.vl_100_ctc.receive_window_end = sec_to_tick(1040us)
**.node2.vl_100_ctc.permanence_pit = sec_to_tick(1040us)
**.node2.vl_100.ct_id = 100
**.node2.vl_100.sendWindowStart = sec_to_tick(1080us)

# Connect the output vl_101 to the physical port phy[0].
**.node2.vl_101.destination_gates = "phy[0].RCin"
**.node2.vl_101.bag = sec_to_tick(950us)
**.node2.vl_101.priority = 0
**.node2.vl_101.ct_id = 101

**.node2.vl_102.destination_gates = "tteApp[2].TTin"
**.node2.vl_102_ctc.receive_window_start = sec_to_tick(1045us)
**.node2.vl_102_ctc.receive_window_end = sec_to_tick(1065us)
**.node2.vl_102_ctc.permanence_pit = sec_to_tick(1065us)
**.node2.vl_102.ct_id = 102
**.node2.vl_102.sendWindowStart = sec_to_tick(1105us)

[Config With_Crosstraffic]
# Defines the running background traffic (BE)
**.node2.cli.destAddress = "0A-00-00-00-00-03"
**.node2.cli.reqLength = 1497Byte # 1500Byte - 3Byte Header (Fullsize Frame)
**.node2.cli.respLength = 1497Byte # 1500Byte - 3Byte Header (Fullsize Frame)
**.node2.cli.sendInterval = uniform(200us,500us)
**.node2.cli.startTime = 0s