[General]
network = small_network

**.unit2.phy[*].mac.address = "0A-00-00-00-00-02"

# Defines the running real-time application of unit2 that generates RC traffic.
**.unit2.numApps = 1
**.unit2.tteApp[0].typename = "RCTrafficSourceApp"
**.unit2.tteApp[0].interval = 1ms
**.unit2.tteApp[0].payload = 46Byte
**.unit2.tteApp[0].ct_id = 101
# Connect the traffic generator output to the corresponding buffer.
**.unit2.tteApp[0].buffers = "small_network.unit2.vl_101"

# Connect the conformance checker for incoming TT traffic of vl_100 with phy[0]
# such that the corresponding TT messages will be put into the buffer at ppt.
**.unit2.phy[0].tteInput.incomings = "small_network.unit2.vl_100_ctc"

**.unit2.vl_100_ctc.receive_window_start = 12751tick
**.unit2.vl_100_ctc.receive_window_end = 13001tick
**.unit2.vl_100_ctc.permanence_pit = 13001tick
**.unit2.vl_100.ct_id = 100

# Connect the output vl_101 to the physical port phy[0].
**.unit2.vl_101.destination_gates = "small_network.unit2.phy[0].RCin"
**.unit2.vl_101.bag = 11847tick
**.unit2.vl_101.priority = 0
**.unit2.vl_101.ct_id = 101

[Config With_Crosstraffic]
# Defines the running background traffic (BE)
**.unit2.cli.destAddress = "0A-00-00-00-00-03"
**.unit2.cli.reqLength = 1497Byte # 1500Byte - 3Byte Header (Fullsize Frame)
**.unit2.cli.respLength = 1497Byte # 1500Byte - 3Byte Header (Fullsize Frame)
**.unit2.cli.sendInterval = uniform(200us,500us)
**.unit2.cli.startTime = 0s