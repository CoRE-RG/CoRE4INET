[General]
network = small_network

**.node3.tteavbEtherNic.mac.address = "0A-00-00-00-00-03"

**.node3.numApps = 3
#**.node3.app[0].typename = "CTTrafficSinkApp"

#App: Listener
**.node3.app[0].typename = "AVBTrafficSinkApp"
**.node3.app[0].streamID = 1

#App: Listener
**.node3.app[1].typename = "AVBTrafficSinkApp"
**.node3.app[1].streamID = 2

**.node3.app[2].typename = "CTTrafficSinkApp"


#App: TCP
**.node3.numTcpApps = 1
**.node3.tcpApp[0].typename = "TCPEchoApp"
**.node3.tcpApp[0].localPort = 1000
**.node3.tcpApp[0].echoFactor = 2.0
**.node3.tcpApp[0].echoDelay = 0

#RTConfig
**.node3.networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='node3']")

**.node3.phy[0].inControl.ct_incomings = "vl_100_ctc, vl_101_ctc"

# Connect the output vl_101 to the physical port phy[0].
**.node3.vl_100.destination_gates = "networkLayer.RCin"
**.node3.vl_100.ct_id = 100

**.node3.vl_101.destination_gates = "networkLayer.TTin"
**.node3.vl_101_ctc.receive_window_start = sec_to_tick(1020us)
**.node3.vl_101_ctc.receive_window_end = sec_to_tick(1240us)
**.node3.vl_101_ctc.permanence_pit = sec_to_tick(1240us)
**.node3.vl_101.ct_id = 101
**.node3.vl_101.sendWindowStart = sec_to_tick(1280us)

## Connect the conformance checker for incoming TT traffic of vl_100 with phy[0]
## such that the corresponding TT messages will be put into the buffer at ppt.
## AND
## Connect the conformance checker for incoming RC traffic of vl_101 to phy[0]
## such that the corresponding RC messages will be put into the buffer.
#**.node3.phy[0].inControl.ct_incomings = "vl_100_ctc"
#
#**.node3.vl_100_ctc.receive_window_start = sec_to_tick(1020us)
#**.node3.vl_100_ctc.receive_window_end = sec_to_tick(1040us)
#**.node3.vl_100_ctc.permanence_pit = sec_to_tick(1040us)
#**.node3.vl_100.destination_gates = "app[0].TTin"
#**.node3.vl_100.ct_id = 100
#**.node3.vl_100.sendWindowStart = sec_to_tick(1040us) + 1tick
#
#
#[Config With_Crosstraffic]
#**.node2.numApps = 5
## Defines the running background traffic (BE)
#**.node2.app[3].typename = "BGTrafficSinkApp"
#**.node2.app[3].srcAddress = "0A-00-00-00-00-02"
#
#**.node2.app[4].typename = "BGTrafficSourceApp"
#**.node2.app[4].destAddress = "0A-00-00-00-00-01"
#**.node2.app[4].payload = intWithUnit(uniform(1500Byte, 1500Byte))
#**.node2.app[4].sendInterval = uniform(200us,500us)
#
#**.node2.bgIn.destination_gates = "app[3].in"
