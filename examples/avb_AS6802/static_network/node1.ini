[General]
network = static_network

**.node1.srpTable.srpTableFile = xmldoc("node1StaticSRP.xml")
**.node1.app[*].isStatic = true 

**.node1.phy[*].mac.address = "0A-00-00-00-00-01"

**.node1.numApps = 2

#App: Talker
**.node1.app[0].typename = "AVBTrafficSourceApp"
**.node1.app[0].streamID = 1
**.node1.app[0].srClass = "A"
**.node1.app[0].intervalFrames = 1
**.node1.app[0].payload = 350Byte

# Defines the running real-time application of node1 that generates TT traffic.
**.node1.app[1].typename = "TTTrafficSourceApp"
**.node1.app[1].action_time = 980us
**.node1.app[1].payload = 46Byte
**.node1.app[1].ct_id = 100
# Connect the traffic generator output to the corresponding buffer.
**.node1.app[1].buffers = "vl_100"

**.node1.vl_100_ctc.receive_window_start = sec_to_tick(970us)
**.node1.vl_100_ctc.receive_window_end = sec_to_tick(990us)
**.node1.vl_100_ctc.permanence_pit = sec_to_tick(990us)
# Connect buffer of vl_100 to phy[0]
**.node1.vl_100.destination_gates = "phy[0].TTin"
**.node1.vl_100.ct_id = 100
**.node1.vl_100.sendWindowStart = sec_to_tick(1000us)

# Register the buffers of vl_100 TT output traffic phy[0]
# This reserves the slots required for the corresponding TT messages
**.node1.phy[0].shaper.tt_buffers = "vl_100"
**.node1.phy[0].shaper.TTEBandwith = 3

[Config With_Crosstraffic]
# Defines the running background traffic (BE)
**.node1.numApps = 4

**.node1.app[2].typename = "BGTrafficSinkApp"
**.node1.app[2].srcAddress = "0A-00-00-00-00-02"

**.node1.app[3].typename = "BGTrafficSourceApp"
**.node1.app[3].destAddress = "0A-00-00-00-00-02"
**.node1.app[3].payload = intWithUnit(uniform(1500Byte, 1500Byte))
**.node1.app[3].sendInterval = uniform(200us,500us)

**.node1.bgIn.destination_gates = "app[2].in"
