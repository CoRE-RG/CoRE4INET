[General]
network = small_network

**.node2.phy[*].mac.address = "0A-00-00-00-00-02"

# Defines the running real-time application of node2 that generates RC traffic.
**.node2.numApps = 2

#App: Talker
**.node2.app[0].typename = "AVBTrafficSourceApp"
**.node2.app[0].streamID = 2
**.node2.app[0].srClass = "B"
**.node2.app[0].intervalFrames = 1
**.node2.app[0].payload = 350Byte

**.node2.app[1].typename = "CTTrafficSinkApp"

# Connect the conformance checker for incoming TT traffic of vl_100 with phy[0]
# such that the corresponding TT messages will be put into the buffer at ppt.
**.node2.phy[0].inControl.ct_incomings = "vl_100_ctc"

**.node2.vl_100.destination_gates = "app[1].TTin"
**.node2.vl_100_ctc.receive_window_start = sec_to_tick(1020us)
**.node2.vl_100_ctc.receive_window_end = sec_to_tick(1040us)
**.node2.vl_100_ctc.permanence_pit = sec_to_tick(1040us)
**.node2.vl_100.ct_id = 100
**.node2.vl_100.sendWindowStart = sec_to_tick(1080us)

[Config With_Crosstraffic]
**.node2.numApps = 4
# Defines the running background traffic (BE)
**.node2.app[2].typename = "BGTrafficSinkApp"
**.node2.app[2].srcAddress = "0A-00-00-00-00-01"

**.node2.app[3].typename = "BGTrafficSourceApp"
**.node2.app[3].destAddress = "0A-00-00-00-00-03"
**.node2.app[3].payload = intWithUnit(uniform(1500Byte, 1500Byte))
**.node2.app[].sendInterval = uniform(200us,500us)

**.node2.bgIn.destination_gates = "app[2].in"
