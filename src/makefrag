EXTENDED_WARNINGS=1
WARNINGS_ERROR=1
CFLAGS += -std=c++11
#CFLAGS += -Wall -Wunused
#CFLAGS += -Wall -Werror -Wunused -Wdocumentation
#CFLAGS += -Wall -Werror -Wunused -Weverything -Wno-c++11-long-long -Wno-c++11-extra-semi -Wno-weak-vtables -Wno-shadow -Wno-global-constructors -Wno-exit-time-destructors -Wno-pedantic -Wno-missing-prototypes -Wno-used-but-marked-unused


UNAME_S := $(shell uname -s)

#Currently forcing clang interface on OS X!
ifeq ($(UNAME_S),Darwin)
	CC = clang
	CXX = clang++
endif

#Special Flags for OS X
ifeq ($(UNAME_S),Darwin)
    LDFLAGS += -headerpad_max_install_names 
endif

#Warnings generate errors
ifdef WARNINGS_ERROR
	CFLAGS += -Werror
endif

ifdef EXTENDED_WARNINGS
#Warnings in clang and gcc:
ifeq ($(CC),clang)
	#clang
    CFLAGS += -Wall -Wunused -Wextra -Weverything
    CFLAGS += -Wno-documentation-unknown-command -Wno-padded -Wno-global-constructors -Wno-exit-time-destructors
    CFLAGS += -Wno-error=unused-parameter -Wno-error=header-hygiene -Wno-error=documentation -Wno-error=c++98-compat-pedantic
else ifeq ($(CC),gcc)
	#gcc
    CFLAGS += -Wall -Wunused -Wextra -Winit-self -Wswitch-enum -Wuninitialized -Wfloat-equal -Wsuggest-attribute=pure
    CFLAGS += -Wsuggest-attribute=const -Wsuggest-attribute=noreturn -Wsuggest-attribute=format -Wconversion
    CFLAGS += -Wuseless-cast
    CFLAGS += -Wno-error=unused-parameter -Wno-error=conversion -Wno-error=suggest-attribute=noreturn
    #CFLAGS += -ansi -pedantic-errors
endif
	
# use -isystem instead of -I flag, to hide warnings in these files
RELPRJDOTS = $(subst o,,$(subst o ,/,$(patsubst %,..o,$(subst /, ,$(PROJECTRELATIVE_PATH)))))
ifneq (,$(findstring MINGW,$(shell uname -s)))
    # on windows we need this hack for pathes like -Id:/...
    override COPTS := $(shell echo '$(subst -I$(RELPRJDOTS)/.,-isystem $(RELPRJDOTS)/.,$(COPTS))' |sed -e 's/-I\($(subst \| ,\|,$(addsuffix \|,$(filter %:,$(subst :,: ,$(patsubst -I%,%,$(COPTS))))) \/)\)/-isystem \1/g')
else
    # on unix we can use this
    override COPTS := $(subst -I/,-isystem /,$(subst -I$(RELPRJDOTS)/.,-isystem $(RELPRJDOTS)/.,$(COPTS)))
endif
$(info Replaced COPTS -I directives with -isystem directive: $(COPTS))
endif




